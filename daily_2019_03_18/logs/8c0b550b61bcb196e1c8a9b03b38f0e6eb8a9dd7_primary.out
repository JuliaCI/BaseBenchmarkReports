cset: moving following pidspec: 1841
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.325790563 seconds)
loading group "string"... done (took 0.585752316 seconds)
loading group "linalg"... done (took 7.359815785 seconds)
loading group "parallel"... done (took 0.173842042 seconds)
loading group "find"... done (took 1.16733009 seconds)
loading group "tuple"... done (took 1.786293968 seconds)
loading group "dates"... done (took 1.222009808 seconds)
loading group "micro"... done (took 0.22825869 seconds)
loading group "io"... done (took 1.041784756 seconds)
loading group "scalar"... done (took 39.961754692 seconds)
loading group "sparse"... done (took 13.210926895 seconds)
loading group "broadcast"... done (took 1.014927096 seconds)
loading group "union"... done (took 13.810002481 seconds)
loading group "simd"... done (took 4.704468854 seconds)
loading group "random"... done (took 9.506625303 seconds)
loading group "problem"... done (took 2.006290734 seconds)
loading group "array"... done (took 22.542716962 seconds)
loading group "misc"... done (took 2.043192399 seconds)
loading group "sort"... done (took 3.430719274 seconds)
loading group "collection"... done (took 19.353851289 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.56172747 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145864679 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11921627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.143600189 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191831848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135141195 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145495465 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086227693 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.985732154 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.163713944 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142172566 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519963472 seconds)
done (took 5.182312063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.201166435 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088796576 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099126462 seconds)
  done (took 0.971736188 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06648707 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129373036 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082713134 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068013432 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067526888 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082572941 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067705135 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066274868 seconds)
  done (took 1.354456806 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074993488 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069769509 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086359333 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068731222 seconds)
  done (took 1.092364375 seconds)
done (took 4.478444298 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.945078592 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.258532749 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192678156 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.469391061 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154354206 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190718165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675503856 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32314594 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216667601 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103150477 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107269999 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395147728 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107886331 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.669330615 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076786741 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110038096 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161022846 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.412167344 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083463757 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083313095 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105395276 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143201729 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103584164 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079565573 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170343071 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070462399 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.154851307 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096335157 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068848854 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250532493 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191095107 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.69129167 seconds)
  done (took 10.694553757 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100363978 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122341641 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069136554 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14292718 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121473136 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072251802 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072233 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085528711 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09378584 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163579313 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11886419 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125116004 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068519112 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070789386 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103873669 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230877382 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093042901 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104067282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073094366 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07545562 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124896047 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099772455 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082112774 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096138781 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153715366 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194316623 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098956647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113781788 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070189341 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09914567 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131117973 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133224141 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065830142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084914843 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.158708776 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096056804 seconds)
  done (took 4.710336915 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.126288188 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.17942408 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094818492 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157987139 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.099973743 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085393285 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11311778 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085666543 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103421473 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066490422 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255963446 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.184547225 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.496573681 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132276917 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089838609 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068822333 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089477692 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069065844 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.632305143 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147907914 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105636114 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104576364 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075551585 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.089689498 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371545916 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070412109 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067255862 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086582503 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060458365 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151050766 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110803755 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071006498 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.277951935 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.090345927 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090209734 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103733868 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204717549 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098924493 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126068041 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083943432 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067991989 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174529006 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074202993 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086281028 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.0900344 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12354119 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12324836 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085258381 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069124926 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.185537898 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067949972 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.102196508 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.952140684 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168801322 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078988237 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066785839 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297897409 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104333999 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067897946 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064560243 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.271512325 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.165109752 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068170341 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085602807 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067172715 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085966564 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382596838 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069198052 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.725805617 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073381138 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078300184 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08705705 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068194896 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092089386 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074512169 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103669515 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068539198 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068993873 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085670741 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066795544 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086922918 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087793523 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208143692 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.089827849 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068291194 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082644006 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08837838 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113447353 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071785104 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066821455 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119169403 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070167267 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08611098 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103250566 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087272872 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103407724 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071661928 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131353057 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06841244 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169785691 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070006767 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115028147 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066539416 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087591204 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101926115 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.103309367 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069166934 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157597898 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065725507 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084540014 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.0680753 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08327534 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069496766 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068724988 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100855715 seconds)
  done (took 21.693710459 seconds)
done (took 39.014281446 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.312944038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096469822 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096522948 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077003397 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.096872805 seconds)
  done (took 1.547600274 seconds)
done (took 2.380328688 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152867611 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104790079 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083166673 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099640853 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083269017 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104359848 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120178444 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082886348 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121998127 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064620578 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116676394 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065194769 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082678924 seconds)
  done (took 2.147735791 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084271649 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085432721 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088756615 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081970673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081933367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082917054 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080190103 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10789457 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081184587 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091098331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065565867 seconds)
  done (took 1.758957504 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082947839 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084195825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088539855 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081655849 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081625185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082821226 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080364989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104326534 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081707185 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090620727 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066173644 seconds)
  done (took 1.757953304 seconds)
done (took 6.488205271 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080422377 seconds)
  done (took 0.907354491 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.757269201 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.919487993 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085867514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137117132 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225101076 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1599738 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.461499387 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113228939 seconds)
  done (took 10.898719524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.116136766 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.092684121 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071408299 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091979554 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073762186 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089575585 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074503829 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07195952 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090110495 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069798424 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088241246 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07012884 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.089807475 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071205676 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087710296 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070937074 seconds)
  done (took 2.214266928 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105779931 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105027724 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094573792 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077272877 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092948991 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073986989 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095862146 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076633789 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091299286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073532559 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094633817 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07584812 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092460163 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067273795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.093622133 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077912198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090563557 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077022584 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095287056 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077070671 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095794998 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065657368 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.09213336 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076213336 seconds)
  done (took 3.005755677 seconds)
done (took 17.856119724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.137255142 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079348256 seconds)
  done (took 1.049923278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084845166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101414868 seconds)
  done (took 1.028449375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085542289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084249583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091236785 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098077345 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085009047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068955489 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106157603 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068201359 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084537696 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068933943 seconds)
  done (took 1.681909807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071182515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096489452 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072421192 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099631754 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076717669 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083368035 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074682057 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087024489 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080264431 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082169302 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072875223 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.101986978 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072499462 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104698784 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091769054 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071476641 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089961393 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069471686 seconds)
  done (took 2.339991744 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068644178 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068722031 seconds)
  done (took 0.981291557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070085067 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064736903 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086070624 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067425993 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082787368 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064743413 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082338676 seconds)
  done (took 1.363157272 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.418067081 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110202044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.270875924 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073819823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108448946 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300158268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068094928 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071192741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09143303 seconds)
  done (took 2.396589195 seconds)
done (took 11.678020133 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081648591 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086623461 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115506981 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.443733923 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111262218 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067551189 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148845445 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21840535 seconds)
done (took 2.115922339 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128797783 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638129879 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417471479 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218617624 seconds)
  done (took 2.12304465 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392191237 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093517201 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076602358 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069128705 seconds)
  done (took 1.480477712 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068383724 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070609175 seconds)
  done (took 0.989778881 seconds)
done (took 5.566110225 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069396415 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.117905295 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068326199 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065108828 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087168414 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065293937 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 0.064713604 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087489774 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.065316135 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083615483 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068332873 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066979292 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.085085346 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.068305501 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067246828 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082705447 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06535876 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067517666 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.083627365 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065310121 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082474715 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068740088 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064865873 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.082960021 seconds)
  done (took 2.682026668 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087657541 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085745917 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074449845 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089984388 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073161215 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.090434766 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077393389 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067630475 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091646009 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069337524 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08946039 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071501248 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087441751 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072915542 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087746139 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07324632 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091090857 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069804504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069785872 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090415811 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072085167 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087211642 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072138283 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091575198 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070964851 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090567044 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070249414 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086494757 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073780355 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08933031 seconds)
  done (took 3.266799883 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074558131 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065008208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08388388 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073070463 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064221061 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085751642 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065204481 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083077113 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067681966 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064872507 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084736072 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065879712 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064756422 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085097695 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065770891 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08628724 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083130349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065245371 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.083633566 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066434373 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085788584 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066538362 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064936673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083403705 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065374368 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064282586 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083290557 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065780256 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082904792 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066287388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067784749 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086970992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065308223 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071416055 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087419328 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065571492 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068325871 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083689967 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066695061 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082329342 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066023597 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064836945 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08274699 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072914442 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065589333 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.087095765 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065556502 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08461046 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.066430191 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06858495 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08358836 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065252178 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084771369 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067689065 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069030697 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083086851 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066527921 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064445182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084749053 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065214556 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082871244 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065650559 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067575304 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.084578748 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081741857 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.089661895 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06714678 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067876503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084703363 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068693058 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066452924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098164319 seconds)
  done (took 6.191024987 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122766861 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095117486 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086466077 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067992584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081725851 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067053063 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069648878 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084398203 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067755212 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090350702 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065786019 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084695753 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069076824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081307718 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084954653 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068418568 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088978734 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064878496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065415154 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088194649 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06579001 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088042298 seconds)
  done (took 2.608709509 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.194135627 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090088699 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112739077 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09534957 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086766449 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076884719 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088951309 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072678081 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071191232 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088864821 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070265646 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090161329 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06948168 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088107893 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070712087 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089473279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072872131 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088184745 seconds)
  done (took 2.474647815 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080934804 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06750631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110441779 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067657986 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08806976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070673499 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092365828 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075916857 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089420046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06850402 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095393647 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.180047608 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08898287 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069064911 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087294365 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068918545 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069937096 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087186039 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076352745 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09129695 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072362426 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094772769 seconds)
  done (took 2.752098505 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083536555 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068349235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10586561 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087432513 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065287297 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066291132 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093425921 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068245243 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.092583085 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069948191 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084895639 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06964151 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072830187 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086886466 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072291091 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086089204 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069602298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085270941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070939192 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063206838 seconds)
  done (took 2.423961961 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09159142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088034361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070406956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095554369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06999894 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087445165 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079318051 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087742687 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070031563 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11311042 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069295707 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087599486 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07844147 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09340801 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068978835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095792492 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094539055 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079141133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086489361 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070599617 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111542499 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07020717 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09592667 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069398338 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087487051 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070147155 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086463488 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076460582 seconds)
  done (took 3.211314619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069310216 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06762665 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083631567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067168013 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064956533 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08485933 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066508654 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065469483 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087186581 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065931755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085568101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069586804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067930443 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085859165 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06888602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067213668 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086414733 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066182822 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064434025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08424081 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.068136559 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085794933 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069112838 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065175886 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084192919 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068405469 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06465623 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084580409 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068643826 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065411061 seconds)
  done (took 3.060318957 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079363947 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09358839 seconds)
  done (took 1.04139585 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067395326 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081470942 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085034839 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07210189 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091205702 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068908963 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094954094 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073567715 seconds)
  done (took 1.501062869 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085322251 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078743547 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089637831 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097872735 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080419947 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085245843 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162458105 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088773033 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074624402 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085878315 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083657207 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085820167 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075480962 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068371167 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093198025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07556116 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.083863594 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075537684 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070136324 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.085723826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069244577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098187746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070640979 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08308636 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070730327 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076555031 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099165091 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068967917 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091454011 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075446777 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092477647 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063515246 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067227892 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088774715 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065933207 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097007454 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084734524 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090849618 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077232206 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088028945 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078990553 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.082235975 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07373929 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092510115 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07984888 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068246762 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088037552 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06374673 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083603577 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071917333 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063857865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087862573 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063234316 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093963733 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073295514 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078415237 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086662465 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069036468 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089765914 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072621242 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092525289 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071570207 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069824813 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086842514 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075498974 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091326783 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078387281 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.080973959 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063382302 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065512843 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09735779 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09121193 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092772452 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069763221 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08778152 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066582701 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07150989 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088839763 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073870093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093565575 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068627761 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092700347 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075944469 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086938886 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07147696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09408918 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068213118 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070125695 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084973769 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084954414 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086806369 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066735015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065200441 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.098834396 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071361338 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.086771731 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066405977 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093178529 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06403515 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068111969 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088355007 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06914387 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097894953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07346785 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092664296 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077665933 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095049558 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069197427 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089731997 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066394255 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069287958 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085993452 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075648664 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079856089 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072199465 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068710734 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.088759708 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077602367 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085314874 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068976153 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093339865 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074249753 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066029647 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084414901 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071726009 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08595075 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073133205 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094218814 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068246066 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064126472 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082616243 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072101511 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08557067 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073508765 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07299915 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091293199 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062927476 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084634061 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074271652 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09686178 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069293718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068443619 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094611874 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069022603 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087390002 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075680327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089326138 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068444495 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074197075 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088244612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063892938 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090394348 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072066055 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066139689 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091690945 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072025924 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090217238 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069148422 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084839185 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075300341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068288232 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.08711795 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068131858 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085502935 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080134422 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088547676 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06454662 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065232752 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094535553 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06647406 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086631025 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068778552 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071164437 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088011906 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066351051 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.086092117 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071268748 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097962849 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073566423 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068800146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093269482 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079012579 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08766672 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070532794 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086171523 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070526708 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069653012 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097659412 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073084262 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092684439 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070452587 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083877047 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074113929 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094076125 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06883504 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066103179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086406262 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072737644 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092550214 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072566787 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087562185 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067636436 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068417002 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09037855 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072153697 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086958544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06811174 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072679718 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087061515 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075138273 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088958209 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078772492 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091193296 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06418075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090457785 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0669166 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073693588 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083327898 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065647426 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.0850834 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071176638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066655518 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090461275 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062919095 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093452999 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077132059 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068352559 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087316235 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068641737 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093969005 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07072081 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071359685 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091869284 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074279158 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098640169 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067618701 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090673628 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079310578 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086852335 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063901235 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072888952 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.086150751 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067088364 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085718589 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067190183 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070517374 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096326099 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075029939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082627783 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071483079 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.085704609 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068132397 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063818013 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092227489 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071078461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087719997 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075968525 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068563216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.089101032 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071511131 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087396078 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069239619 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087602168 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072329899 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0683638 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090604051 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067865866 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09029937 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068375745 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065505307 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090089078 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068278001 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086601696 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074630003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067382232 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088184491 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070640056 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088355722 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069731378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086668528 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069074755 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071591772 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089172229 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069367123 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088566061 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065062241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075667499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08815081 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076384674 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087368034 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066227463 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07302752 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090849717 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073633058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089248627 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06913102 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088121207 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06873999 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07030387 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094442824 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065793993 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099580501 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077080888 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088326312 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071552922 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068223903 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08967955 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067658498 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088215837 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069821157 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068670757 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087614461 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072649151 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090824989 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06922125 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088368717 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070456081 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068229637 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08917183 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064290585 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085154788 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06932078 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068054478 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098796557 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06887027 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086804991 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067654229 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068825043 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086931602 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065847754 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096453579 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078130761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088298567 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076036541 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086451082 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070186459 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097914618 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066530556 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066072263 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086209622 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066388108 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09442602 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070516198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077275178 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.088136019 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068079816 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083715106 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070440876 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066037344 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.082570975 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066938917 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090678734 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068260421 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067782762 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.087599179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071745639 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088359722 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07945948 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085876442 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070312739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068627885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085336742 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06797603 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066718788 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091209347 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.068455798 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085571691 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067091788 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067635164 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089184626 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069749768 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087419576 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07037487 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075382437 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088494628 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071218971 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09225438 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063828395 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090317522 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069259056 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067896593 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08741764 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072075445 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090789995 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070296855 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095625972 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069509727 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06880594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089077964 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066616798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08659775 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069483729 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067917135 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088223826 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069377807 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09540338 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066922199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071224114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088688077 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.0689824 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095620887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06961168 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090056377 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076943636 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068520499 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090656271 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076077278 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.091894587 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071852901 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089036168 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070897759 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092848136 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068455069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074425299 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088793931 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069993074 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088545538 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067263565 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067531432 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088326073 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068019964 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093856635 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070528297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06795468 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088281571 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067490581 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088340697 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073072705 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094948089 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072726401 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07100994 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084098342 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066614358 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087876522 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067698181 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06984595 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091797192 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074209836 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090065119 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070217713 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067072268 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098379096 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073755423 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091823167 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066516235 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091582626 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070550788 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070339768 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089857818 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068826167 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089097635 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073792366 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069965214 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087679948 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075499028 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091791538 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07031429 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088270734 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07053776 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06818261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.083625123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069809721 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089787383 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074848573 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070493996 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088413666 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078958713 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085908227 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06918635 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0901055 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069367178 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072446506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083919597 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069741973 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088600393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071105919 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063277064 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087600435 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066925911 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089046131 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068531624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063837339 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099008731 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076781315 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091327945 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067324355 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08609689 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064847132 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064039907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087323453 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070189761 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088971504 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079789022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066705225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088055792 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063698779 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087541088 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072533518 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071243972 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085722526 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063795173 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086959447 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072727495 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072801884 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08806348 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067625474 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091441002 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071041555 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065642146 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092699258 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064802316 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091553098 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081885626 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.089106034 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069859759 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094618384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07747122 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069141711 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084926334 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.0692556 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091663166 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069387797 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087694273 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070618031 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102894326 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072947308 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067070364 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0881315 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071427699 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086554921 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07820416 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068644328 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089544465 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072903247 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09016079 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078157541 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090866119 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077003593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091214489 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072947509 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066760909 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089225732 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066735451 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085946162 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070678307 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069262796 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093341114 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07595144 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088366807 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079297933 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097800873 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069821284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08448831 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06914463 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067095447 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.083857316 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070529676 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085496208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068389083 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06657157 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087660502 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069664862 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093200208 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071518252 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069252427 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088719309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063361702 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06995326 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091355865 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069676736 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085925332 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069441252 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088258645 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073960443 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071575775 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086817094 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0706445 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090368841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070877147 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063798128 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09647573 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06752347 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090296764 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068774127 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068576199 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089616084 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07170311 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09335471 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06996024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.090504787 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078279963 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070178266 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.087097071 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066005611 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09389204 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067126604 seconds)
  done (took 47.808980412 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110820719 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085878925 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063769222 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083416892 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077421268 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084903082 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064738395 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063704279 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085783275 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067430841 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084114791 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064566665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092672998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088472108 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097298513 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087701841 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065346929 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063982114 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084322119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065024906 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093452566 seconds)
  done (took 2.588452554 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088575362 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104259522 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079426598 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104090419 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093560852 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.079896645 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09981823 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078736386 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104301073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094493236 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084551666 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100199219 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075453942 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095688234 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075015067 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097824244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102278662 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074863185 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099821494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078405266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097704949 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098134819 seconds)
  done (took 2.916534881 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070118453 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067337038 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089566746 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064277201 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06682295 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084177339 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072179871 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086354197 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071761803 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066165701 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087908481 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066544353 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097207679 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067367708 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067107639 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086651307 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134604436 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071801478 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087601408 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069629481 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062698464 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091606521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063608807 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083134514 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068366869 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071512031 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089378058 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066637095 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087284939 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068002844 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068004217 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.086076237 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069768772 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068342989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087621827 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066525504 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087480753 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069077404 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063321391 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086916188 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069015353 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.08378157 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069662085 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068377159 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08646829 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066188375 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068416962 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08894416 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063443147 seconds)
  done (took 4.656295075 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088226908 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.144297779 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091933551 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125342589 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083838851 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097438824 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07135029 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126853847 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086556191 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068597478 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105774437 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083947648 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090182704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072549293 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096266026 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068945068 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089663693 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068071977 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.093249579 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06796768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092786631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0753595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104093761 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101283792 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073696161 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067302616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088822439 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072729523 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102184596 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093009761 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073862003 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093540304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084373546 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094700546 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067413348 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.090402879 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084534786 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.090112022 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070187218 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.08606425 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.0704888 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093017198 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076245404 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105465288 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068505004 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094301008 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068150197 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084958609 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081167321 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09117038 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076276908 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10374828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091186915 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069564604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071653465 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085163646 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088255025 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067260971 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090634865 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082296924 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085479105 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073254284 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102323721 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070076479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095959648 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083097133 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.095175923 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071481672 seconds)
  done (took 6.927896659 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079057448 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094377803 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083268482 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1042881 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094626217 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076142187 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094875753 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075060452 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095362854 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07887744 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094885793 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117745197 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069795859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098252906 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074612319 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095885906 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074109115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095475805 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093979359 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07541825 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094241454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082572599 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095680262 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102986306 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103930863 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090213777 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074604651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094971514 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103441831 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075938864 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106911067 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074340764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0959305 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103477913 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087490696 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095303626 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067026201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094886018 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073704491 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095807844 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069074953 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104209688 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094610809 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070007755 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095335882 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075694287 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10416615 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107530657 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078062027 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099873736 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074081001 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105181802 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094967486 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075466422 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103190651 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128696031 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082307484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103805658 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094569425 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083843895 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104249912 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111719717 seconds)
  done (took 6.564049942 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090677191 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098148905 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099620894 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065322975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066283869 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093574235 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066467057 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.087033852 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078142891 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097679102 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080365896 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092798132 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074280846 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100626918 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092089592 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076131513 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092691818 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071287831 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097566249 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071618037 seconds)
  done (took 2.615305333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078524562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105734629 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070063276 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094807328 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072812132 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074276377 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092389946 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071058891 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090565168 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071672292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099225453 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078839613 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090332824 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07522948 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099784454 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074765675 seconds)
  done (took 2.266460557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081683289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100239483 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083543608 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090692511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067490075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.086363037 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069977417 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063535411 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086646529 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083162065 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091174995 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071182797 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.090193772 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067882908 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064421728 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093116128 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064395712 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087846923 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068357361 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104757015 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.079380334 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087961602 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069376966 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090860486 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070274969 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095080755 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06960104 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065341221 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088195422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068887442 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090283702 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075508421 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086386731 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06803824 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086490244 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067307455 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067818064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090295352 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070977501 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089272093 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067354848 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087510242 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069855413 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068888393 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.086402739 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068824428 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084623097 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074940079 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06566792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090704573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067763213 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091908462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068960256 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099747303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071769889 seconds)
  done (took 5.288664195 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083304701 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071153386 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085955323 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06605761 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091669526 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070844367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071546105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092503563 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070373937 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087615292 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070949103 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091125085 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070841557 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070728989 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092051443 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07173154 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084960278 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070500658 seconds)
  done (took 2.345220547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075482557 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068984785 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097130437 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068594483 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089312333 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071487182 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064583938 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088545345 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066395913 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089105817 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069902601 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069802526 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088478473 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070702983 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0891584 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069777637 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070461426 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088654642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068319781 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084985368 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072072201 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066212697 seconds)
  done (took 2.618729932 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075444918 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095491268 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16814604 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112447655 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083720318 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103082982 seconds)
  done (took 1.570102935 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093184143 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103104309 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069528639 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10973957 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078030587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091155048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071730757 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090439086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080210008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105726775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069695921 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100818821 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099703046 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081503317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098424603 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075550253 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091313357 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069922382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09019148 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11008921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071494895 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099012667 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070463857 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091091279 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070435824 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100178901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098668821 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084605748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091566118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078374839 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097714851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069509884 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100787672 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104906703 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07193108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100244984 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070502759 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110971131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096327258 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079825442 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093024608 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07775677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100345102 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074589986 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101125394 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09107853 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076720442 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091693081 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071426512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116922164 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097470148 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080031963 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097429073 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07967273 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100713893 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117781391 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105120033 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078999465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097541261 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104476502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07921366 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097506774 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07771723 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105343292 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098375752 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078255822 seconds)
  done (took 6.862427358 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086166489 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109259867 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070911726 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105836029 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099478793 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071177867 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090709751 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071408942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090629656 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071546857 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133255907 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069901217 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099701997 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100544166 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071081225 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091365261 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070976758 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100475185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069653096 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117650137 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090471664 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079956096 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099987914 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099645361 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083502065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098338873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070209952 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092244664 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069865038 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091961896 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095664384 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07160496 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0993801 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070188889 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09991224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07076728 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091238968 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075625815 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092869208 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096175268 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080451488 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110863552 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070114211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093200183 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106078139 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071702405 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091200703 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070239003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091129628 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070613204 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105491344 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08360245 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106522218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100147521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070464582 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091935657 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070682254 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092169404 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070549488 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097873582 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099885992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071440335 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117995692 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070451811 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092478952 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099965744 seconds)
  done (took 6.768095854 seconds)
done (took 133.858216453 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205925998 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188949226 seconds)
  done (took 1.327593065 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070975859 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.118618431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082572269 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129954499 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090444296 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102070837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121362195 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081992202 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068115922 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091257598 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068243943 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090534129 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133957761 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068300009 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09025745 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070072547 seconds)
  done (took 2.418207361 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10685994 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202026657 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114562762 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066843049 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104481614 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080100024 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088765901 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079558036 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096144563 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068435343 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100570481 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.078879961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066328314 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100064244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094362438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081845229 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066625928 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102221867 seconds)
  done (took 2.641774812 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109101291 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150380973 seconds)
  done (took 1.198092809 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205688646 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127462811 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.21327793 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.44506321 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.235847897 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.283491572 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182908153 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183111698 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163427405 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.179977874 seconds)
  done (took 3.152758192 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101915779 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176234046 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.32482951 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142455186 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090244243 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119437877 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143676161 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112519562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085132995 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106824747 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10443208 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079536752 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122547418 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076792596 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098494674 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078641435 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125278261 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076128737 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101162466 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077994898 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.121744913 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06742109 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099236561 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075329226 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10306196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080148942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089925571 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067931448 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098899559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078161692 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.102266858 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117419765 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081916657 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135499231 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106756314 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136852511 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.10005142 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076239615 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076583548 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0970221 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078246089 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102544109 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107521421 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08025997 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067675536 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101471023 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067942125 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.089602786 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082347716 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101599594 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081937549 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.103253583 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136470144 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101025149 seconds)
  done (took 6.497516423 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.76667041 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138475247 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074548243 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.828262392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118516025 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08522312 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.749831535 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095092888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.239009247 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759420952 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115853835 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078354904 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.209407157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.218689581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.909976116 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.288748106 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.642950165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1083718 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110042671 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136645797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166178591 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160169922 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151567361 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.411886374 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099184615 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073189762 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140285048 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101665695 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143988732 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.106672986 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075710728 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159524834 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251992716 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164496243 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075677664 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09502137 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071580525 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1509953 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244802684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196313946 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162249876 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070606036 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071420961 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.166280013 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134675536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07032604 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146009542 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155151092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174637206 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075451947 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100518315 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147751496 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143480876 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.146234532 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104889971 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290699289 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.272790176 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094480884 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124567413 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085941892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242580095 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104168322 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18432496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143421449 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194046467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072150999 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.758495851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152536014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072262532 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100460583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.124083282 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076250264 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.165870998 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.12779304 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389658782 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171397109 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076599639 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071414787 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20955438 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085648143 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095585135 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144755281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076277506 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127076281 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.17117801 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151934903 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15276377 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209055611 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.169901871 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.145100803 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075642654 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129344392 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100189743 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194826538 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199707023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146150762 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192168045 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145174608 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.145398585 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.172281747 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080526871 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153342453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123481869 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106769684 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14404159 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.197071792 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.12657478 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084650279 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098114842 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.145323986 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130722767 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087257855 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.165838208 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.154518364 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.436127621 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150070507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091843736 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088814917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.165932788 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.14600946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077402857 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242996037 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127818405 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151469858 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125746478 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069362308 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124184692 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145057455 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10392761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12703129 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.143300483 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100419426 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220167004 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.174557146 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104649353 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199930494 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166943944 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100707522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155743444 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124935637 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150480666 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101269568 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144989165 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077005782 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752568835 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147512987 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126302362 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097426572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146663006 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094601029 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084096459 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107471451 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068769613 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769552431 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109678316 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08290222 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10750011 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076573649 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126108098 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139732399 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098873975 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143713948 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210350793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078556481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123964902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.107350179 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144379361 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098264498 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08642778 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.107121793 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.08509664 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126401556 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097392862 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08480519 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173598645 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14617662 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.176562897 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577561484 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071378213 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107909237 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207818478 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072568224 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.270169034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141658544 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20583024 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146861152 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081382206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301368381 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146839894 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168631348 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10890847 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157557293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069660803 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162727157 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.149038227 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072743413 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099162569 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.147699744 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.150599845 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146812376 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953523277 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071703069 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230103797 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070044121 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.154495797 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099463638 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080015406 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268541053 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071685574 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175246704 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148465339 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074080633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10736273 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.830168367 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108308513 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144012794 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099738436 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17973266 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168940173 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.14222724 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.142966978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078502109 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166585399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194368878 seconds)
  done (took 41.658803189 seconds)
done (took 59.828145559 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287302008 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.196484182 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261942124 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152051841 seconds)
  done (took 1.937443674 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.151937451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107976567 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122992045 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089419972 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107556764 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090765502 seconds)
  done (took 1.634628022 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.440588958 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282233815 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242802002 seconds)
  done (took 1.929889147 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.308799193 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235202297 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.461726833 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308441876 seconds)
  done (took 2.388408003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.198176172 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118081009 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.09272242 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088414578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165737924 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.270752681 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129479413 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194481114 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080254874 seconds)
  done (took 2.34981107 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207397534 seconds)
done (took 11.408209176 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.276939742 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.317131894 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.184190343 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.141633576 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.265858982 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112109146 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.167879009 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.348246669 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.161831279 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104458135 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084491113 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.176433422 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09773355 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.165532292 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.198670857 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.081424296 seconds)
    (17/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.206054568 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077419526 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.100073905 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.187495344 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10405804 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.087392276 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.142139129 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.128156495 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.145437356 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.154169489 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152012822 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.273705953 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092618959 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093628543 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081179806 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.195970467 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.095339529 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.13381383 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.110488499 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.26868448 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075973962 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.221955672 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.102922536 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086119651 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155990769 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.097860213 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.132412778 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109301308 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076857067 seconds)
    (46/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.074282995 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095865903 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.264765338 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173728696 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099475294 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09481217 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09200341 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.195641733 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09286895 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.115168308 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.243627962 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094815265 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.144830144 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13571741 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053431988 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.1010614 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074411469 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.168390453 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161142493 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096190988 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.12152065 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.242888139 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078020074 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054326367 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126505949 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05402892 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055345712 seconds)
    (73/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.109110548 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.258000771 seconds)
    (75/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080167936 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076694138 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.070050328 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.120580901 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055897485 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076735783 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.106816663 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 0.130759494 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.137772107 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.197183866 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.284247323 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074267718 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.122630094 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079669105 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072337452 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.185221912 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241650637 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06692752 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098254677 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101263812 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.176233306 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068143124 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.097825079 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081084751 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.167225375 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215397838 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116375295 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.221671163 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119942373 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06994335 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.243788029 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101722019 seconds)
    (107/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102788052 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119320564 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.148801581 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097718639 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.247505895 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152037321 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.181785243 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143217876 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07754756 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.273674765 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.246695985 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 0.163604011 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079554438 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 0.170888469 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.253855382 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075527854 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.09224552 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065627038 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0735956 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100556892 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053806831 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.100114361 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073625479 seconds)
    (130/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063623428 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.099614116 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.223833537 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.088417503 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.257776403 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078998727 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075598261 seconds)
    (137/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092295119 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054161219 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053787461 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.318870642 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137221124 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100689708 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056177885 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090637889 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069643299 seconds)
    (146/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082618622 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.105354247 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078903075 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.094330957 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.099133096 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148300002 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091378106 seconds)
    (153/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.123914852 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.238366807 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.101865042 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074861866 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.076307365 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076325039 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07007189 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.091497339 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05439522 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.123859398 seconds)
    (163/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054684363 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06730669 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139791345 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067842126 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170798957 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063049592 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.117723548 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055399197 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068128928 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.088123691 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07052488 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066515483 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099287526 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.053639154 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.1213891 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07203779 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067837826 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076829711 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07814304 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20524617 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082724784 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094872541 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090241896 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119707094 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077988082 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066216211 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.088876331 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06718924 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.168418794 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068229397 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.100073506 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06817447 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16872716 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068399701 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066593164 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099081191 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076866485 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094506332 seconds)
    (201/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063692672 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075984524 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140756196 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090946321 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.100708209 seconds)
    (206/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055091458 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069861805 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.198419737 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100229561 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076968453 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07439285 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097227871 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070008513 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074615008 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.077703774 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074511271 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113880312 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068433656 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.247426224 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05449614 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143544533 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067224959 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075460638 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094372306 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074632598 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.091744991 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.221831769 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205128279 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054287249 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167409984 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054026296 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079491022 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065201606 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142640065 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071021963 seconds)
    (236/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069529325 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078273505 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069655666 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054587528 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.086182646 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.144936924 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.124421122 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053662606 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052975432 seconds)
    (245/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.08790579 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054291342 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054023744 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.09165375 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.23124124 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.091349398 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092427636 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117275939 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171651857 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090810396 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06916193 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113786849 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069694853 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097889478 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.06924993 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.05341342 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100420526 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089657295 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05369188 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.079361526 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056211552 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.12528611 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055796472 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079537702 seconds)
    (269/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09615075 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054478115 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090798309 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100524691 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077089681 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091489609 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069325493 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067998126 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090666713 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074816714 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05352577 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.10362677 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067546831 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.114210638 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072956244 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053667106 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099365166 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055865951 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091382424 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.078180331 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070472715 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196796299 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106970279 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175555101 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096574948 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056697444 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053614598 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105363783 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069015138 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067768205 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.09873901 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053881676 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 0.15264202 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054472729 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053534477 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096729465 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069424378 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067092027 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102920124 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054180592 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.062075605 seconds)
  done (took 36.097995445 seconds)
done (took 37.062301847 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085471151 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119681453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078418296 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118874877 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084355925 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105128398 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076685304 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104994767 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084643744 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107789863 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083500897 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056754605 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102395554 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07723795 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.102045171 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095850654 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106017116 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075756067 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.099696692 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068668652 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075482178 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092671955 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070338329 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056926036 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105488044 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074535857 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.09955207 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07794696 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06700012 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093022107 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071881229 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099593436 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068740728 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08087223 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09967698 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07720278 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102331579 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079355724 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069597978 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092690135 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075659339 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091282818 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075816414 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07478388 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098626564 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074284736 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.099362308 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084275164 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120085975 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070873289 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076050702 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10475154 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080336207 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.100480767 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07219064 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.100149548 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074963297 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095851429 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102094714 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069870813 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.100261791 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078408649 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072859759 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.101834997 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076364412 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102913388 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078830118 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.097043247 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078730686 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073238377 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092140721 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077157188 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095170734 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069961453 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07870007 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103492409 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068030884 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073307043 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.099196734 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074289927 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091093399 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070936821 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069560845 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.0989495 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069923985 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056741994 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096745199 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075194505 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06668913 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101833547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074124634 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.098710364 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070654173 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101334613 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069335574 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073739327 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091935994 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069824161 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069646997 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097055117 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068825841 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070167885 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.101873965 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070091349 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097430537 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084846782 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067783696 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09961926 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067349715 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.090343195 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085885481 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077089287 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092750212 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070041473 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090578952 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076471284 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066969689 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091561424 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068798521 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067380275 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.098456636 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068613388 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092378615 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076862752 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08191224 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094840594 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072039017 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069576176 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092294841 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074142162 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091529292 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069746194 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069083752 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089626997 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071314398 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068352972 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10012816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070910859 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099533346 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071788778 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076339247 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097770483 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075187828 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072807151 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.092778283 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062068275 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070223455 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095141593 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069846294 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091196691 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071578431 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067949504 seconds)
done (took 13.728713648 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069652214 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178330061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132237985 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099485962 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116385189 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06754945 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105341664 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134082846 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071166136 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.133382688 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090876751 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.113146153 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143543262 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069131024 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068564366 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096847652 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07082323 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117054273 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106848438 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.114964135 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.147483456 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06798552 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126206561 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092915062 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116793061 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132273265 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069535972 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095500673 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073906321 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12057502 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090157256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070917521 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093403777 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128881377 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099530298 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113117334 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068542821 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112374509 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068942096 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067957563 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120152734 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129286973 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083684832 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.110054026 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072240913 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.096171368 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070060076 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.114426392 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094524818 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.10978259 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.11618291 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139515634 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073459633 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.111008732 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06884604 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115526296 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086781685 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095683697 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069846042 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070540209 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.092956625 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072673653 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116474389 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096573889 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098054414 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084877585 seconds)
  done (took 7.582564296 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088543553 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119781837 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087769616 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111875528 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068864593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068842604 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094043055 seconds)
  done (took 1.670244278 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07035383 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092387617 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117807698 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092295843 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114458108 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09049724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104808328 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069132678 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112890915 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070710615 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114551036 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109247519 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095201684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077833257 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11889863 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070218211 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093998186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094454668 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072746218 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.118509094 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072734482 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114774794 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071938905 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068853253 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110209819 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070020605 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143636241 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073762943 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096368115 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073621296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067808896 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146121906 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110111836 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081196555 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093923044 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086132351 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108279287 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068432825 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086506521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.100480292 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083963379 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.095028872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071540823 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067177427 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.099846081 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080618891 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.094720199 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071500239 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071997945 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115822062 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070489046 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108985415 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07071543 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073640812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.097120644 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075348759 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103007845 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071337735 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09010502 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09654734 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087646765 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.11232042 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084624246 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112462136 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072633728 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109219022 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085567303 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071254542 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096243014 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073229415 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111303359 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067774274 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070400637 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106425167 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070583341 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.118998306 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093337728 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096013623 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080596555 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068890255 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096573982 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069380722 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118665306 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073641464 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068809473 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100004387 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072677683 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092283278 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069248296 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073176849 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.093239469 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071565501 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072180472 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.095852533 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072491087 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111640957 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070689153 seconds)
  done (took 9.69677032 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072026134 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069760709 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097034843 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070874859 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069972676 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096052828 seconds)
  done (took 1.516997104 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102930588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097706856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086150384 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099498083 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111727171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110200766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086152287 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110691541 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087683279 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108911386 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085824053 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111229851 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091021132 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102135492 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084922807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101491088 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086465862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104856709 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082323767 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10190562 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091959507 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101064468 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076827006 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.111048285 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074546268 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100397847 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081444952 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.10653075 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083956393 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110473883 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077042195 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073075042 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100936689 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108907171 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.08727939 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.098950297 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077665269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074574696 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105770866 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072602403 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111745598 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076402748 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10700583 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07416476 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112139414 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074565101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.10007678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079520602 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110535406 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074372094 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.099082891 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075585446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096907956 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076038881 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074468321 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110731704 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097260474 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088478038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075245432 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100357566 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072685571 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.098096026 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084808699 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.099596263 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083502566 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100200995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075045051 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101628523 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07719019 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.09972358 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075495576 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.0730915 seconds)
  done (took 7.66698387 seconds)
done (took 29.152177144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.674541066 seconds)
  done (took 1.708306034 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.808250219 seconds)
  done (took 1.843339094 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.55224031 seconds)
  done (took 17.59581147 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.674459715 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.832458003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831777597 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16235128 seconds)
  done (took 3.537130837 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.907879951 seconds)
  done (took 1.963605651 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249223651 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257305825 seconds)
  done (took 1.547127483 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.761124824 seconds)
  done (took 1.80826295 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.32384959 seconds)
  done (took 2.362932758 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345703953 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188656255 seconds)
  done (took 1.583361924 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.535931306 seconds)
  done (took 1.58501311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.870801386 seconds)
  done (took 7.926513644 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237325067 seconds)
  done (took 1.302246154 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275244526 seconds)
  done (took 1.32991254 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.424848633 seconds)
  done (took 4.476990904 seconds)
done (took 51.611224084 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08267388 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083686868 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109787338 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081316817 seconds)
  done (took 1.405211801 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083234704 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075697666 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106261561 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075167131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.106997824 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07591278 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102902825 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081266099 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099008069 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078369358 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075946206 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.100669489 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078705023 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102140674 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074462626 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077542299 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1053334 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075041856 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.104836417 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076459148 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.098441792 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078738205 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078258889 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100896668 seconds)
  done (took 3.172431091 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082423222 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07516505 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102963038 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.0746398 seconds)
  done (took 1.396341185 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082290208 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.120226568 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094659421 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104752347 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097435489 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116141999 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072853565 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071694389 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.100060255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079619442 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095403026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103634004 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118095539 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079459696 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10716955 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069375044 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095028373 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092747767 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078962962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106365517 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073042937 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104315023 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072086524 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119132146 seconds)
  done (took 3.317039373 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081050373 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130253278 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083164319 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116763254 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096959148 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067389652 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104890069 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093654566 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156480535 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067587562 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099670862 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068380977 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100784036 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069075495 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077993507 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.139449479 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141001896 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072062857 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125462104 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069752176 seconds)
  done (took 3.021087621 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079377294 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071944486 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093337766 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071857382 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078083718 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101379494 seconds)
  done (took 1.562271271 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071689198 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069119751 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094350054 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07019882 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073356334 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095279976 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068539099 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069407743 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096156665 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069636015 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093659529 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070280094 seconds)
  done (took 2.005620788 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.471473224 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071938567 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096007266 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070278762 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073043972 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094480613 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084299258 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070178112 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.120596719 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068498762 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095405073 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071923525 seconds)
  done (took 2.455091984 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274605794 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080971461 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.340980704 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174062989 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143532138 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162352083 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106555272 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146280942 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.207483945 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143907979 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236936745 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205025785 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139625648 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172587318 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119192994 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137860107 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192066299 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229683245 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133962405 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233456609 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190380362 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16106242 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.213983393 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132248086 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113484608 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176067153 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075971562 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082821423 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267310256 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16862267 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181588814 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142942847 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125430946 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242060742 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227787972 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177290068 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167876945 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114929214 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161777101 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173566159 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271954265 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118344333 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20278139 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138764743 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109710622 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179023308 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151103486 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152300572 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141299927 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118628702 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182267911 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247474185 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172115696 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117113714 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142394712 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144585156 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148477216 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13152837 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25670193 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200429189 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190967285 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074856987 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126906475 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194092432 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165230581 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.147087089 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187095474 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097188957 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201979522 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194453751 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149662702 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207712152 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165642492 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119824263 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152278942 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177391995 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186389352 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212700731 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160106276 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101711033 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156330307 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131973233 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084558255 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17446756 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078451503 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244781556 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128851533 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144750634 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142758244 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141124917 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116237013 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229234563 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211723242 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13414822 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069826907 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135415481 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15574979 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182357273 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118452993 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139756564 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153041239 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080610079 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200510221 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.0783834 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158680214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108151478 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157931172 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167570446 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10474243 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159843727 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106896245 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133047834 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195926871 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203564701 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119493319 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085833226 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235202307 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160933938 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136651467 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208592067 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199023058 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131589877 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130722975 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183716409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253148006 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120671568 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231761636 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108579508 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114518172 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118011892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161207877 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147065936 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154519428 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085473609 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158016546 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236595432 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104287595 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099482496 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198410375 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085898473 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111504301 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145715214 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131365877 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100081304 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132832601 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138610938 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17505798 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183760982 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114193783 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185756216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104479571 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22986302 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120849928 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.13534089 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109435669 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09968982 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170684756 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228307135 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083550533 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236317545 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160878507 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136214147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153751923 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111962274 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178586446 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082708381 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100296929 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178770833 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144295059 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14347766 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19167434 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135860241 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161928854 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181959509 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168751678 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16819717 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167612718 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138522573 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117521653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144851687 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162713731 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076472028 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125638661 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112185582 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134472976 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101051636 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113367897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178973816 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161212935 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12949487 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146604228 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128190836 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189097161 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106650189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166912755 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153650286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124855238 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19505362 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225735575 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170562728 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132742902 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208250095 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076112697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076813153 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119877397 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162917761 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114346122 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087617017 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148815638 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.21559618 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163583077 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172029402 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14357577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155782611 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225012339 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074184846 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148566402 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187052145 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186058705 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.138923138 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122935007 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103595212 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.211685763 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136382921 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260873078 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150181067 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159194393 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219043561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.109042207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115545995 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135490526 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175563961 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136012376 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217721099 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104284192 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120167551 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142862376 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110074148 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135839713 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16307455 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153050302 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172819069 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15040787 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196437568 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081524188 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149167401 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158258422 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155387 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094217598 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154982068 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233246336 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100205424 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151622776 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222513698 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108789231 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.130784547 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248058487 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210587767 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114568701 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113900601 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180315046 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167601836 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153717583 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177963567 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143047313 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171062064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143406388 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.114958671 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093647158 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130900978 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139642875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099791222 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.172761639 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150993762 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099156027 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194497983 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145840536 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141885799 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152875004 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104459269 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.122259624 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101842643 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246518677 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155686014 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24434238 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133017922 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216973681 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209102201 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106484176 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082192125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111970637 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178669657 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115693715 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170171496 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12650167 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109887584 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189595325 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182518359 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126205307 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072846463 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143290346 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168501097 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144404959 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131729674 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138050282 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204229711 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136711531 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110143092 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160874767 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108558021 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135681061 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247563413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091720057 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102216959 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10668559 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085502059 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164881115 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223355509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114331474 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135984153 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153768492 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18349286 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166895469 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131272032 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102646424 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145578565 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212002273 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165676293 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095059254 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14781855 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193166896 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197760758 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1392508 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127293703 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238788832 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195775558 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.234003496 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.120089557 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150275634 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149688299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145911649 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181665618 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115228911 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236704438 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088051646 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199484901 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136877656 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09832386 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189296712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102461116 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120601574 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187534161 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153878974 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113623686 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126251741 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148235011 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157243987 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1356701 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07979703 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174928037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104286943 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173372404 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237890414 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084689972 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139096787 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128831372 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111267953 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139969385 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109502443 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119452863 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148599345 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243211609 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.097125738 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21917801 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178116604 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148125274 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204507283 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133024214 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66997473 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082700314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225061901 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152653363 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251962361 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130863035 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155253061 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144477974 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157534847 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180065689 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140562183 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210904972 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168562362 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156062001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111115837 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136463645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14652035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093394028 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140902977 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149612815 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150041344 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133858991 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155784071 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191274967 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087684006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127948155 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199865766 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153084752 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210771897 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179334433 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116690447 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154506386 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180488951 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112035459 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157578895 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225764204 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142141281 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131493864 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086825145 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139996627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242213095 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077912917 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230980015 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158853301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144951026 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147945431 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155146869 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196657273 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140352642 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162401217 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127591837 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148584646 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150966093 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090190228 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109730857 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138497009 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147857813 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104488121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135806224 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152745364 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196646949 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10238204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099302576 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136468977 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209723234 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251935951 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094817173 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114875887 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153143806 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14891799 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150965665 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161662198 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112517741 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088203084 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114322743 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117880681 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146317898 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150525436 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136947072 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145573386 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238769603 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.090025742 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.256336407 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126643803 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116028721 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.100669805 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083899086 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129501624 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129218227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137503217 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102326154 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242687657 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129832514 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09452867 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125874058 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103339093 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088382931 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167594002 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145192094 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156323506 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129831634 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093400428 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11371917 seconds)
  done (took 74.426203468 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139812952 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11087051 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126354562 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.18122865 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155205106 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247667261 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188912352 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231795542 seconds)
  done (took 2.522145968 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073391368 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.124616146 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105637773 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12111056 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09553483 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072172527 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.3121434 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114698245 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069343296 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12129369 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124153335 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098463862 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.493219234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068391117 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.098795043 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.091539743 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071708159 seconds)
  done (took 3.384788673 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.45341224 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66730921 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457675519 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102822636 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.964674383 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114584169 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.483742467 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172575111 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097511482 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.441010011 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733544323 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.163617369 seconds)
  done (took 17.991801544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07875931 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071603918 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114292414 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08702904 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101550931 seconds)
  done (took 1.591112129 seconds)
done (took 119.294242832 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083887957 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384186114 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055811829 seconds)
  done (took 1.613270927 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087469869 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087740689 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116687107 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086034595 seconds)
  done (took 1.527573743 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07811733 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078109045 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115698202 seconds)
  done (took 1.418450706 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.301191237 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171750253 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093110041 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087469064 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080427031 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108324131 seconds)
  done (took 1.423942267 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077260012 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077283763 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104189809 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079376523 seconds)
  done (took 1.478169994 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080782705 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054904102 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056347519 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.086242445 seconds)
  done (took 1.425180258 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094458826 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109088711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084653425 seconds)
  done (took 1.432142557 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113199509 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117632534 seconds)
  done (took 1.379584155 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085885236 seconds)
  done (took 1.225898319 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097703375 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147367427 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.16555213 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.144157155 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175976768 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143187322 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.117727626 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092265084 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108978627 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120100533 seconds)
  done (took 2.459650848 seconds)
done (took 17.164656647 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082306924 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.391641531 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36484703 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121989763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672648614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385490014 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.997048609 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122925318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111670069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098744258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087349313 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67962102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.023077798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.348075737 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009620814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.41924369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679175634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071941416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096343368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072046072 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980058973 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099000225 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071394778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09739567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653441867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373456967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099194978 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.420402673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097704515 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073980022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357631923 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099321349 seconds)
  done (took 16.395631412 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073931886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14812596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077756006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086239384 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102380343 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072218115 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103791865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072079236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153391326 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070572003 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115934221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070875544 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101429676 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072623639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089591865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100359137 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072107197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098083435 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072644403 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070552372 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118226845 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07075794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097602694 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072194905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070309199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111590772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071286463 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.09780153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071964314 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072608894 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10181075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071378731 seconds)
  done (took 4.001772378 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119199163 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157530746 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07684533 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133999139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142599576 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074652146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174792628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096638002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156252751 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070791431 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116479404 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070053281 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133195903 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070977952 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.119085423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071071999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098655561 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072648895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070456605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099351772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090677498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098176283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072414662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070673466 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.099563548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083907712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099422727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074422893 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096535865 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074220792 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074762592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099548846 seconds)
  done (took 4.318415232 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076218585 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077313278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114420602 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086771589 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09912968 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075548637 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074737901 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10060714 seconds)
  done (took 1.858258468 seconds)
done (took 27.70900711 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083042086 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071774031 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104516128 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084369766 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102426158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083046004 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069318416 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106241736 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078121183 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102699786 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080143918 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06914091 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102091947 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071377165 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076925457 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099164168 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082247495 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102775599 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082963491 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111189625 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07317213 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077865105 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105656091 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082824598 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110745975 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083293539 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110386428 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.07780925 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071169613 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.101386935 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080652187 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116279116 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072829439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109202183 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072598868 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070326586 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.098062099 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071980665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082479067 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.106346186 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072767787 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105971541 seconds)
  done (took 4.866286502 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093415131 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096019293 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119198047 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064799662 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099995367 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064605033 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120695296 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063756224 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065050936 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.121575485 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058789438 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060284864 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.09046621 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058197012 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060293755 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058844562 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.092756516 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059210787 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060160967 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.088871099 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.06378072 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056284685 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090728328 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063509329 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058636781 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063808536 seconds)
  done (took 3.150268355 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079606207 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084901434 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119435123 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130977394 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138304634 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077004504 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11022533 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089559173 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115675341 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070764192 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101531341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102304048 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088473639 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106082723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069832855 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11435258 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086569611 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071183736 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.106692571 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090614732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116363068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080846617 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119896405 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083851416 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069110044 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101534203 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074896162 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111655906 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076615804 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079125288 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104048817 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074317735 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.10973259 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082815761 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102499059 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.0723755 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089604947 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109225778 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078535013 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099634185 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074597107 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070172579 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120587526 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114614992 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.099013081 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077159404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10605134 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080452033 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069179267 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117997664 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078482962 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099019611 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073657905 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068712345 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.099467164 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084045219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100197468 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073800916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07838633 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103202789 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083263009 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101695374 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08685274 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069559354 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106467093 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070113318 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098806586 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070136834 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091775552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.100608883 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110735424 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.10090961 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071377653 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10765289 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078457038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075049943 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.099695976 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085461036 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108942252 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073911717 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078335961 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103429151 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072992881 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117382645 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073636473 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071589527 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100530672 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077782216 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.100208723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072633808 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083154955 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100171924 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073590393 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.115782504 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070543519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071299728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.105953439 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.074899489 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097504972 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084351033 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104005664 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072757669 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079453246 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099302749 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073554356 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107260724 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076741692 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069008635 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103935746 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076763123 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097715143 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073246833 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073626473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100227486 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080788441 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075343652 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104280703 seconds)
  done (took 11.752313064 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.202233652 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193663893 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073512774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186131418 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080547467 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112809783 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.187418614 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.101111179 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100624739 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07150388 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099885495 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111078256 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133861996 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.14771904 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084436894 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070242602 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11940139 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14144238 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189794732 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153885843 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121547765 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078819236 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.102421825 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072145325 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071871915 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111146578 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087457973 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111090103 seconds)
  done (took 4.486649635 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08603248 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130644038 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077319204 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118439388 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095916616 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09826849 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076665694 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071534598 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11275489 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083141604 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099140478 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077517026 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104394886 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.082475715 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07112836 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.108995726 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080954432 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099777272 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075372993 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074860677 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.106781153 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083910512 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103820369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070791073 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077076379 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100322375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066987003 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118759921 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070532309 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121975351 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069017611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10528042 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081487257 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070213686 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099963695 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07264391 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100828542 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.074745225 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072316439 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097150135 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070428047 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060200928 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098385607 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083246195 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105243162 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063736948 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076380526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105978287 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075745496 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.095228208 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074804486 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072510649 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102950003 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078177174 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074706039 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.105365611 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074734966 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096718699 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078792744 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072886698 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.095045307 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070734965 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074960199 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099222335 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078678744 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103665819 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070032507 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07288385 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104294656 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077597452 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071497121 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.102814287 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068471035 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.10120256 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07688377 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074883711 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.103119181 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070009609 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069261648 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.101139095 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05886975 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098472468 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057924499 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074231715 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096748465 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071133778 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072752643 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.109538423 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08474833 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.101182061 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077450524 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098433021 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071723897 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073716681 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.094009423 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075053741 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084022728 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117366185 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071699265 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097984619 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084340971 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104593777 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070765097 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058734813 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.107604915 seconds)
  done (took 10.234329779 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.097990876 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.121936102 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074352234 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083945362 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126643019 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094561653 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107303519 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077212887 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071455631 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11713346 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070581531 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107730859 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07534908 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078926329 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125678391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078404339 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101471341 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080526782 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106089083 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.10868975 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082870768 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114895189 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080800507 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100369886 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07587232 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081403779 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129298404 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080636383 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.110107154 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085492089 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109085939 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099201131 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085545756 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105361558 seconds)
  done (took 4.425466111 seconds)
done (took 40.06251299 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.225758251 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.448329252 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.218974009 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.198619472 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.267095122 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223729748 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.229846662 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220826974 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.300663584 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.220036718 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.467373378 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.937118904 seconds)
done (took 59.123028749 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.294718292 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361360375 seconds)
    (2/2) benchmarking "String"...
    done (took 1.495614447 seconds)
  done (took 4.020021924 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.607584406 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.358646251 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.513147712 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.224208359 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.238055158 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.675088441 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.900018337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.092981492 seconds)
  done (took 28.164565102 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.225676508 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.596400664 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.694645863 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.696499078 seconds)
  done (took 18.376584735 seconds)
done (took 60.628710372 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.228903302 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246223809 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.240912163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.206518703 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330379044 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.244407929 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.490474389 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.438207095 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222325501 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.204122553 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.237422706 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.227494653 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.227034001 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.470831821 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.224498618 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.216636403 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.274441033 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.656539217 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603827124 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.224572727 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.241173837 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.23670155 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.218210725 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216827811 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.250607169 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.215818875 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.230652824 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.222385078 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.44530915 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.217164932 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.316239408 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.6745913 seconds)
  done (took 191.864378705 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.214185642 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.131000395 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.228359985 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232539712 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.657320758 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.413046333 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326873514 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.725431661 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.229927809 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.243011632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.362495521 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216272346 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.439754637 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.202170327 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.222633078 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.317062063 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.432250471 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.466173663 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23317062 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485594241 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.23756339 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.293445114 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.222436556 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.347655474 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.243450883 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239013094 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.240269198 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222990996 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403712951 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.345705139 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219156483 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.229087011 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.771936424 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070640005 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.238447525 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.229358562 seconds)
  done (took 149.489756996 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.491869306 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211514032 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213096265 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211743906 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.211985437 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.24106726 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.213182854 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.730213154 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731062714 seconds)
    (9/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.21481653 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.704424278 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.643157903 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.272862494 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.410559877 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.212219381 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304581676 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225489311 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213388543 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228578086 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.238765661 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214270885 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212904463 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.729515178 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227060901 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.290106759 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218573136 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.214564958 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241203255 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603445426 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.21226773 seconds)
    (30/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.211769047 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240737185 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522545563 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.256345273 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214697769 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.465177221 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.707003336 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318965346 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215000554 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240311399 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.211797589 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474868909 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212044717 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.212320003 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.214707503 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.743546679 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.210912037 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.718087221 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213487649 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.061296244 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210779121 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210511211 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.474137542 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.571567559 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.211064506 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.210461116 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212553896 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210159628 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210671659 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238426745 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.502448154 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305130976 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210662115 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.213344532 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238382447 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.210988347 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.229387364 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210406775 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.725221906 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.268327477 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.427859527 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.706048344 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213752123 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300184729 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324727922 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.210769886 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.210645601 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210240968 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209882789 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314027991 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.210845537 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.575237086 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216934619 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.211825736 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268648717 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302005008 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.211022928 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481956235 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.212604494 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.210506652 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.859489576 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300983194 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210894876 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.209922921 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210752142 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.580318545 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.702876525 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.348808902 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.213565777 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.49472335 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213393753 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.590351612 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.210602655 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.686913904 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.755587268 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211545263 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313760202 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214806545 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211749138 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.211125253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.239283777 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210413653 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.269067052 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208951522 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603033191 seconds)
  done (took 345.60825273 seconds)
done (took 689.61851989 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.901134446 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.852834705 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.984453451 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870660282 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.846400875 seconds)
  done (took 10.60514763 seconds)
done (took 11.756276562 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.386932009 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.389576978 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.267418104 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.390594639 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237170887 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409146605 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371580061 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.231213712 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.308875747 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.282435721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309665809 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258815876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23780433 seconds)
  done (took 18.23101847 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527616428 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53840221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274137712 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565889832 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24876755 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521530658 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40495679 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429403473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.407773602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223599179 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.222152651 seconds)
  done (took 16.514844936 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522743212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51047522 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.278569404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522898813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249692271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524683396 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418076613 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.42015845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.401486569 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224564979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221362997 seconds)
  done (took 16.444450085 seconds)
done (took 52.343773571 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217854881 seconds)
  done (took 2.367900301 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249553921 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.410451678 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.233926738 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223694772 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.217795729 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.219972179 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223081857 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.21888031 seconds)
  done (took 11.148219336 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216903195 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216998047 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.216057163 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216540156 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217080533 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.213680126 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217494517 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216556517 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217104013 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.21392475 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.216122068 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.215084987 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216346631 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214571628 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.21399018 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214952687 seconds)
  done (took 20.603744912 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216261423 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.216064575 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214259863 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215771297 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214375892 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214535997 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.215519347 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215051359 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214731458 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214744457 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21564046 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.21445142 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215249954 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214856511 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21524701 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216211533 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214684494 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.214827611 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.219958736 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.214890468 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21609538 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214932903 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215975235 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216132865 seconds)
  done (took 30.323303948 seconds)
done (took 65.593601682 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.08038035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.672894793 seconds)
  done (took 8.904949502 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217845266 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.218725744 seconds)
  done (took 3.588726499 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218684541 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218199472 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.217731105 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.217994797 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216995772 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217965069 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.217482268 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217913847 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218101913 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217707685 seconds)
  done (took 13.330205788 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218172169 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217833489 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.215412556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218055183 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.218830498 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215959337 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.217095539 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.218285329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.218777819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.215908341 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.218490368 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216081221 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218422762 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.216013947 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218658692 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.216352565 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.216334937 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216871358 seconds)
  done (took 23.063935197 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218623997 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218667709 seconds)
  done (took 3.589480498 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216909991 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2168194 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217090046 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216248448 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.215959383 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216150599 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216878652 seconds)
  done (took 9.668820617 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.220897532 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.387859409 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.466609197 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.802097214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222135886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223642447 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.113216582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223459922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225569687 seconds)
  done (took 14.039015737 seconds)
done (took 77.337352768 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.189836606 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.213546755 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.998417042 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225630633 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.228440862 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.554834379 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.220593052 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.33090197 seconds)
done (took 37.117411671 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.220282921 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.947401461 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.951573814 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.213112179 seconds)
  done (took 11.265873784 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199259307 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.071960248 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.208229149 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.173287521 seconds)
  done (took 17.807368206 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.783576096 seconds)
    (2/2) benchmarking "read"...
    done (took 1.548304927 seconds)
  done (took 4.486413748 seconds)
done (took 40.934674593 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221497628 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221165173 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221605114 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218006363 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22106406 seconds)
    (6/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218392014 seconds)
    (7/24) benchmarking ("one", "Float64")...
    done (took 1.218489898 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221597121 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.219242405 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218913478 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.221169507 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221833824 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.221575697 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.221969594 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220747041 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218852183 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219040876 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221502342 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.219427596 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219372915 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219507319 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221973212 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219271025 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219018003 seconds)
  done (took 30.44124894 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222108015 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219449343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.222315589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222291169 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220092004 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222503104 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.221822582 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.219343536 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222554533 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222521248 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.219754161 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220704275 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222537311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220008675 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222975501 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220226744 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222494298 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22012276 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222750065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220590153 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.22245061 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220044963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220906891 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22298935 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220329268 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.220720383 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.222348287 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.220828207 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223962268 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221127978 seconds)
  done (took 37.799929775 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226973457 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.229334302 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223352122 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.223257511 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222820399 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.223345565 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223858849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223071892 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223936544 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223667857 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.223777126 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223784079 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.222751728 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224322843 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223478633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222902687 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.223609236 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224469092 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.223222745 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.223761218 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.224491063 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.223931723 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224145662 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224328106 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223787807 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22431793 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.224550555 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.22474347 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.224307254 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225046798 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225981441 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.225909591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225564092 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225386464 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224539548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.22454139 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.228503404 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232058239 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.224076449 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.22498716 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224667496 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.224796863 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225063286 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225058559 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.224728423 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22522919 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225896245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.224991496 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.225473978 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225810431 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.224831229 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225465193 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225307058 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.225839982 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225694139 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226324386 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.225596164 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226037643 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.22614736 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225379664 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.2255468 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.225655944 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.226598529 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.224861635 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22613605 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225436267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.22580871 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226478612 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22665182 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226310336 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226160774 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226065788 seconds)
  done (took 89.364507642 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227428562 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22465645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223496723 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223994131 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.223543105 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226270553 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224687325 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226922477 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224175987 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.226392191 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226459269 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224309189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22361505 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226496669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226343089 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224755924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.226221409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224028054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227446212 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.226797047 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227014442 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224373138 seconds)
  done (took 28.120871602 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227786719 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.227427764 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22550264 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226702022 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.225482122 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.227870281 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.227724094 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.227647348 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227886843 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225645516 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224589104 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228320243 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225245736 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225643821 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225594697 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.22528172 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228396081 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22682761 seconds)
  done (took 23.240707114 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225549449 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225730452 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229153861 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225454558 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22607224 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229584956 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226471851 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228455238 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.227931136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22607103 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228505121 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228076656 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229425684 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226151485 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228758465 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22562071 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.229872789 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226456662 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228480633 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226721317 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22694702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229658888 seconds)
  done (took 28.166365756 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229955105 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228610559 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.226109305 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226570108 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226731266 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229275093 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.228951496 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226514325 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.228605243 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.229510455 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227096525 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.230565573 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.22672683 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.228079598 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.227290469 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227244996 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230218631 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.228411801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229599175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227295224 seconds)
  done (took 25.726222996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231329039 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231033329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233447805 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230698026 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232217887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231657407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231456104 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.231634025 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231325471 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232087139 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231116997 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.2320808 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232034692 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231460599 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232692204 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231749746 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231201344 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232519797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231830579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232408548 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232922028 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232296075 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233275938 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232275625 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.232932518 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232859023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232874473 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232390406 seconds)
  done (took 35.662182196 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230967022 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232393912 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2283498 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229641384 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.229228269 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229532969 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22971632 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229782798 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232584545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229691505 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231795807 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.230893503 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232189081 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231935702 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232260907 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.232537828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232275538 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23093059 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229816126 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229654219 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.232705959 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232419407 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232381856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230301844 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229613164 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.232912989 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23032262 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230763315 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233178222 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229691364 seconds)
  done (took 38.096704541 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.251727284 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251861835 seconds)
  done (took 3.669608247 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231635124 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233865569 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233317734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23057465 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231881274 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233526772 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233748709 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.231273094 seconds)
  done (took 11.02657506 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232321519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.233707854 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233287347 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.233168581 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233745554 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234483185 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239864196 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.249199956 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234793794 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23365166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239443912 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24009868 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232371618 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228786856 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.229705114 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231912843 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230042143 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.229699919 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230587124 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230794758 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227565989 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22889445 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.229917751 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224635384 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.228902881 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236370711 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.231876811 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.229984855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225237383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.228620379 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225352567 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.223399936 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.226482553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227165463 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.226326121 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.227502947 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232591448 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241193423 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.232605291 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227878464 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.226604193 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.22444877 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.227661159 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228717043 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.227982966 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.226655814 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.227014671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222982193 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.22686141 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.22918848 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.229940504 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226018306 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.224244717 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231462867 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227909574 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233547385 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.242932308 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.229323811 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.234581901 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.236876006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239191483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.233393886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228408031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227511518 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236089499 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.247669975 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234993802 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.239611185 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.225131073 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.22668432 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234108685 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238985423 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.236442969 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22744942 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227486761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.227451518 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228552183 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227586031 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.2348315 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.246322799 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.228328192 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228062984 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237078753 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246091263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.226856583 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22859561 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.228908594 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.228746767 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.229665553 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.238831044 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.244564881 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228075934 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228039619 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228104164 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.228850612 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.228917445 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.227762453 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228831469 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226618617 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228935089 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.229498777 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.231929692 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23607594 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.229551563 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.229877433 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236193323 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.228748746 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228811641 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.236252611 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230033545 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229586138 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.230276094 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.234440054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.226208842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.232347232 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.23609729 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.230360849 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.232197185 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.230885899 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.230320949 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238567713 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.252304816 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.230345327 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.229898861 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23447384 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.239609124 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.230111316 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.23289851 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.229924715 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.227928066 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.227599643 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.230875689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.23116 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231991146 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.230715505 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231777374 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.228014143 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.229863848 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.231230676 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231310578 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.231827648 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.231190773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232071076 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.23242445 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231420066 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.232191417 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237658533 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.231344245 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.23247862 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.232330148 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.227826705 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2314177 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.232625483 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232168217 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.232485989 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232647672 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.230590942 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231255321 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231914238 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232213627 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231423936 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232310999 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.234886358 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232741873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.236054877 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231585444 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.229281155 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.231403993 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.232065818 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.232202815 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.232451139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.230900322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.234581872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23865005 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.232347715 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.232484148 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.234919563 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233015671 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233903799 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.232688975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.235073773 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.238882765 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233018753 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.240251682 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.23377008 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.233178058 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.233465443 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.233040009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.231723205 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.233531026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.235616288 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.239014688 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.244121468 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.24108273 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.234373524 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.235926768 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.233098173 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.237456882 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.238429368 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.234509508 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.234158792 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234602781 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.234188811 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.234578241 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.235816443 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.23396514 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.233488358 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.233608272 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.234551615 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.234661147 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235052731 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.235822475 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234658849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.232252795 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234582241 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.234563483 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.234840057 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232157055 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.233977818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.234843791 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.235512123 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.236256657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.241724966 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233331169 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236054965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.235951831 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.235340728 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.233547564 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.235396003 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.23661606 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.236016949 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242479971 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.251464888 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.236043369 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242335044 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.250607087 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.235445723 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.237962094 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.235272468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.232180373 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.238485491 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24256563 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.235957211 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.236741271 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.236719825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.236561035 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.235690297 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242580291 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.234180024 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.235314237 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.236442089 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.237573977 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.233904604 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.237330925 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.237044147 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.237365292 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239220048 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236868425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.236082041 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238038299 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.236579782 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.237073118 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.237395182 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.239076345 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.244117472 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.241982153 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.237250427 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.238910186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.237352413 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.240663754 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.237731474 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.238035711 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.236600142 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246802709 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.244833792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243952308 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.238311251 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.237925057 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241924855 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.238681534 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.241954809 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237362763 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237460248 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.238136204 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.237799694 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.234792716 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.238338862 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.238457304 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.239762415 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.238675935 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.242066288 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.237648863 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.238393964 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.239245991 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.238020547 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.238743061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.238110241 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.238992656 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.241415255 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238869201 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.237717557 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.239126788 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244297114 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254652281 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.239507997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.238387321 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.238700344 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.238878765 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.240458304 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.238891993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.241643147 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.245302557 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.241410994 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.246832205 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.240015325 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246780094 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.23903602 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.242470045 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.24590892 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.236770694 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.239025138 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.240028482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.240005806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246271748 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.255835274 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.239809307 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.242063405 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240143218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.239941306 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.239612333 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.240120818 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239558387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.240495612 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24869894 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.256741039 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.242941413 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241208052 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.237861711 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.240457906 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.240829989 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.240040492 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24345099 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.240673541 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.240887091 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.240118 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.24102357 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.240489428 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.241659729 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.240693552 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.237794059 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.241686797 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247574367 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257456787 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.245617273 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.240902749 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.249446437 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.241788893 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247431244 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.257386583 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.24182147 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24163637 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.241697114 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.242628963 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.241340858 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.243271236 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.241440724 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.243950404 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.244519895 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.241898462 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.244039964 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24328598 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.241662301 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.24213303 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.251322723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263895198 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.243466684 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245809787 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24009651 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.243783013 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.246137673 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.242820435 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.242409477 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.244264208 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251634827 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249820422 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.242335603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.243080184 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.243145331 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242319804 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.242632102 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.242824225 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.244139035 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.243018525 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.242883937 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.243022321 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246166297 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.242670834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24370696 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244225195 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.244777962 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.252981214 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.24398003 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.244608463 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243376856 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.242901928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.243719862 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.243584545 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.243258334 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2449672 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243846131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.244588371 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250370825 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.248663211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.246466732 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.243959405 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.244236676 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244881567 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.243733674 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24382166 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.244520218 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.244658989 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.245537023 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.243810735 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.246382683 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.242499505 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.243850808 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.244049585 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244760005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.246192533 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.250941248 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.243866637 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.242504648 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.241577566 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242388491 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241297043 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.243049358 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.248904169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245139233 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.251272101 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.2509541 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.243487202 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.2406723 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.24344863 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.246887169 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.239861171 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240561046 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240793816 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.243127987 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238991557 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.240357298 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238224093 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.245725575 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.238230412 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.238050394 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245866887 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.257561956 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235368094 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.236199313 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.238482453 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.234997874 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.233831674 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.236001884 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.234152403 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244497359 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.249846484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.234233442 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.234399066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.230415229 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.233895426 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236940522 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.233437402 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.233693672 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.230081397 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.229987331 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230386213 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230646727 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.227937272 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.229681891 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23091733 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.233043905 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.236135613 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.225521388 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.229376342 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.227446255 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.228639504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.228216286 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22859839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.22546643 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.224908165 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.225016011 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226607365 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.225866217 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.228103371 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.225094997 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.226730055 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.226613139 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.226844578 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.225711454 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.232562501 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.230394587 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.22203776 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.223210188 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.222812795 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.225201076 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.225186149 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.220650324 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.220486363 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.221642716 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.220619575 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.220801048 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.220761741 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.222926733 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236229816 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.233434826 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.217578811 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.217484718 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.220679626 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.217251727 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.215934049 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.217440073 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.221061845 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.218299342 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.221152856 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.215894486 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221499134 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232590263 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.216820343 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.21918162 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.218039384 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.223789662 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.216237631 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21520199 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.2141523 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.217800051 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.226202808 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.212477231 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.222588639 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.242457089 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.22964553 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.212169125 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.212804159 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.212007694 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.211653845 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.213345434 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.211807074 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.213587722 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.210681658 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.210006973 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.210846701 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214550473 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.21141068 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.210065944 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.210347817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.211673012 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.210488844 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.20598314 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.208832816 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.208460457 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.209106323 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.208700662 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.209598353 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.208827053 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.219531843 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.216683777 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.208618023 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.207951829 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.204665536 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.209868557 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.209861065 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216518678 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.215248801 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.207179134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.207198267 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.207810607 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.206682481 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.204473154 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.206593582 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.206475237 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208045467 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.202982282 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.216555213 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.213829073 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.210905476 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.205991147 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.206941744 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.207190493 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209721646 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206431259 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205371467 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.207793648 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.206294898 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.208862156 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.206162429 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.206631595 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.208282353 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.213682662 seconds)
  done (took 736.188683827 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.203642071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.201717191 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202132792 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202570507 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20241618 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202490968 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203419462 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.200679912 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.200633834 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.200700958 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.201043249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201348351 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.20050334 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.200751227 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203494295 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.200540262 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.201389794 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.202150977 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19974713 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20075765 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.200947759 seconds)
  done (took 26.373918647 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.204911456 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.204378055 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201849231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204410992 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.201137297 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.203798082 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.201605879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203759452 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.204453199 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.202590462 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.203501102 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.204465242 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.200802675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.201083378 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20165111 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202664087 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.204446552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203128707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.200649538 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.198637845 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200435882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.198954395 seconds)
  done (took 27.594482449 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.201795734 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.201078353 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.200478284 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.198395805 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.200980383 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.197581448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.199965543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.200219871 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.19990171 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.201137603 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.199334011 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.201563704 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.205616395 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.204206931 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.202531845 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.200649141 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.345343497 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201972717 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.201207867 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.201773974 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.198048804 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.205278407 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.199015614 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.198457135 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.200016699 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.200760803 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.201736753 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.200954017 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.202077893 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.202917198 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.204473383 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.201121042 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.200758771 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.202749458 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.201213588 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.20248259 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.204594956 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.201955786 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.199410212 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.201962197 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.210899741 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.219048955 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.202166862 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.207772863 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.201922702 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.201641606 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.20510338 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.208924382 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.200634426 seconds)
  done (took 60.192215684 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.202129804 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.202674684 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.199661023 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2022498 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.201882743 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.202296454 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.202954774 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.202996656 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.200485675 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.200075475 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.203625864 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.200401512 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2002313 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.203384103 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.202995516 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.200566016 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200180572 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.200773941 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.200422398 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.200921808 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.201262814 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.202850824 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.203862322 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.201690225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.203750885 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.201165085 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.201356703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.20322783 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.201518872 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.201271644 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.204046761 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.204303517 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.203553204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.201316213 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.201656089 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.203700525 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.203542233 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.202023564 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.20429156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.202771087 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.204227631 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.203962012 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.205234684 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.204893858 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.201902154 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.202113 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.201289946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.202523715 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.202647316 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.205284635 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.20527348 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.20254871 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.2049239 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.202545392 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.205026179 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.204663256 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.20243119 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.202523124 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.204741863 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.202563905 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.202876407 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.204920048 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.202969013 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.204822272 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.205604937 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.203807307 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.202501303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.205493951 seconds)
  done (took 82.930257487 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.205359344 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.205678107 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.20510489 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204668009 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.205431743 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.205412285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.205960466 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.205560766 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.205806145 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.206154024 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.205470966 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.205775299 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.205952018 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.206276392 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.205751555 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2059338 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.206567219 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206187577 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206901062 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.205413816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.206397405 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.206922287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.206897415 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.20618563 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206624735 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.206809959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207118041 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207705443 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207132824 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.207702328 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.20702716 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.20683841 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.207208329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.207249347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.208429475 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.206590859 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.206955734 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207456294 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.206510568 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.207288322 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.207609923 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207323275 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207302694 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.206858629 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.207046739 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.20808655 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.207777405 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.207150202 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.207917695 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.207269722 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.208109661 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.208179656 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207788272 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207837262 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.208256709 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.20802344 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.207744754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.208984731 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.207869469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207545522 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.208225719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.208210677 seconds)
  done (took 75.97091221 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207810397 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.207881677 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.204436165 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.205366979 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208361129 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205941105 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.208942624 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.208766463 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207870915 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.207422843 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209045545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207164935 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205860336 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208193291 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.207191483 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205371406 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206136419 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206533825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208731266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.206636125 seconds)
  done (took 25.288599673 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.207100786 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20904382 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.206475722 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.207484446 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.209580888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.207178731 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.209307823 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209290304 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207322162 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208962987 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21012408 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.209555391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207807177 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208604938 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.210409001 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.207403552 seconds)
  done (took 20.480970568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.208049961 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.210223192 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.209818216 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.209913958 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.207432008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.207966311 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.209792393 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.207445289 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.207069422 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.21038246 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.210987006 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.210714514 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.210403003 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.210101604 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.208266018 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.210556835 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.20864167 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.208097043 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.211182542 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.210808201 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.208777938 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.207553659 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.211055084 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.210538556 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.208448759 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.208999402 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.208529761 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.207811975 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.208211305 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.210761332 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.208364596 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.208749553 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.209146805 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.209183554 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.211906989 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.208431203 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.212072668 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.211134205 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.21150387 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.211683154 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.211607291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.209487198 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.211373165 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.211931218 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.210268089 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.211667189 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.208306671 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.209051771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.209477677 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.20937708 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.211498882 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.212494074 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.212752468 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.212578129 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.212297152 seconds)
  done (took 67.692136623 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216404988 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216689448 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214456877 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216561407 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.216886406 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.214153834 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.21677034 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.21361213 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21381445 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.216235508 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214757308 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.216973969 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214226131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.216599401 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.214557196 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216699851 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.214929298 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.214518024 seconds)
  done (took 23.028409468 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215339203 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215053465 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.217500184 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.214260126 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.214681779 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.218740566 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215081607 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.217345813 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21703649 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216072117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214672166 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.217394472 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216857302 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.217389106 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216491307 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214817789 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.217068926 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217885217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.214944376 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215182623 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218440644 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216927278 seconds)
  done (took 27.913879591 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.216927478 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.21706361 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.232524121 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.257372257 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.249140225 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.217718092 seconds)
  done (took 8.546428261 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217366494 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.21766801 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.215483466 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218637671 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.217684208 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.215394175 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.214451789 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215457684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218975025 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.215650756 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216409572 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218382058 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218178284 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216247848 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218832222 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218033206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216640684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21611289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21641825 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.21828367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.216285727 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.218973521 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216231396 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216560224 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.216618518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.216566008 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.218841357 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.216357487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217384122 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219358367 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218959788 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217297832 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219609639 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.217066892 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220394537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219054623 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216866158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220052772 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219819741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217063048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.219711361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220416481 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219759567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.216906656 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219127523 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217870823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.217391682 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21782784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.217674922 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219825486 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220091287 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.217837959 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219511535 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220082123 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220363214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221123255 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218311483 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218059458 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221245432 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218179673 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218152992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220613692 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218577163 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218906013 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22103312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21867466 seconds)
  done (took 81.555134607 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.218916695 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218263323 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219618571 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219747822 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218678611 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218021783 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218538414 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219170676 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220089269 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22039035 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221656803 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218742131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219748452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.219237983 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219493337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218763802 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219757877 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219547839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218857269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22341814 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.218929173 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219191915 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.219570881 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.218962969 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.21967998 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222597322 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22017636 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22000658 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.219810233 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.219589742 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219256584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.21935691 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.21930741 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220503312 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220061066 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220703177 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221396872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220222676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.21975217 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22224831 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219799107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22268132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220553277 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220367827 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22121176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220183019 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221131062 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220552241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221458454 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220629723 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220666793 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.221625927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221554262 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220908156 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.220255761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221370589 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221496489 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221300531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22125228 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223167391 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220996969 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221098693 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223887283 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221660049 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221100563 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221737222 seconds)
  done (took 81.70468352 seconds)
done (took 1697.931400486 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.319951743 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.324163413 seconds)
  done (took 13.803732082 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.386329727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.339460727 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.223365228 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.25466964 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222989607 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.223590837 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.238727852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.222091814 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.221510895 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.220888847 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.221770023 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.408895428 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.274545804 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.222404169 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.22187339 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.314367498 seconds)
  done (took 41.379643871 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.244381218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.230293616 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.330285388 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.242596578 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.248324319 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.399305443 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.280399206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.230513181 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.382747234 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.264383398 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.63150144 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.248605127 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.229327166 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.229294137 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.245316137 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.402092671 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.453427115 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.636616009 seconds)
  done (took 28.088614022 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.626696107 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.241782585 seconds)
  done (took 9.029033189 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.220548942 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.226915666 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.252663409 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.222153525 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.218411595 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.26285246 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.263017367 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.260055655 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.263795909 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.247091633 seconds)
  done (took 63.598585201 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.244889355 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.226625846 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.226588303 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.223939049 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.216937052 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.230038863 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.224015905 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.21750095 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.436404817 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.342846268 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.240138571 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.229847299 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.22438641 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.227297569 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.223451986 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.260153279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.352268523 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.221863872 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.221646922 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.229085115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224898303 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.309403783 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.26481736 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.225108033 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.340938631 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.449437356 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23141763 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.231313021 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.334194282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.223060278 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.224186862 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.225612142 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.227633209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.799928667 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.724484765 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.232597885 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.248015619 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.23410878 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.223346432 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.355038519 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.226353091 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231038326 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.219090962 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.718104432 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.381027514 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.332581234 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.382213943 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.230200532 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.227244853 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.284241003 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.226498764 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227446717 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.253954167 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.952458941 seconds)
  done (took 104.402898637 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.279008595 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.707492318 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.389097943 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.239172855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.978135364 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.842028021 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.222757776 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.476428676 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.27057963 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.21944057 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.541615822 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.693747117 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.222683216 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.252181902 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.903386467 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.311061123 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.213280452 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.926254408 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.213701483 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.214071738 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616483784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.228158364 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.21431208 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.386077927 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.251070005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.649808489 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.508380083 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.501296802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.215690423 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.212416149 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.647466285 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.222757624 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.273323691 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.214876136 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.473464859 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.543581856 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.524405611 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.215468681 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.237337973 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.215863679 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.240294917 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.646685895 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.532582137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.215414399 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.215222432 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.654828679 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.21532796 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.222166995 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.219570239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.410975901 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.179481041 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.216794364 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.514042096 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.216652037 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.569045264 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.277922943 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.273129719 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.67984039 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216504792 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.181851241 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.24070659 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.213308503 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.217897505 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218789124 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.213983235 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.535554284 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.619333809 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214949574 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.537942318 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.644748057 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.216936316 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.711174343 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.125448286 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.243427258 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.291614709 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.214441976 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.771441968 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.674629495 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.23704247 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.214852844 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.519274291 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.21506012 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.521338275 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.228162207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.216066866 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.629049602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.23371125 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.215954186 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.215541906 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.233039874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.872655448 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.218823087 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.47083001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.282150912 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.215081485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.215286709 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.241915615 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.216598295 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.21851888 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.22162381 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.711987804 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.223954981 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.500530293 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.235434807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216212301 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.219645375 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.216243633 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.216676376 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.430492382 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.667929108 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.21730149 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.216051116 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.220788959 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.225077942 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354197474 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.219655011 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.497569439 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.218467744 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.216554093 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.219601252 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.848177336 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.25438757 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217400841 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.223738684 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.072320688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.429067857 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.234740247 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.2198788 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.217525201 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23365141 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.467393089 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.220716863 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.25060972 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.216982354 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.890554166 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.232016448 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.24375505 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.849792828 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.22242404 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.113086365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.243225395 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.219101635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.517582099 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.482556547 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.26200343 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.219869871 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.220143728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882124226 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.246964097 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.365457057 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.238169179 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.223540156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416080973 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.69533787 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.219727978 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.792460114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.218987295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42791214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.221576487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.54262912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.679192432 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.221973623 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.2207441 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889394809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888858588 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.870187937 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.223346728 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.536943747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.21493345 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.672778628 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.218600247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.225212935 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.666438154 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.221343939 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.224533312 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.219208067 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.218885783 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371967715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.393725443 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.001525648 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.225942956 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.65408245 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.247611882 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.220373018 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.225145623 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.21889008 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.571757206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.305039274 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.22499321 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.251004527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.221690675 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.220159065 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.66847831 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.124761891 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.223325709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.373341765 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819002247 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.222205514 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.221244344 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.849395381 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.521108677 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.700985162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.275187008 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.502243084 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.22158188 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.259443141 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.926533006 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.25411964 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.666006325 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.222642265 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.221709347 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.785713905 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.220943258 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578035369 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.22098604 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.223138289 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719231802 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.222084322 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.224144643 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.465306857 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.224022242 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465804149 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.223956914 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.239389675 seconds)
  done (took 1084.705644577 seconds)
done (took 1346.172050861 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.220952999 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.223717993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.212046067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.223324609 seconds)
  done (took 26.042808155 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.230063288 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.226670334 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.227139583 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.225973243 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.227842514 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.22602441 seconds)
  done (took 8.524341214 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.283176478 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.222599448 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.223203719 seconds)
  done (took 18.889886848 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.426480786 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.413364805 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.564589813 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.234874045 seconds)
  done (took 9.80110618 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.228251618 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.22847302 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.228241377 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.229205373 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.23111978 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.232483028 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.228870738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.229657252 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.231411006 seconds)
  done (took 12.228907205 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.817324305 seconds)
done (took 81.468292381 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.214137502 seconds)
    (2/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.544610882 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.793439655 seconds)
    (4/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.223381395 seconds)
    (5/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.741807881 seconds)
    (6/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.547440938 seconds)
    (7/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.822314486 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.687010895 seconds)
    (9/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.988478689 seconds)
    (10/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.223569809 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.469244274 seconds)
    (12/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.307396831 seconds)
    (13/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.497884022 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.403437238 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.687850657 seconds)
    (16/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.262203909 seconds)
    (17/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.921845901 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.249813259 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.247137798 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.207125023 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.274153837 seconds)
    (22/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.57041198 seconds)
    (23/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.24039646 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.234747302 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.434514351 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.055278152 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.282818275 seconds)
    (28/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.007770936 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.322179719 seconds)
    (30/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.281249733 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.307755716 seconds)
    (32/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.224957009 seconds)
    (33/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.301622712 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.208211892 seconds)
    (35/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.368065617 seconds)
    (36/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.208150651 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.354996004 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.81676294 seconds)
    (39/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.26610991 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.946312879 seconds)
    (41/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.257704155 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.576698617 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.406838716 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.500008896 seconds)
    (45/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.251398473 seconds)
    (46/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.398301473 seconds)
    (47/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.24311566 seconds)
    (48/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.499163598 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.224830144 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.351046805 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.484631857 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.747823368 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.317192657 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.252593389 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.208294987 seconds)
    (56/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.618244622 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.281912869 seconds)
    (58/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.577792789 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.090993861 seconds)
    (60/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.015628392 seconds)
    (61/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.251342158 seconds)
    (62/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.641015169 seconds)
    (63/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.059621727 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.226875518 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.402674139 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.394913891 seconds)
    (67/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.493783422 seconds)
    (68/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.331103094 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.212973534 seconds)
    (70/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.790145614 seconds)
    (71/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.689331462 seconds)
    (72/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.795124526 seconds)
    (73/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.863627906 seconds)
    (74/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.212058932 seconds)
    (75/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.254631989 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.210398661 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.37553143 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.042100818 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.237722947 seconds)
    (80/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.312498252 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.27919384 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 5.214371728 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.213197712 seconds)
    (84/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.240007778 seconds)
    (85/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.526642656 seconds)
    (86/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.33111607 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.957855312 seconds)
    (88/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.234550587 seconds)
    (89/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.306366445 seconds)
    (90/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.531992224 seconds)
    (91/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.356856315 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.075465588 seconds)
    (93/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.241412838 seconds)
    (94/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.573218505 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.817159486 seconds)
    (96/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.756432217 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.945018371 seconds)
    (98/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.31137234 seconds)
    (99/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.395433173 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 6.224971346 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.52259408 seconds)
    (102/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.769354762 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.429725514 seconds)
    (104/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.379325529 seconds)
    (105/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.533545776 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.239040265 seconds)
    (107/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.799966949 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.273833352 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.225384188 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.251627793 seconds)
    (111/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.803514202 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.339283084 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.248114785 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.210544529 seconds)
    (115/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.235805055 seconds)
    (116/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.663278951 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.748019475 seconds)
    (118/309) benchmarking ("sort", Bool, false)...
    done (took 1.739613322 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.250331561 seconds)
    (120/309) benchmarking ("sort", Int8, false)...
    done (took 4.276312266 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.213747475 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.50607865 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.995939848 seconds)
    (124/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.908599181 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.922114801 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.48954437 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.484657077 seconds)
    (128/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.226974053 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.293068449 seconds)
    (130/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.562093159 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.34562461 seconds)
    (132/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.929898839 seconds)
    (133/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.4165393 seconds)
    (134/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.482500543 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.324639611 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.252852388 seconds)
    (137/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.23595411 seconds)
    (138/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.016816643 seconds)
    (139/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.453838344 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.84962513 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.327504293 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.2538515 seconds)
    (143/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.212117888 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.961935886 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.76980156 seconds)
    (146/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.928079621 seconds)
    (147/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.30210797 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.627059301 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.711735965 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.0609702 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.25299715 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.010802653 seconds)
    (153/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.409887417 seconds)
    (154/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.026515985 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.249297294 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.309939557 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.384874495 seconds)
    (158/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.253863128 seconds)
    (159/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.34465261 seconds)
    (160/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.22775109 seconds)
    (161/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.651564311 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.24488267 seconds)
    (163/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.460708016 seconds)
    (164/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.520156402 seconds)
    (165/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.217753962 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.585974633 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.348610499 seconds)
    (168/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.563577173 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.628846077 seconds)
    (170/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.583780383 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.242259373 seconds)
    (172/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.394226534 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.236928208 seconds)
    (174/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.351786921 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.255371105 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.840396662 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.280964856 seconds)
    (178/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.29182326 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.036378236 seconds)
    (180/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.230475232 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.272523289 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.229250947 seconds)
    (183/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.472618204 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.308002215 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.520404286 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.232418358 seconds)
    (187/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.317338097 seconds)
    (188/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.286034912 seconds)
    (189/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.933566403 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.095183661 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.062074693 seconds)
    (192/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.229724676 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.548464214 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.642593654 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.243098078 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.096488122 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.623138615 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.929222447 seconds)
    (199/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.27916222 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.707465946 seconds)
    (201/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.566290519 seconds)
    (202/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.230538508 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.320244579 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.545097729 seconds)
    (205/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.239621313 seconds)
    (206/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.719394456 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.29353531 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.231375563 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.857602837 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.439974196 seconds)
    (211/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.25609931 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.428908343 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.346472575 seconds)
    (214/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.256521287 seconds)
    (215/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.02659966 seconds)
    (216/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.256220222 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.536682789 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.93268446 seconds)
    (219/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.272934088 seconds)
    (220/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.514961563 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.351426782 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.271166929 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.258739411 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.248224739 seconds)
    (225/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.257108747 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.239947542 seconds)
    (227/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.765820405 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.231413364 seconds)
    (229/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.803079144 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.231170522 seconds)
    (231/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.217013598 seconds)
    (232/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.522247983 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.493497752 seconds)
    (234/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.245452617 seconds)
    (235/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.251180761 seconds)
    (236/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.354720776 seconds)
    (237/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.954670544 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.784681209 seconds)
    (239/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.705253179 seconds)
    (240/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.401768497 seconds)
    (241/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.819595691 seconds)
    (242/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.417525827 seconds)
    (243/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.99111812 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.490787353 seconds)
    (245/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.437179751 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.377628846 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.217234627 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.513892963 seconds)
    (249/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.547266371 seconds)
    (250/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.315111007 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.041690521 seconds)
    (252/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.260352782 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.232828338 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.574326117 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.233822894 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.598984063 seconds)
    (257/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.374334475 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.258434854 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.697046017 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.419347152 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.616851418 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.577831567 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.648304733 seconds)
    (264/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.218109323 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.255173439 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.234991865 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.739204349 seconds)
    (268/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.35927042 seconds)
    (269/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.231636835 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.516226952 seconds)
    (271/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.25171876 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.242022398 seconds)
    (273/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.315269742 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.233894204 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.480455487 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.851143483 seconds)
    (277/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.316026462 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.259666231 seconds)
    (279/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.431898972 seconds)
    (280/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.274492757 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.342949067 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.24777045 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.334033837 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.273728584 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.959168357 seconds)
    (286/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23712571 seconds)
    (287/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.317682548 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.658779768 seconds)
    (289/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.361033871 seconds)
    (290/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.233279923 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.307406717 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.234149565 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.289344112 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.233092622 seconds)
    (295/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.593639994 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.927499125 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.640763379 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.260996627 seconds)
    (299/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.321986561 seconds)
    (300/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.431994151 seconds)
    (301/309) benchmarking ("sort", Float64, false)...
    done (took 5.494826543 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.418247945 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.878458709 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.269501189 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.234128975 seconds)
    (306/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.003409575 seconds)
    (307/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.25924928 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.844362453 seconds)
    (309/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.57342309 seconds)
  done (took 878.953601839 seconds)
done (took 880.119210409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.267440134 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261548146 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.244114105 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.266614761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.357179307 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.277709302 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.255797404 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.247349387 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.293259331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.295571622 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.244322862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.277055531 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.247607983 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.245838439 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.246150078 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259698164 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.216785604 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.245972138 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.263075148 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.255734128 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.262198533 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.244988131 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.29574618 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.276760677 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.249604957 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.247960523 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.248983558 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.265670423 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.358117074 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.249447499 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.249803508 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.258549075 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.217367653 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.244883732 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.241506402 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.265745872 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.257834365 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.255332594 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.25048717 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.277828822 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.59109708 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.246184858 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.24868207 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.247463807 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.247696739 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.251329719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.24827631 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.254010949 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26010533 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26173301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.578743657 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.262297768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.25054536 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.248425597 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.258339945 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.247539623 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.250514733 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.262432923 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.267409213 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.263520024 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.205880509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.253602181 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.25031681 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.264208091 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.255947587 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.618359995 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.243184102 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.25317795 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.597806053 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.254383479 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.621999408 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.256786222 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.250351734 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.262006469 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.28039886 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.222128574 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.244009159 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.248001126 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.256520045 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.247331007 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.258913766 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.261901755 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.253151241 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.24917684 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.262230961 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.281627405 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.25961591 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.250823306 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.259186862 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.268683672 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.256736259 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.260161919 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.252103223 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.244989014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.259804971 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.253172909 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.253358932 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.253085934 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.253943936 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.260798235 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.59595971 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266608998 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.246619642 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.246329458 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.24891232 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.263830574 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.598186433 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.251211644 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.272465987 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.297893501 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.252024529 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.21269616 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.253831885 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.266238341 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.260124387 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.253667705 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.245841769 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.211574704 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.586853206 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.265676974 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.252243206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.2485446 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.267159297 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.252628442 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.247456505 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225443625 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.253346842 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.265470323 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.372009041 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.261007635 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.282561563 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.249567817 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.254450331 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.279256656 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.266414977 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.282939177 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.254522744 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267178453 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.267311144 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.249386767 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.262353418 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.262909079 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.253009802 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.258398393 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.247438659 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.284737695 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.264928794 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.264344932 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.273552627 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.373081542 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.24972317 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.211012221 seconds)
done (took 211.259365669 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.31152211 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.246951196 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.333972621 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.24887964 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.348399416 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.346060258 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.246955469 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.246679916 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.247088249 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.627537967 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.247613154 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.247495833 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.250611594 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.247059963 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.33039026 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.249591319 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.245914482 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.640812789 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.250169163 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.32072422 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.248084259 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.247301246 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.249632451 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.678515068 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.245769557 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.243580739 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.319281227 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.250269284 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.593067919 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.245063528 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.244740636 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.638280193 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.339197039 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.266955843 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.259223744 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.257128674 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.349313201 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.265844526 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.329775951 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.330474476 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.334507241 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.289495707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.245716019 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.245065603 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.252186375 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.251584561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.247951294 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.278379437 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.247168507 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.249328305 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.590909031 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.260458136 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.249585577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.249159446 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.249382047 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.280634417 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.249750202 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.253693196 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.34095377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.253322529 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.314780027 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.630048975 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686838333 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.251623134 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.250572805 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.249677282 seconds)
  done (took 143.023738454 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.31838131 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.325071234 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.359563726 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.254215788 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.303571202 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.364037402 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.253923025 seconds)
  done (took 10.364904276 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.259491978 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.253360365 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.302363162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.30243376 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.252154469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.398895651 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.252789856 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.263913581 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.249867921 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.305349408 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.252671384 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.25325809 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.25910329 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.253055329 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.30121319 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.263567812 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.368289222 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.254004766 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.253598141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404729522 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.250480519 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.260134363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.305296602 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.264810827 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.25419448 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.259177856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.816716848 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.253313711 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.250929126 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.252993165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.250886663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.291782401 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.253551721 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.250599197 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251235202 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369676203 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.254656308 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.251898135 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.254794997 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.253428354 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.253788354 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.253901142 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.25462533 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.252048318 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.253853249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.277213578 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.254794888 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.254009472 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.254301368 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.254920425 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.304137934 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.256097126 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.252486036 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.251825288 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.309963922 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.261234415 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.25478488 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.251530299 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.255159044 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.251909774 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.405921472 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.303817009 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.254658524 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.30191697 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.254829788 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.254530473 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.255833651 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.255778607 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309589834 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.255513361 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.303490293 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.252268741 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.409878951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.277837627 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.255620726 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.25795383 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.257555847 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.255170296 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.251400684 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.262108543 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.252867107 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.256324207 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.262567414 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.252742948 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.252557948 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357456647 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.364044855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.253886587 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.268346927 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.262746558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.253816663 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.308962293 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.255922334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.253976279 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.308112754 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.37096258 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.310776117 seconds)
  done (took 145.438655887 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.261613599 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.265084521 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.257717703 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.273238746 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.257777041 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.257207844 seconds)
  done (took 8.762980937 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.259153332 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.257922201 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.256924437 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.257335104 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.258012529 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.257749925 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.258006259 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258479792 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.260769215 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.25823314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.257770778 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.257944936 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.257836586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.257967483 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.258192317 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.257280337 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.258071862 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.255543735 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.258190951 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.258090735 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.352810317 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.257827962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258073473 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.259712786 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.261513991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.257767996 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.265758253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.257933514 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.257739373 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.264734685 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.260963697 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.258238427 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.260216201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.263085221 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.26225782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.260023804 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.261534002 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.259228397 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.255960304 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.258959318 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.259229293 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.258948176 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.257508401 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.259565191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.260509501 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.263136442 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.26362054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.265885456 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.259337082 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.259895576 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.259994895 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.259089459 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.25922784 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.259251335 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.260916443 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.263664841 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.26360148 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.25889017 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.259560924 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.260376133 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.259935972 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.258884918 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.261911074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.262509527 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.266453503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.2599646 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.260844447 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.263367837 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.260199758 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.260093378 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.260140218 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.257453882 seconds)
  done (took 92.990056554 seconds)
done (took 401.764660005 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.462421936 seconds)
  done (took 7.655516073 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.48383298 seconds)
  done (took 7.677955648 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.951233991 seconds)
  done (took 21.150467943 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.303012097 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.291877483 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.273340157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.263399959 seconds)
  done (took 26.324499488 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.369253877 seconds)
  done (took 7.562684764 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.253082075 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.253672427 seconds)
  done (took 13.701153827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.609548053 seconds)
  done (took 7.80330267 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.459491824 seconds)
  done (took 7.657891946 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.255203472 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.274011468 seconds)
  done (took 13.959902248 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.239468192 seconds)
  done (took 7.433923005 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.291184031 seconds)
  done (took 8.484704787 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.266093409 seconds)
  done (took 7.460449723 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.301475797 seconds)
  done (took 7.495782857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.922030761 seconds)
  done (took 9.116269292 seconds)
done (took 154.679469075 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254632924 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.253671644 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.255825643 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.256663628 seconds)
  done (took 26.215380406 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.295343972 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.295091882 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.296207625 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.305344755 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.298380327 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.293913617 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.287627183 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.28780564 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.305504076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.298270133 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.296298689 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.29733831 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.294468315 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.287779586 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.297372393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.302741147 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.306347661 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.296561763 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.287381027 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.297476971 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.262651069 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.306503217 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.298479709 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.262808447 seconds)
  done (took 32.252432783 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.460883903 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.333096964 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.414924795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.31385924 seconds)
  done (took 6.718354569 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.314636046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.315999751 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.326877909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.366157465 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.392730557 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.32489487 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289806129 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.284714016 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.270627198 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.316295237 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.391767285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.331935361 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.400138394 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.262380543 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.44955786 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.262344196 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.262122039 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.314553693 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.366618238 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.380731238 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.263370545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.314522501 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.318045415 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.33149351 seconds)
  done (took 33.04812516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.262438898 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.270839605 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.268463794 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.262776707 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.263223564 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.263326839 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.269043136 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.264477462 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.283345916 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.263445941 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.262670985 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.263146517 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.261736015 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.263356879 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.262485329 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.2756677 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.276901243 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.262973197 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266316666 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.269160201 seconds)
  done (took 26.533420421 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.256612872 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.111363665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.608661243 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.513571247 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.256981497 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.260196655 seconds)
  done (took 27.20504629 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.328825087 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.462601026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.263611634 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.595857678 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.674203096 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.265763621 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.264923021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.495886262 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.776686031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.769355391 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.319990913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.330453594 seconds)
  done (took 18.745737053 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.266506772 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.261453417 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.273248133 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.277051658 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.315100759 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.272502856 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271240527 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.258666088 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.318805094 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.322981728 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269962977 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.317620173 seconds)
  done (took 36.624225941 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346807789 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306579539 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.084732999 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0563097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9793689 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.889564437 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.023259093 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.716106614 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.265981871 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532764104 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.201724404 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36513335 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514438815 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2596472 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264272999 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.206484236 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487606704 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733369351 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260436189 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097739052 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288065891 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.265931754 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.194732711 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.290533623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471753771 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.238500328 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.521143871 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.035189376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530127349 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.274920377 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27144689 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.2609692 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.53435651 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891189786 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358596924 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270390222 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023035701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891931289 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.264212417 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.121171838 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.013549046 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266768098 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272411209 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261264045 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.195442265 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.271373398 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725273026 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.270644563 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.973104807 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.262590435 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272731486 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356934233 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.26704651 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.252363121 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375870057 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.267900323 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.259864626 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.26750871 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835679761 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.595417263 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.273340658 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.199617214 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.703544184 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.195833277 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880321432 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.365959689 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.266041254 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.266788905 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196672478 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.157461239 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282419613 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409684588 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.288092711 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.91257408 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954102978 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.222940854 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209388531 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796849693 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263064316 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.20177139 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491141134 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.046387435 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.199569663 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.207300824 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197528792 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928724887 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272639222 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.583574373 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.272595295 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.717108259 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.276571765 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279827442 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286953588 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.485936557 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.148856945 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263795494 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.991408573 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408686121 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286134397 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.720781717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201170293 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.267713174 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.519929632 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.474708294 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265326468 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.206757567 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475690317 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266843026 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.281551764 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.27271381 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.277554105 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.83794257 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.277596616 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.604218937 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284440192 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.041259706 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974181465 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27317997 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.369054717 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.231643433 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.517835942 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.002776016 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164311639 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332472814 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.268554997 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.26570316 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.217581818 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.116909718 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.169245628 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.26738025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272316309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.27790905 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.265944736 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211114768 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.271030725 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267245574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.04516401 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.488752686 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26954874 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543707637 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200475097 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412993502 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.274305986 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.489271018 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.410905993 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.265282574 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525755006 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270999208 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275398404 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279373303 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284678943 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363843985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288021842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.275824619 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.52410018 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.270048301 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.270345615 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.212001382 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.048226814 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269554576 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.27276741 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166701565 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843291023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245343258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.27543966 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156788982 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.280872064 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.334319559 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.272805942 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.277835905 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.982772999 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153251376 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.274080359 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.26520178 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.491507739 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278116488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.195026353 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35133428 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.472339919 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848932158 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.281911237 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.202125315 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.978334027 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.960726031 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.267400085 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.456386675 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268561336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277088762 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.279495388 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.836162271 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.847025847 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272233359 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.126999318 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.276458621 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27975392 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.273474959 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268322831 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.966571797 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.614807022 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.273904876 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.28218065 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411832704 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.282237268 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.203309303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.78633286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274556692 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.269702696 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.045868598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304457205 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.125616129 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74729236 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528567635 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.021963707 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.283151119 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.299522214 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.302069147 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.266430686 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.02635593 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294426557 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.293615589 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.277850828 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.281540605 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.180287547 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.709325087 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839317239 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986603406 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793901984 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155707604 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.280452203 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.154220157 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.730533672 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205641029 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.926439948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448835061 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.733747916 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216983936 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.477778499 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419638265 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.996669152 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.280818548 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.498537419 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149501693 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.037802975 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299565214 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.481908543 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305571126 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.278818321 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.202685051 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.557160909 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535388836 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.028350967 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352150346 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.729920242 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.041206542 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.067685039 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.270997009 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.541439232 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435777172 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816673744 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.658812123 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279104325 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.270030167 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.761383141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.28066471 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.798096719 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893973179 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.286739065 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.481512309 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210009509 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.282732728 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.282994104 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.272716256 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.467443451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.2824654 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.527125772 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.283054702 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206397516 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278460773 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802870562 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.132211325 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.278685626 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.273270597 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977757041 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275384318 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546066013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.284290143 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.954548031 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276882798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208849033 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210713185 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.965871816 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275280896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250004077 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.748280483 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.697033426 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33608589 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292906403 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124744841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.52864798 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.287285163 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.855274576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501752431 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.127701105 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298377565 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.373909555 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.087038972 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.277635372 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156597933 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508705075 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.175851696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.497219328 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.101291011 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.181761144 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273375523 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.487880911 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.155862655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288300708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51154886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.985872586 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.287135601 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974769165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298674563 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.287517393 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288899651 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.719015045 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284858634 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344886112 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28471913 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.285347123 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.285942255 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440741634 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28261932 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280071921 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.288953515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369841039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.652489568 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.963659595 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.048284226 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863509275 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000913318 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.860836676 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.289930938 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276493925 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275701428 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209939936 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424402006 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803337251 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550971696 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408927479 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.779098344 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300438451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102176912 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.302020725 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490260824 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.550963758 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.145968547 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.282362491 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.937037638 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.435899558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.287597986 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.487439363 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755569634 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.812649834 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392787964 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.276567985 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.739687987 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.552569234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.367264331 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27686708 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.865686022 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.29670303 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.560279803 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.282215134 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.276487626 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427745015 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.287005281 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907849745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.287899054 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.436954181 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.051084661 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.241008398 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535979759 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.71510473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.289648695 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86372486 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980533901 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542502066 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347278131 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.288389501 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.381759052 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423042021 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.278528743 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.173528322 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.278355487 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125591695 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.988432314 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.287722857 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867124758 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.543834151 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.27644126 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.279567854 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.300698235 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.287060485 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50202729 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955022203 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503333416 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.289172833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.281191168 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.848318627 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868260385 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293537742 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213445058 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.281672083 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510862845 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.516753608 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304751073 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.731440076 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.989667417 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8169993 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.250041573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301257711 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28944568 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.984084899 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86708445 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.955990062 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.758131318 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935508609 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.281625218 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555751869 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.283923617 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.27980175 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559232639 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.28375439 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.280365012 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.293734248 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.865747508 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010630364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.303620396 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.172525119 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.220090638 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.505834745 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979036134 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228181778 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280280433 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.463236066 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283889965 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410927782 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.291944094 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.291070935 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28941329 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.038506199 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563799745 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.28586259 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.284859778 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.143444069 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29070639 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290758266 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548204668 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287824623 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.956744538 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.632435689 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.536880962 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.288332591 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.269767627 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.285523965 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.281902136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99930594 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.251334845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.851098726 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823085711 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.287601279 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.294703529 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.285904925 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.497975174 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492985737 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.293446093 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.29653887 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290407161 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299066131 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.187021467 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.048575179 seconds)
  done (took 1550.366803136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.30132625 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.293031667 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.321722498 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.360150509 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.322751576 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.321183235 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.30857268 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.324961469 seconds)
  done (took 51.774536886 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.294324144 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.429716232 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.311830759 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.293032042 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.295502776 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.284441883 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.73178628 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.297617682 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.291680063 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.292224365 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.283662876 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.282048831 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.92896592 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.294950263 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.288976192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.278883414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.291644494 seconds)
  done (took 64.397457963 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.289335445 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.617143609 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.372688198 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.287672365 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.029581054 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.300201368 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.698350704 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.309125584 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.284290418 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.352198568 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.934391236 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.328181069 seconds)
  done (took 83.026534216 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.291234449 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.290881051 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.291701413 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.291982851 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.291435658 seconds)
  done (took 7.679699357 seconds)
done (took 1965.784678089 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.528810299 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.951493223 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.893181409 seconds)
  done (took 5.067002457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.432959137 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.480719778 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.601975676 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.620377398 seconds)
  done (took 7.359253242 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.572120317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.660602977 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.478950741 seconds)
  done (took 5.935330282 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.614066382 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.310253763 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.40625357 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.284182899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.288918824 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.287867306 seconds)
  done (took 20.08499688 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.289544594 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.291388208 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.28865849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.291157363 seconds)
  done (took 6.383774461 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.270414529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.991662291 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.274977903 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.287161332 seconds)
  done (took 18.048188186 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.035248479 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.047475165 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.031613743 seconds)
  done (took 7.338561443 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.284783501 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.133047503 seconds)
  done (took 9.642439487 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.574609771 seconds)
  done (took 2.79901495 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.421756178 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.614504877 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.353000275 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.229407289 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.359248977 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.866213419 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.816858793 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.424541046 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.213143196 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.303685733 seconds)
  done (took 26.826479517 seconds)
done (took 122.569196725 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.913678842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.530785202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.490592375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.922470335 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.520303556 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.490250935 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.499123153 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.893370633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.396621982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.386878684 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.887270936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.519632405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.658402577 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.530475786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.65708719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.658921625 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.519136149 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.955342724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.574312687 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.808450322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.499627751 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.521623279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.720329784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.537861045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.514600146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.441534452 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.1163127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.655016328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.741023408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.131456375 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.442308569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.975850602 seconds)
  done (took 188.336975027 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.288111148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.301185891 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.300601731 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.314929404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.288128712 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.288152141 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.301365922 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.289995054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.288418851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.300091593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.293425356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.298697603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.289251701 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.288121832 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.30123925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.288785019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.301661967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.294107025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.293121676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.288514086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.289776168 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.304958302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291533577 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292074989 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.298711946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.289861688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.288874384 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.288386391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.288829164 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.287422369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.28876064 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.299438735 seconds)
  done (took 202.634153609 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.299776061 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.297883523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.291486631 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.287986272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289181729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.289261617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.288904563 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.28834199 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.28956766 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.289047819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289683443 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.290089921 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.302141244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.289831533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.305174549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.303402484 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.299934486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.29449404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.289936308 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.290632541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.289796055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.290459913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.289724425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.289671041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.29839895 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290395909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.290564078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.301400944 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.289927188 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.300156744 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.291916393 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.290453948 seconds)
  done (took 202.609123674 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.492529166 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.297334952 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.298907797 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.252903712 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.298773816 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.297308844 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.29141877 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.487940006 seconds)
  done (took 13.94715746 seconds)
done (took 608.753066207 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.547329854 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.25870301 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.490241725 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.320396698 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.055949618 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.319129387 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.317308298 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.47822813 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.198784265 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.482486968 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.491383997 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.315171647 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.634953541 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.318733427 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.560022916 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.411774136 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.144973228 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.249376279 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.625846 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.825059137 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.559458443 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.758929985 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.481512842 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.212442045 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.638664702 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.748800975 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.956850781 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.142377827 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.319568921 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.626048002 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.922888584 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.210735244 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374319552 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.357609943 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.412727562 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.394665547 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.186960911 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.354818813 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.49597737 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.523785749 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.820586769 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.023271837 seconds)
  done (took 88.800547729 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.287883119 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.287197809 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.288013116 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.287902372 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.288892607 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.287930892 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.287389826 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.287166618 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.287813458 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.286723189 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.287634784 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.28918366 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.287957244 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.288922586 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.288114836 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.286881399 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.287797643 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.289890444 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.2880841 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.287839485 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.288489347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.287544611 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.288907203 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.288016568 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.28816042 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.288462792 seconds)
  done (took 34.721562552 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.300635031 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.544783229 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.701380426 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.309989731 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.301157598 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.304140928 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.373496936 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.303866622 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.303523124 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.303680514 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.449250744 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.303274965 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.333835428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.723218399 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.305982362 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.301813323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.301636697 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.301196481 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.551781789 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.311441882 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.391796771 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.305314486 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.374049114 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.312476442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.320302136 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.301658818 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.3062466 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.81439648 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.303497477 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.450829377 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034612276 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.374635701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.770594874 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.714773519 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.036910673 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.306085623 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.302262856 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.453875162 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.305434451 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.302627787 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.374824177 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.305578022 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.707398277 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.924632855 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.320034039 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.3034503 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.835144958 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.455060225 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.53225491 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.313480205 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.730659582 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.308513289 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.304744949 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.304548219 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.532296345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.31270654 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.303551066 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.820558894 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.325375881 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.375056737 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.305820452 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.303697659 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.559588948 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.306266418 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.547061585 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.307079691 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.310516214 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.3044215 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.709866374 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.308678869 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.938931421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.321212878 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.303353535 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.451426816 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.548874636 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.868914434 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.309290306 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.56366749 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.781555111 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.375335608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.31013587 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.803485491 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.3792922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.309773554 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.305847713 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.30571887 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.304810094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.356697862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.37435118 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.873970478 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.933345253 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.837178608 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.39556033 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.319393064 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.30528873 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.819009726 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.321103707 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.304408847 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.705763266 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.94146207 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.322848946 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.312301461 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.927852756 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.324525761 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.378469558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.313159079 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.717109654 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.309399954 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.357056472 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.305990489 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.31228357 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.30975394 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.379174762 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.311656411 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.306538916 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.916221134 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.47862544 seconds)
  done (took 171.654439539 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.299158827 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.298866634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.301042582 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.300024876 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.299269192 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.3050463 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.298788553 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.300100486 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.304992983 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.299002134 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.300363663 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.300820422 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.300884922 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.309547904 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.308844778 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.306082996 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.91217525 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.299857307 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.305465884 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.300328989 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.083727844 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.304084303 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.312653254 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.301593246 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.300084215 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.302025468 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.319037469 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.303100352 seconds)
  done (took 151.116522002 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.307977713 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.836596821 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.310859807 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.429616582 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.328069682 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.305368413 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.428167886 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.360857953 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.309977579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.305009196 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.304488585 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.591594104 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.31183373 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.792837744 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.487153594 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.432735747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.795318324 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.312243371 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.305439375 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.305630093 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.43266974 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.315899823 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.59196091 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.842569326 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.311841403 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.843060315 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.299516195 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.308499374 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.308224077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.845062072 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.309650412 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.594937466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.382802091 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.363730569 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.846781011 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.795176479 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.796506492 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.448020766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.309029521 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.307223384 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.308041375 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.298337686 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.839629664 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.310424981 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.309355395 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.833664175 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.324900502 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.309762676 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.317026699 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.307631428 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.364493228 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.367792454 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.598144711 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.84561003 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.380487149 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.328837232 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.431618286 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.704604709 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.311784315 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.795653526 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.299579824 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.8433423 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.313668393 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.299000469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.309452895 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3143757 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.450462252 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.43334077 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.79612072 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.314590833 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.79701633 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.452931125 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.309220033 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.309531454 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.31159234 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.844235385 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.798508465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.453027507 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.435837006 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.49125715 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.301956175 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.31023815 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.299554487 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.382351884 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.310258659 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.84507215 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.799418943 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.314994789 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.311825727 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.31277068 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.311567522 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.473995469 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.84883289 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.385132102 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.793658118 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.617061729 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.601616421 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.315146145 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.366173337 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.313104678 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.600125351 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.313564525 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.364871019 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.772134816 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.601372261 seconds)
  done (took 155.790252046 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.546706817 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.419945211 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.397705512 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.419590485 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.876203962 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.854621339 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.591605557 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.438192997 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.416217854 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.544063011 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.409586016 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.405831026 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.471050362 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.381384643 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.029499576 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.374882627 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.400009112 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.428773588 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.400840713 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.292493446 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.914418684 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.593657291 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.472272604 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.22740074 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.403030092 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.033565179 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.837158356 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.852077343 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.473887165 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.534405421 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.850407591 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.374030349 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.224919087 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.949806094 seconds)
  done (took 63.084698542 seconds)
done (took 666.399753555 seconds)
SAVING RESULT...
DONE!
