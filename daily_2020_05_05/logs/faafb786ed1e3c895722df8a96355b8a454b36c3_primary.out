cset: moving following pidspec: 32283
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.335028852 seconds)
loading group "string"... done (took 0.710370565 seconds)
loading group "linalg"... done (took 8.216986796 seconds)
loading group "parallel"... done (took 0.172604461 seconds)
loading group "find"... done (took 1.256838843 seconds)
loading group "tuple"... done (took 1.947750075 seconds)
loading group "dates"... done (took 1.370524013 seconds)
loading group "micro"... done (took 0.204737127 seconds)
loading group "io"... done (took 1.007129081 seconds)
loading group "scalar"... done (took 40.678653486 seconds)
loading group "sparse"... done (took 12.403941655 seconds)
loading group "broadcast"... done (took 1.010062432 seconds)
loading group "union"... done (took 14.01783498 seconds)
loading group "simd"... done (took 4.9334222 seconds)
loading group "random"... done (took 9.2442731 seconds)
loading group "problem"... done (took 1.806409484 seconds)
loading group "array"... done (took 21.397918866 seconds)
loading group "misc"... done (took 1.648824055 seconds)
loading group "sort"... done (took 3.285477932 seconds)
loading group "collection"... done (took 18.622409873 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541765524 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125799495 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140357063 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122855086 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153327166 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117870311 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124474351 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084152559 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.900705489 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146059868 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114289339 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414063084 seconds)
done (took 5.41363565 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172613877 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087942729 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079532906 seconds)
  done (took 1.267071379 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065930451 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127540929 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067062671 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068741844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068381528 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068171678 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068338779 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06805822 seconds)
  done (took 1.637232913 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072617268 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068640413 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066252469 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069807493 seconds)
  done (took 1.378462615 seconds)
done (took 5.632811382 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.802431088 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21452106 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189841575 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.417052157 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138911556 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.183370067 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.655052188 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.322744188 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.19205316 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.09658907 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116017467 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396293794 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12747467 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643728496 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08167827 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097820808 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142258383 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468082287 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071649111 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085441217 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09279131 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131150532 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080220664 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07688084 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149719064 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070750642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144567199 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087568975 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069028739 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.258569818 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177963376 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662097832 seconds)
  done (took 10.581292055 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101204486 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098817683 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068628436 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125031241 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097532382 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069974642 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078085856 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068323499 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089874816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12837474 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091363904 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108078362 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067514139 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071901949 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08511629 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211099539 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083607295 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08413303 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070255052 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080393498 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114816712 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080361202 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082285696 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08292845 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131468413 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180615381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099999289 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100490398 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069406574 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085707676 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11498855 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127783992 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066585773 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066692329 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12476142 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094598069 seconds)
  done (took 4.64626204 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.005792046 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151062961 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089794747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134988868 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065072301 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109838364 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065555162 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082374556 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.117801737 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233230635 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.392217425 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.623020922 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.121502042 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117148453 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065856171 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104032345 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070740184 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069445509 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067996626 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.291024232 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102464896 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111362952 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086091785 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073107934 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070734097 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068003527 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071907198 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064262647 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069165494 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087371258 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076913138 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.329739605 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125750904 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070347309 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.963615007 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166769871 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068117378 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106392597 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165834979 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093674537 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140158066 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069341328 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068659671 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161950562 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064598634 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071666725 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066183976 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085338951 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109589764 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11818658 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064745237 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065065537 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165442724 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0642563 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080329565 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.137986404 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150400745 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063591533 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285423543 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089502771 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069368401 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063029294 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178357205 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.118680058 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.0684302 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067834264 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06908391 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071136476 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.368290892 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065777001 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.21574077 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067113555 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07491235 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069044123 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069450787 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077072089 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077420426 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089291007 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065909355 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073063798 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066262756 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066166284 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067261011 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099612883 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.377592227 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065387722 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070329694 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064402809 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091326957 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098136393 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065849812 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064191994 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100540876 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068701859 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.064935994 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066872412 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.09713168 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063020405 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.070390787 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111780052 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06638075 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.336065387 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102112937 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066403823 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071403731 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103072325 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080861057 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073270626 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.467524288 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066766428 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073847598 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067406409 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069917364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068097877 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07976398 seconds)
  done (took 21.996575779 seconds)
done (took 39.331563669 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.243512465 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08332583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083736596 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083973811 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083577623 seconds)
  done (took 1.789630313 seconds)
done (took 2.98353122 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125723286 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09857812 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065818384 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098430355 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064881544 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106889698 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103287681 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.085796128 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102000374 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066642633 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099650995 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066302957 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066847185 seconds)
  done (took 2.359906511 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082127916 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082677612 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069541027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084237682 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062839736 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081599352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080569074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088166637 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080923481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072246201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062740985 seconds)
  done (took 2.032714267 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080995985 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08247065 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069184984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080555974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062761889 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081330041 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080970639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084372891 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081046971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073218125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062718427 seconds)
  done (took 2.019167325 seconds)
done (took 7.59175021 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075421851 seconds)
  done (took 1.24777289 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.528945397 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.588070918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078413321 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100105547 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19253 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108277097 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.236547372 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083018607 seconds)
  done (took 8.258888648 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.107479466 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068630191 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070581906 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.069794964 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069409867 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070226666 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069450405 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070354493 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070727983 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069289558 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068956921 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069784321 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069453458 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069200267 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070194832 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070027669 seconds)
  done (took 2.408086484 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097083185 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096449231 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073925587 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075455876 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072909646 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071915892 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074777839 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074279186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07179342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07298012 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078096354 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075653147 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075683717 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066707376 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07641509 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07886242 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073129323 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076449472 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077379239 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076748232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07659497 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065944808 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075881822 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076491127 seconds)
  done (took 3.11116196 seconds)
done (took 16.208272874 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105192416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067583892 seconds)
  done (took 1.346342944 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.078257243 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079667415 seconds)
  done (took 1.340267106 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.076940861 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.062667 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084139957 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074103774 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063559236 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062911679 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082622304 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063211756 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063414163 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063542299 seconds)
  done (took 1.879295474 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06471975 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072420173 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068919948 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07884722 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07011661 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064504196 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068193449 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064771349 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073195851 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063388638 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068003688 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083043722 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.067835791 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084433415 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068379156 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067881518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070524273 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067464681 seconds)
  done (took 2.452362791 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063032937 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063608173 seconds)
  done (took 1.316352545 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066531248 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063344218 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066067074 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065749469 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063810946 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062968725 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064173484 seconds)
  done (took 1.634556889 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395958753 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120704291 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328416347 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070391061 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079328323 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25745409 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066483535 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071273566 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071815922 seconds)
  done (took 2.686314565 seconds)
done (took 13.846884436 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080684886 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085386365 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.098750855 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.425974271 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094653475 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06912186 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115183679 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.183113738 seconds)
done (took 2.350993315 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209996291 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.806666391 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.488059636 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211348806 seconds)
  done (took 2.693435613 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338104042 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082484908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079131231 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068963252 seconds)
  done (took 1.768803761 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067036053 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06986957 seconds)
  done (took 1.331828628 seconds)
done (took 7.19940253 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064838905 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08945332 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064309379 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064229924 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064519924 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064435671 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064569383 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065285375 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066606279 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066115741 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066011898 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065767327 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065977679 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065527874 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06696482 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065867415 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066152087 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.176668598 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065044787 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064402238 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065491357 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065281814 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064762642 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064507851 seconds)
  done (took 2.930404243 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.080978199 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067153913 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.068453234 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068817342 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070725732 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070106624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070283342 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068721446 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070201384 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068278209 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071011439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070867316 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068226284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071013534 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06825786 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071132757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070480831 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068644517 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068457578 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07078012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070682068 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068537328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07056867 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070427327 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070828186 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070903866 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068690901 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069181499 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070349237 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071371031 seconds)
  done (took 3.30329325 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068171247 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060926614 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061301761 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069796699 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061488559 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063101573 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062192562 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062737288 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063523685 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062750101 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064205243 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062633567 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063142284 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06320942 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063616285 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066983697 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080566791 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062940796 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062679236 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063087861 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066530272 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062823541 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063050208 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065430346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062519516 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062416696 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06342762 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062436317 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063352655 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062974074 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066894764 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067248408 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062827591 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071411375 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066961974 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062441885 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067968392 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062496696 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063285246 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062282681 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062621578 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062352612 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06302171 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071876969 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063171826 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063849536 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06276543 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063862891 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063355815 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065165602 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062124978 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062798647 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064547715 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063680292 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068037946 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062488567 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063545348 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062376881 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063275419 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06217119 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062154333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062355891 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065825425 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063200693 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080437312 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071633749 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063000611 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063938709 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063606122 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066028056 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064043837 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078428696 seconds)
  done (took 5.861151985 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084802989 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086718702 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067870011 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067941011 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063372919 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063452391 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072055677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063409907 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068125339 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082959508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063437378 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068031552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068262275 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06780437 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063389167 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068157038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07225532 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063920562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06346686 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067315361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063440106 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071323418 seconds)
  done (took 2.739895379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.143852117 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069246061 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108102064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073980693 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072102 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07399408 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069268923 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068958507 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069190359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070076884 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070240245 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069489757 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072170906 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06978148 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069979384 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070324762 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069039571 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069919257 seconds)
  done (took 2.589944066 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07731286 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067320029 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085810809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066717443 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066825756 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066621389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070899455 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071985312 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067205466 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06778077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074316657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06845581 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068436394 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068713725 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068643728 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068849653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068355051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068667449 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073296714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072876757 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072824813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082413493 seconds)
  done (took 2.774924556 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078045595 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067329484 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083946639 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071049888 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063377025 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063585451 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069313883 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067521474 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069216773 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068025422 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068016366 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063264519 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070416288 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068028357 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070896589 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068408407 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067655387 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06793096 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067909033 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063553343 seconds)
  done (took 2.589474353 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082705715 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064694715 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064198812 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070659133 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064438783 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065039561 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072726189 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066445841 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066528452 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087229554 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067400076 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066971223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073002041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070747701 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066939572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073030929 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075421868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072577831 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066599775 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066612729 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087953126 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066530017 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072977692 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066371206 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066439692 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06633539 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066676767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070619462 seconds)
  done (took 3.181759257 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064668634 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065598659 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066005843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065811019 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065883759 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065850321 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065950145 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066667693 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065912096 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066411869 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065984314 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065655312 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065868089 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065552039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066046346 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066165404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065956394 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066345129 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066790853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066576654 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066148306 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065768832 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065568309 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066149787 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065881276 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065542629 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06636509 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06598024 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065927925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065968006 seconds)
  done (took 3.197053169 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074868965 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074193878 seconds)
  done (took 1.366852497 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063059323 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077991141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061990581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073398317 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072096744 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066370889 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07288815 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071966696 seconds)
  done (took 1.7740725 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084337899 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.075962151 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065237741 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077999193 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076633934 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086299154 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127942522 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065540351 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075776895 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066187134 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084131255 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067523149 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075916691 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070744095 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075659885 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079052683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063376772 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070197593 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066793779 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063760967 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066246862 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079159878 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074795152 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063287186 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070503506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093607129 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081816719 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064836679 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07239131 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07751668 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07583827 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062343115 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06541172 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065600065 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063420073 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076140997 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084175723 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072002167 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078469093 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065725081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073667641 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063241234 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074155324 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076474344 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081553556 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065484806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065850513 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063258387 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066051778 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071595797 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063102367 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06990428 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06265151 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078007765 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073715566 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081004634 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063824685 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071158917 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071353261 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072075904 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076357144 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0715212 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074818887 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064733342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081072742 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07490718 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076760825 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062578427 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061722821 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063079647 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079000921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093614594 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0746585 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065578802 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065695591 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062585595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072506107 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066004578 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074540772 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076453989 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064894248 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069930438 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0773491 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069590352 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071484711 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.071622233 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063502317 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068337143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065683953 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08451322 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062389979 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06283624 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065787295 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080251921 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074355068 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064372049 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066129571 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076709312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062246128 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065274008 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065618784 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070629256 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078744807 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069173947 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069648256 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078582315 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07436087 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070513018 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07173376 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061933596 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06532361 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06672285 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076199319 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061813157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071880573 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06852513 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.06519864 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076907602 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063532943 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065096026 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077431424 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076158966 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063462144 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061950558 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071839086 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064889034 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067392283 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078836835 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063544999 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062950534 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062636291 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072653351 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063569992 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071756265 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068397771 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07180717 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061902505 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063190025 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068334203 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.203933907 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067885248 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073657325 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076221896 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071939668 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064895103 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07752616 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072073297 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06817349 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075047226 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069272414 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062885302 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067665801 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072149904 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063597554 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072246858 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067440047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072409108 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065262934 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063717611 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070594353 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065537049 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067687349 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070859827 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064340107 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081709269 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071974287 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063725269 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062384061 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071890742 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066265033 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065404818 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067174547 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07163503 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065408119 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063311337 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065057409 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070878965 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073373273 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067983589 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064510241 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072523967 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080404631 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06344827 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070255027 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.062928856 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063990606 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064208894 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078072344 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073863565 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067509648 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070192816 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060801138 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072505593 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075398735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065827527 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062103836 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065695914 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.067197006 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076550141 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069058568 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065476614 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063771633 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07126478 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067756698 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07190531 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064676033 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067513072 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.070371015 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063641601 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07119711 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065503545 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079865305 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072943824 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063395571 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067382556 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063647403 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076303284 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063521698 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066332764 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067975272 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065702447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064979716 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072178166 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062333911 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078189341 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078381963 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070532236 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067751201 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064921695 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077496221 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071222955 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0737931 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072521247 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07534901 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080840029 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067934188 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071865981 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080307827 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064921351 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061852637 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076758894 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06371872 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064193152 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064188301 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063819272 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072623858 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072867937 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07513658 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062190056 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071601054 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063569011 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067573829 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063459475 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073418191 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072011061 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068064256 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07521692 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064035937 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063274347 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071277949 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062799426 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06478264 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066032445 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072033976 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065180051 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071305249 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067609853 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070908418 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06693542 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06264383 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070578911 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064704197 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070257688 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074247081 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064108114 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070591796 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071436932 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.064294622 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071178339 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068200933 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066564844 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071220762 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06995767 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.200332842 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07077512 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061814279 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075621695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06315083 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075786481 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067937683 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061306257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070166489 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071148647 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069898491 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06524063 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065436595 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070683821 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064400739 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071904599 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077604717 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066431737 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080897652 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07758879 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071431171 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072205817 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070807154 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071207263 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067401964 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069793732 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065730571 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070579841 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065071739 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073867876 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072313361 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071464234 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065626654 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070364788 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066527776 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063302439 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068289495 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068522009 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064805182 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078497121 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065324887 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068277974 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063646294 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06401323 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062847966 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060915552 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069932989 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070647362 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064162031 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075029128 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067176301 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071388449 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080809135 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062014576 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062644571 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061813911 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065150081 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07633737 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064031304 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077031508 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069049979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065990287 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06112874 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064042835 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062382639 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061308786 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061752276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07220403 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065659152 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064442852 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065295792 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072405588 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065814595 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078162642 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064717611 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069184558 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065355811 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062765525 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067789177 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067595354 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072578933 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065922215 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066382966 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06284756 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0646969 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069624264 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071099538 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064766523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070823644 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077610256 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065095258 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072222304 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067732231 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063323315 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072157674 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065302412 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064847466 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067707723 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072922688 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072767336 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065802703 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079866603 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067248181 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070810379 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065029622 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063217322 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064871676 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064872746 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064860486 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067564935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066351517 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078312566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063470464 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071930043 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070419084 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068977583 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075891701 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065681519 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071465796 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070350094 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066682346 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071296523 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078662059 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068763267 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072557344 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065441277 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070403231 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074722512 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067255242 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076391886 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070241556 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065307169 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07064476 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066022891 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064603767 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064625207 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063930583 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075085283 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065624516 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067187697 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067087818 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062471576 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068465098 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066492214 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076950085 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071308013 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.207687351 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062332875 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061596883 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064852858 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065075025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069038615 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070475712 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075037347 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.0728573 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068865894 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064430901 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080081174 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07514906 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073034103 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066400795 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072902383 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065608627 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070716646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06808374 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068455252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064701738 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07138034 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069557764 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066175677 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073497966 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07257806 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065887174 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07069814 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071338774 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071262831 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063565631 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065746923 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071850056 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074870722 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072734011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065379522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08079145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06637769 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070050262 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067673615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064069419 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072449023 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061911934 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069593699 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06416173 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064615645 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061758884 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065741111 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065111955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070331641 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065900525 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062110892 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078801469 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078233657 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069437114 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063031213 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062462846 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062249359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06183385 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066362898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06477624 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071190174 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080819058 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067702593 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067668063 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06338537 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065421952 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072597943 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073109812 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062835413 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063738945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06813275 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072082543 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077094568 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064491422 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065035178 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072353399 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071690269 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063322576 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06842811 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063160137 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073763417 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08261175 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065973026 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071271456 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075685221 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078516618 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065420804 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063119962 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.063747593 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069621512 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06908938 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065581009 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066241264 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085176764 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072753874 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067777517 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064129201 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072182348 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067936815 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078927831 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06652143 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065554196 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076734331 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071523457 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072551119 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075334949 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076923877 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072034987 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071347584 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064376614 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070358789 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064510694 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067883981 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065946851 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065422 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071036975 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073427988 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067886462 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080756801 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079014049 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067073944 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06252526 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068064809 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067959809 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063928626 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066124748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.0637321 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064063478 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063659451 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064161294 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071246915 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074383978 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069405571 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065510871 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06469474 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062414349 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074351872 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071713365 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071091479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062375513 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064470471 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065356817 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074210633 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067215888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066481515 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071041933 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070467645 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.205457852 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06294315 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076272613 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063073676 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070288046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066367516 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064143066 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064125737 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071429257 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068879553 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066805668 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071861653 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07256118 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067217104 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063150486 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063553913 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07555124 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064274156 seconds)
  done (took 43.110298975 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099922169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064417756 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063720826 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063825037 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073606283 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065030746 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064152243 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06501756 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064914301 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067240436 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064064337 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064077603 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071957518 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080089401 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074639523 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068322199 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06411587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065534876 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064221386 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064818468 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071521635 seconds)
  done (took 2.729017863 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.069788584 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076997724 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074099748 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078975239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071036271 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067332066 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074535522 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06771123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075584658 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0741482 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.0773274 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069349915 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.07409183 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074885289 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074538714 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069496612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077182764 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073358623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069037603 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077073009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069005324 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077090532 seconds)
  done (took 2.887282155 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064118469 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063334189 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069389919 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06287962 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065259342 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063636605 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067969174 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063612958 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068589098 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067285101 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067686118 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067243693 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071639429 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063120074 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068402268 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062968831 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110721258 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068511979 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065918758 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066191995 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063480713 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073631536 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063391946 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063864759 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06689022 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067867154 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066192871 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063407219 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064814292 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067257619 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064800783 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062830991 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071412751 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070690957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067320066 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066700673 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064685167 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06482825 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063439156 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063930707 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073808291 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063818867 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065367822 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071934454 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063279616 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063260382 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071982029 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065265664 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063080027 seconds)
  done (took 4.570555195 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.074207269 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10986543 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067693957 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092919723 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078876996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071464497 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06991392 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094475876 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064702712 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066624638 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080035543 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078418272 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065068385 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067109811 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067780782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0654633 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066436814 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064309763 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068373304 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064841403 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068604819 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085468949 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.075586324 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076013498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066376708 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064402057 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066136989 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.0682352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078553592 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070588121 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068290698 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069197731 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.078844633 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070215522 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066337994 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066628854 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07923491 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06734855 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066477319 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065189192 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06602142 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068050226 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071152692 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079380352 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066879606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071871138 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066668611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064322706 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078277229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066655434 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071004357 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079698639 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06821115 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067061709 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068084158 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078765046 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066644756 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065651035 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067218317 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077940042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064271493 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066740321 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.076929732 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064363279 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068580286 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07672785 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070335401 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067899498 seconds)
  done (took 6.277592931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071883891 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093103318 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078713825 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078532641 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072788839 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073762209 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074842968 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075935314 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074983977 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079182327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075047695 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116269164 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070630812 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076700752 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074527008 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073417353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073643177 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073999226 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075367155 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074696272 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074565338 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080877075 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075066142 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08071686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077941596 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070612933 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074794362 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074953775 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081369622 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074849935 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078037429 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074787901 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074881082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081296587 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078613975 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074896535 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064078333 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075057427 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074792664 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07484267 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070485629 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081199213 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074810729 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070685883 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074844817 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074644271 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081697032 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077842837 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07646468 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078334957 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074749964 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080820846 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074512242 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074602306 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080939844 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082931928 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079233896 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079028135 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072475422 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07839543 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078806546 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08136436 seconds)
  done (took 6.095150767 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077243181 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069392103 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080890972 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061625919 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061426812 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072370432 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062923354 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065499992 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071619615 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071920755 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073877349 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074119431 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076417988 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07397037 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073661616 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076462173 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073937217 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073591395 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071656509 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073639719 seconds)
  done (took 2.753540586 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07560414 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080921001 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067619222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073741681 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068779994 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073522973 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068298437 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069070268 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069490716 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069069254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074942279 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074877414 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069757306 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073647801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075507708 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073748846 seconds)
  done (took 2.465041043 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083006923 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071106341 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079385688 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064799145 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068461651 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063731148 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064431495 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063030786 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064236226 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07779814 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.064736651 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075832125 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064985155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063741582 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064269963 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070507136 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063887898 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064588749 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064778037 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078217988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07171138 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066070891 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068352323 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064745844 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070033244 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072149804 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066212245 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068522425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06498613 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065155049 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070595023 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071759846 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064472399 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065695826 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063678579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064763616 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06452183 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065055335 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088235508 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064636191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063382972 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070117881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064924139 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066252042 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064052091 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065029765 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063969217 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.070336098 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065036686 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069698021 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063374658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065297709 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063565602 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070338902 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065793633 seconds)
  done (took 5.035955105 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077708407 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067050808 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061272833 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061444288 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068510262 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068680775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068296105 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069452239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069451703 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063460484 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069820914 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068544204 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069614349 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068693893 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069573993 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069053519 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063076384 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06895164 seconds)
  done (took 2.542288965 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072199412 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0666041 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070891764 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06631806 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066263864 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066734375 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06328395 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063360294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063316274 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066359262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067693339 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068111623 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063256884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067487091 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068200472 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068296119 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067921628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063579546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068577417 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063587218 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067924502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06364201 seconds)
  done (took 2.774481457 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094541743 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082805517 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.138819914 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080571544 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088069047 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073438263 seconds)
  done (took 1.872540625 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091792594 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098118907 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06701172 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067903869 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074564341 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071495255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072399007 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072139195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076318579 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077358841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071993296 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076729786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076660192 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078438567 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074321913 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075804674 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071995444 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072265166 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068715259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081521947 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072320627 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076617541 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072239411 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072221437 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072754189 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078603157 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076681696 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077277082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071927272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076853792 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074438644 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072048945 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077043788 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076920402 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069048046 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076376722 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07194818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081730274 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073455376 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076951415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069046165 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074264999 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076500805 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075782316 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077123886 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072426165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076348864 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072130518 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072351639 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083398804 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074405948 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078591 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074309193 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076980808 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076250769 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082837954 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076673992 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078136286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074270669 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077023912 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078350119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074329046 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078379484 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077108917 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074141888 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076367576 seconds)
  done (took 6.307658637 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103186664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069656325 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071997802 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076904061 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078347401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072293095 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072257051 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072483242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072423137 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072686521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107768873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07256879 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079207006 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07901747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07268655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072370851 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073082233 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078761975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069615419 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08347773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072264064 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078696792 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07842702 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078811181 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077426124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074557094 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072112279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072005546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072427581 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072421537 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076131721 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072725259 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078767656 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069354119 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078792248 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072592323 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072403241 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076508122 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072253013 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074706116 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078955329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081788761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072206746 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072103791 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077140869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072449323 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072402916 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069206693 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072647612 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069901689 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077348501 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076992304 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077417398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079112433 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072678133 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072341995 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072192247 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072239246 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072671197 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074408451 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078573129 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074236069 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083528884 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072019991 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072083642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078405541 seconds)
  done (took 6.323829411 seconds)
done (took 129.250912917 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210000012 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.183789944 seconds)
  done (took 1.69607615 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073571764 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10657515 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085109584 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135993824 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071671969 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106007357 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103688411 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083255509 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071402058 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072913632 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073141469 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075473684 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138723893 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071173812 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07120273 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074182499 seconds)
  done (took 2.732350988 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104254861 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167818085 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111507067 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071024184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107395373 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079789796 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.070696602 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084701594 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078009135 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072771292 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079557294 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080333289 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072854012 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077702506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078028033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079477711 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072552249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079390883 seconds)
  done (took 2.8901689 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103229569 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094737871 seconds)
  done (took 1.526636316 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.172513727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133467045 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200816552 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.346726806 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15944601 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.43543395 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142877794 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142400678 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115878204 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135724794 seconds)
  done (took 3.305922525 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103606152 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168534376 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296277701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123762841 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078160596 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094178434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12591451 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083554691 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086227042 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.085421833 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085887714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080949988 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105609938 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078974911 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077781202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080435364 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.109043198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076848246 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077930946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080677973 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.108248462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071526559 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079270793 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076455991 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083045024 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083321764 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073045867 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071905884 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080372449 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077376396 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081983332 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09037377 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083025857 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107667463 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076274684 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10976945 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080783303 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078157505 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077272024 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.078250686 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082108244 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081942661 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080337207 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080209763 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072322876 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080665723 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072666008 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071183294 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082578758 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072564792 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082380422 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081309882 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108843972 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073007116 seconds)
  done (took 6.237878288 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107081912 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106401338 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070727768 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111956368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104125254 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070358416 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105644869 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098678024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10856352 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072420754 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069639014 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072118871 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081311169 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083571838 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115142231 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107410403 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072451255 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072482599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110031667 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110748135 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071754346 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103885227 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100401445 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110799845 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070575356 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072499845 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071398631 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072705251 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078040868 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079334327 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071740655 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08128367 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089819998 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077341753 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070153243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070709661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071020264 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080282582 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08082186 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080585687 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079024673 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070229407 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070575522 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071429043 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071709941 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069426891 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078949561 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080169715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078497836 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070405726 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072671713 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070657256 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071473601 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079930494 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078071371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083520187 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08070689 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070864218 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070801623 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073108144 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080982903 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081166111 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080670605 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071708115 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080706869 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071366765 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081481981 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086473494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071225562 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071983737 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070332845 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070020651 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071729502 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078118313 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078572115 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072043841 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070701699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070650944 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080863875 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078909187 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070468746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078120079 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0698914 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070498897 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071809706 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071911762 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07715184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078594021 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069943613 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068664394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06851253 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070542334 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069140187 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078313393 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079798538 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079678754 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078857897 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071556105 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079657885 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078936414 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071838023 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079346359 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070253059 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071773395 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071490094 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078815929 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077988836 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079834207 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070845527 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070764927 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078195605 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081248125 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071942724 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078837113 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080627312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079101281 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069942919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080973948 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070654692 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078430181 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068014003 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077198409 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068295058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.209810069 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069596227 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068605816 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069110187 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077862145 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069973922 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068917862 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069873266 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070496265 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078140656 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080941869 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071643026 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078604147 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079411139 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072404791 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079194302 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07102956 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07984771 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071304158 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072011338 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070087181 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08306224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07156131 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070738924 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071709215 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080863701 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068816129 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078211022 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076095076 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068081752 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079929565 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07860603 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076079048 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078484124 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070067197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06878888 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068706575 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06872839 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075997882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077438693 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072637884 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070687302 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078237131 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080738197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070572546 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078879366 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079123121 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079606478 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071525317 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071155682 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082362038 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08127972 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078584139 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079579095 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080328878 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071626828 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078694699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079476379 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071482977 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084412388 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071739046 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083428745 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079927223 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079870219 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081780083 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081246254 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081565409 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081565391 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082997259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069340849 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070321911 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079782427 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071796949 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070996722 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078688955 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072377538 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073059001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084475748 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06917044 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079878362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069438457 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080333321 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070397142 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072372662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08386758 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0719356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072237276 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079440795 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070817357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079093526 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081964634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078715565 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068624642 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071864852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079276074 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080273962 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070416043 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069996003 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072390837 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078599584 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078054133 seconds)
  done (took 18.784081325 seconds)
done (took 38.51121902 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210371558 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156196292 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190332208 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117924797 seconds)
  done (took 2.09278913 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.106867466 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097097399 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091070689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067329337 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096672151 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067303374 seconds)
  done (took 1.879882272 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.287448375 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194918115 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18101686 seconds)
  done (took 2.013825338 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208279365 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193956006 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459288706 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279387579 seconds)
  done (took 2.58518574 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138835503 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08154502 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064122153 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082122492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.122823699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148823814 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.091866545 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116812625 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075091654 seconds)
  done (took 2.324940947 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.145339804 seconds)
done (took 12.412503174 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.244733396 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.104140942 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.222805981 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.171042246 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.089491891 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10544017 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074283649 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.206038109 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075990573 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101796705 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068284741 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.171252565 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147178257 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211557777 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.177490483 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07942265 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.183109787 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.178000302 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.246904384 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087360158 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.186092759 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068262829 seconds)
    (23/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077854261 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067353114 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.215533809 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 0.349956033 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.179515211 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081581252 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.181529154 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079891262 seconds)
    (31/309) benchmarking ("sort", Float32, false)...
    done (took 0.134492291 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.122374346 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076656268 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.212934374 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075316794 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069064711 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.192445802 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109062861 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075686006 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06761739 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124209852 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074175523 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075918883 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075492149 seconds)
    (45/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072579615 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076949999 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101388446 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107077973 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.171591777 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140263348 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088581327 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072521007 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13464771 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075766748 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066485763 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077908052 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.130788038 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141319614 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 0.14744174 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08944241 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084526375 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080519446 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086427177 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076149113 seconds)
    (65/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073926991 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.227432748 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091724081 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071409772 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175396609 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.067904608 seconds)
    (71/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21806911 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075172199 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066924414 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075914034 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138243603 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.129763049 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066641704 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.177482437 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076902285 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.161985281 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.182502776 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182433285 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.101476611 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173342017 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082279052 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075121367 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077693802 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07744787 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.08833698 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07569046 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069514218 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.068348546 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183046289 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074960589 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077665458 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.35893889 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06649563 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068601472 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067004962 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078393638 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.230888978 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168707032 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067182102 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074139646 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171503646 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091017082 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092742639 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.064596488 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072353576 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071887942 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073835146 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175151504 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.091086405 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181288403 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.091464697 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.196374219 seconds)
    (117/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.126589188 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065471889 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07586158 seconds)
    (120/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066366214 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088382779 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101526443 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073813168 seconds)
    (124/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.126555748 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074444855 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066266577 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067349242 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066189739 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087844249 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072069316 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065269216 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065726987 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065760741 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.091188082 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067255335 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077538268 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178129482 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078282203 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07610428 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.09084347 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075831544 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.128630642 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0697542 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.068796797 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069639211 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075207397 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09381721 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 0.146461455 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069308119 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074247245 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.165196742 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087928501 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065527811 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065693961 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072611207 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219602531 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072225479 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067930571 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066481416 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066918535 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066737833 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.205584623 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.12846524 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067982577 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068131853 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06796364 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.1979933 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090599023 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070252159 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07110418 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.067661998 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142589795 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.220021399 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.18078664 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076641667 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069707371 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089103192 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090204952 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.172384505 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067876116 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068826229 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079894666 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075839735 seconds)
    (184/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096573773 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.140741309 seconds)
    (186/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.127826607 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.068469249 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067760001 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073850426 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.07998856 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.06824898 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.093222465 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121789824 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.128853947 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091290604 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.067350897 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119561556 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069595946 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068087481 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.196157995 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073813841 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138199297 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08446005 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068028584 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130206134 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066071893 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087862469 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064644008 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175883444 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065255571 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071866307 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.065477675 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064971203 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071928905 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.06779478 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16837941 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064215472 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064549272 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078293801 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.073023244 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067890374 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067016741 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074760702 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.06580095 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.077591974 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067496311 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073418464 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075830721 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075318606 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066653771 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067332034 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135892781 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067066863 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.176521164 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078488875 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06638282 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091024337 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067530866 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074258343 seconds)
    (240/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067653669 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111699557 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.166955984 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066267464 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064769802 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06599799 seconds)
    (246/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.076411137 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.068474279 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131712258 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.065158733 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120503526 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.064628495 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066166625 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067059252 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081451527 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07741354 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.079322129 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066813702 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119186737 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065382915 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090906933 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125522806 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069559662 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068964307 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181442066 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141712443 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07263194 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06608106 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189880685 seconds)
    (269/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078924165 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086708051 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067386362 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066712972 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067403914 seconds)
    (274/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066815348 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074502187 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.122189616 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065210936 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067698949 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073830721 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07221841 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066453533 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118028082 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065880721 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065455025 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09130404 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084403593 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063987626 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126278536 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077622326 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130224443 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142223701 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.065283566 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073100813 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067045287 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.065116589 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.064072062 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087923356 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066677786 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070734051 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076214736 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06399787 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065210824 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064452 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.064241637 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064980977 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086937093 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063448388 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.063985276 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070685548 seconds)
  done (took 32.921730224 seconds)
done (took 34.284943954 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09093645 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100155282 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076422157 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097741025 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086321183 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103207767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079251053 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084991827 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087488018 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086199016 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085097976 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.077902802 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080564834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079679421 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078152809 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103843746 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085022773 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078544622 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078784325 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06981802 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078584781 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069957563 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069706665 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.076654117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081468145 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077532215 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079662322 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078786205 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069951425 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069461374 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073954105 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077951436 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069085389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081394683 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078128912 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077471211 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078914933 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0816247 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068176481 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068657922 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078100938 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068152349 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075684276 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073187526 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07055545 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072328812 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07410964 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078616751 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09696334 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070631689 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075843087 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076267598 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076901031 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071498754 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071905239 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074441239 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072054362 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096270947 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074140189 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070693449 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075223161 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075550541 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072751726 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074327711 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074378294 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076575489 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078328908 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072604687 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076515749 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073266454 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066372415 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074254847 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070993652 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06625541 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077294896 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080807271 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066890477 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072614793 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078716776 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076680153 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067877994 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07118023 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066094009 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071287669 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070600227 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072376051 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071532003 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073451171 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066095257 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074665788 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073668955 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074169487 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06574328 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078724785 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066548754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072464267 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066618134 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068145156 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06603952 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072330794 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065827672 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070719418 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075034208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065297551 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070792263 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079159262 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065806727 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073134467 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06835725 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068013988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079665923 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078821925 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067197264 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070497135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065634588 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071172222 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065760972 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066593422 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065794366 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066972264 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071396128 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067711635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073257157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072918841 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080529066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067485503 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072638391 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073226094 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067886829 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074231512 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067642538 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067836504 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067122182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081387463 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073212005 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067368434 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07287498 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073297277 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075683503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066604612 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076429112 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073628808 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07218005 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073910361 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067364565 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079123188 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073236211 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073131092 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067426031 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067711636 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066769894 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067701705 seconds)
done (took 12.926212434 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069074379 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117690731 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091867829 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092613568 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082225236 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067044974 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075880271 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09220992 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068015888 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096811719 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089715722 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091312517 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11357728 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067812389 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068476443 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069408827 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070086083 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081469883 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.096867008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090468802 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107945015 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069006242 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088430293 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089778759 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085902919 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093369727 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067603869 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067339696 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06866109 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087841741 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091737404 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070689772 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069565559 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093879876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087851515 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083169986 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069154718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078403334 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069503144 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06861912 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069986008 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090954592 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077595044 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079628585 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067703632 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074445147 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067797386 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084162285 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086555885 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076602404 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084053408 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.091935542 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070320788 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082761917 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065723456 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082105959 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076353732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066699437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067595345 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072748627 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068633892 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07048373 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078056492 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075876863 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072293069 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084860897 seconds)
  done (took 6.728251127 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083153603 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093848814 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084265323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08646264 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067956156 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068721934 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071269397 seconds)
  done (took 2.036659277 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06727242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086976081 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091552633 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092839523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083352968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093703262 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077119881 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068484228 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099899663 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06769798 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087993609 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100314791 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073165762 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081085552 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094351513 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069042811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093992276 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068915698 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069786314 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09411384 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074120262 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096729194 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080131434 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068194897 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081620271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068745295 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098441706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0747352 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068571215 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068380807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070034006 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.094999294 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079641063 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082374863 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070168267 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08368785 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082720473 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072283355 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080040444 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079068918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082561284 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070124584 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06691159 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069271555 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072127729 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080896973 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068423514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070691082 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07040336 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088628809 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067734049 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081780184 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073677097 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075597317 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074213878 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072623925 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075756893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068752613 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086404772 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068115603 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086749895 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085733529 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082116251 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086060614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069076252 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081863227 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08228242 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069872281 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070865879 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070366742 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085725024 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.0720408 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070843829 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08053617 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068787156 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093851514 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093756433 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068750941 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08347707 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069775816 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070201546 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080757837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093756972 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075279783 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070248181 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073912351 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07132248 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072152798 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068272501 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073012879 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070022038 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074534695 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07035956 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073241059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071480939 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086263477 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068452191 seconds)
  done (took 9.025788028 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068667509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067655382 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068937099 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067667287 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067530217 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068323691 seconds)
  done (took 1.914412281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090062706 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067773348 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080251107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067736165 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103957643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.084588007 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086187268 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078833724 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081385331 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079346776 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083784297 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086212312 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087769115 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070099726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082705279 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068803479 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083720485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.071751037 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078758578 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070796955 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080917543 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070291612 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070153617 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086104654 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071585634 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069439927 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077562624 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079093161 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078670843 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077339558 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069695499 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071326458 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074589753 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076868908 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083043109 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074739505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067693152 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073928487 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070553706 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071262542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085800465 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070359736 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072549343 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073996434 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076774289 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074621738 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074368075 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076364127 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082814189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073992341 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075042956 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068509503 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071430006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074252221 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077389256 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07928293 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076861776 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085975809 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072391851 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077222107 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069271483 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073300121 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079805334 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073524075 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077889526 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075183401 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075055226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069784616 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071303677 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.069882694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076970734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069825753 seconds)
  done (took 6.975280597 seconds)
done (took 28.177890598 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.511626633 seconds)
  done (took 1.971931775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613846949 seconds)
  done (took 2.104632724 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.442119223 seconds)
  done (took 8.929028904 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.384654774 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464514164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.738937458 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133214648 seconds)
  done (took 3.220785502 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.701130822 seconds)
  done (took 2.198342155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233078384 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227473062 seconds)
  done (took 1.965439608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.347179906 seconds)
  done (took 1.838087262 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.082796717 seconds)
  done (took 2.575660364 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.233387256 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164020277 seconds)
  done (took 1.893060731 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445727669 seconds)
  done (took 1.940283258 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.445970468 seconds)
  done (took 5.939101651 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222546682 seconds)
  done (took 1.750017786 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236131937 seconds)
  done (took 1.730412625 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.743278014 seconds)
  done (took 3.231798767 seconds)
done (took 42.790076806 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083120307 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08527116 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08473111 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080943001 seconds)
  done (took 1.805213052 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074748341 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07066353 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074664744 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070512551 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074548964 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071065451 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072240797 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0754039 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072845188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07298863 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073011065 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072969346 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07596409 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074959688 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071986912 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07609205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077641813 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072953411 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075693757 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072893231 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070673908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075826211 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076086443 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074921286 seconds)
  done (took 3.263370695 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078414159 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073090265 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076748752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073070104 seconds)
  done (took 1.798531368 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076250045 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.087824548 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085879364 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077297719 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088151074 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083448299 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0677373 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068804136 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070429219 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078566215 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068397629 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.0952779 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088636011 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078978815 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081097903 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065714776 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067649477 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086601965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078753713 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079994377 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070619273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079210119 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068332017 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089550585 seconds)
  done (took 3.374055377 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081266636 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101434701 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080523231 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091486759 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092737181 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066230482 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079598976 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093682786 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135211997 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06686431 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072702911 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066353379 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109808706 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06642219 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080609428 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109108967 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113301718 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070133529 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102742215 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067945886 seconds)
  done (took 3.247948594 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085747863 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069525033 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07053667 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06599096 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076202351 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072899188 seconds)
  done (took 1.943503265 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068207709 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06780777 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067687589 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066913078 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072384767 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068027186 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066555519 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068633728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068746032 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068269362 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067735765 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066604379 seconds)
  done (took 2.316020262 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191212346 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068605075 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070672178 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06669779 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07050026 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067703417 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082403254 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068574758 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093508011 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067036247 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067449487 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069685182 seconds)
  done (took 2.482834582 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19566924 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074910131 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231478776 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150598263 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106697648 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112073659 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113892308 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109712019 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133669121 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096599999 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155467819 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15885358 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103339436 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131768938 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088375598 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120181445 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145462463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161852117 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101897536 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157428565 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140021208 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126065781 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144687524 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100360332 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103944634 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121125399 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073908367 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079613258 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167431003 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126451696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136751396 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106579997 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089413115 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175399433 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158452545 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135678304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143679899 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081397494 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117409583 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128451071 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194881135 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089381045 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159906639 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108694837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080231765 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129636124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114590673 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.115477235 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.100569805 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0864679 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278529339 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175807425 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128951986 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085224291 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119775612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110930201 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111016989 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117086122 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173586224 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154858721 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125541564 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071823271 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109987375 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146515329 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128159062 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10747692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.121181327 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090031073 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126107385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150740861 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120416191 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133928294 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112674906 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086346858 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116458647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131143348 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119918132 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165790457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119476756 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071404181 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11490735 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09552545 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079055181 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143563947 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076102496 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171406154 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101476904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.124388156 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129476811 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10921466 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108684522 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152233792 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136434894 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101297087 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08433596 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101485948 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113447435 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136303008 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084901068 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105408643 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109959627 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077674209 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1271907 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072984745 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117345466 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092949603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116490687 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122227613 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076850926 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265775456 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100688114 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099375515 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128442589 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154390099 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08883251 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081368934 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159963357 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11951418 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102875812 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138032162 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151809145 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.120033808 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096653689 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14094851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165759799 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089364946 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156615084 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102715699 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083855426 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105897826 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12097425 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111226171 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121675108 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081713266 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117742498 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158133281 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075123738 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096200066 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13325556 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082083902 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081200103 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103511981 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102058467 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095808856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101364824 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104063757 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132923889 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122096525 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104351326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122359108 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101087738 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161312016 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087965093 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102358811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104040431 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073159014 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.129816028 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147652429 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077536999 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151889614 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118856467 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114852074 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118747806 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084191599 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133669354 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079441787 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07202233 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137146291 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11137502 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107623852 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.144675528 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259996388 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123395616 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118436651 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128395623 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126785767 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125787087 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108169654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089010747 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113350092 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12612249 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073237535 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091750187 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081570081 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104274458 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094167277 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084757596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138091881 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119737573 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109761657 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112850858 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097090139 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144083677 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078482589 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124029606 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122432474 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095421283 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147697461 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148024364 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131056926 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100644877 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133153506 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073881697 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075176772 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089482923 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122037076 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08438664 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084644647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112543532 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144838854 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125110112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131771373 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122649853 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118000576 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152982184 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073447007 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118688785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139001055 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119089143 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105089313 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089436715 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097749122 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138613896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103583398 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175658432 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112582463 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124225694 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153164744 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101416601 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079821803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100516087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125996771 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243374858 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137391728 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098998149 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087677093 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107830552 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079443742 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101206451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12377231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115224605 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13260649 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.110226646 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128197544 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076897719 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108928365 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116696819 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115949725 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08451593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114198509 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158703013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097206493 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115819154 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144910153 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079899314 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137699296 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164883451 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142725905 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085436721 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104944397 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119909892 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123534109 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118025774 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134440089 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103919733 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137452808 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109479487 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086124684 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08714756 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095857654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103119311 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112726515 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.10357287 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112540484 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095710359 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127711866 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102320112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109710219 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116170163 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099504609 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095873579 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094608065 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168094761 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113127768 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165023889 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099118515 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13733348 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154642605 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075714581 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079110377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080772518 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133237636 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084622886 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12625326 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.256804646 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112675003 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117904022 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132073293 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092725246 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069892697 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106974886 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128854841 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120958322 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095886914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101793918 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150835612 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114085207 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076148669 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107228496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111232867 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099610094 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162294705 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079237062 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104097787 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07479872 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076876311 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118754083 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144909772 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081815857 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101933845 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116246688 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109529574 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123147434 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098856132 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110523695 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12921207 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143089586 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125610125 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089324617 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109120902 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120718345 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147364362 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105358351 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099704884 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165669783 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145898536 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150208245 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084629838 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109342155 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11029529 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105366596 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131049343 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083414333 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153092154 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080826894 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126866483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097054455 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086267574 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121361162 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108246947 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086035648 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13813194 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112912088 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079364227 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223665695 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108341513 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1145616 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100036191 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073265338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131050417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072053338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127925742 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162708493 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07812852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101215189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092380215 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079887153 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099855844 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097609956 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083512827 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096495026 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159667442 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084393063 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136954195 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125151372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106374635 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129580494 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099651828 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639149192 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078143745 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14543317 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113110376 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170394468 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09984067 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116704806 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109153078 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117553421 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138207831 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101380946 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179517571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126933415 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114843329 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079404077 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101412014 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103170699 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087546446 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103985563 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109011697 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108852367 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091341611 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112299649 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116965598 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079674327 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093329684 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147941976 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112179103 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13561 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13360228 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083853982 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113625744 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128883421 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077715285 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.113359808 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145405207 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102000514 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096624767 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081001562 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098545176 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162413139 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072396788 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148187992 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113888954 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107067485 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10686405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103795948 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124436689 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099709262 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115707241 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089836849 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.134734677 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107792815 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080258928 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077270644 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101109696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103362074 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093265108 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091953085 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094314555 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137561808 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.06894305 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09139175 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107888678 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132006423 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154143858 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101336411 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079062791 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108761407 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10941843 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106655615 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111798923 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077028877 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077384886 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076791482 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098565344 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113975285 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104053828 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108824252 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099237235 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139094705 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079317102 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.216449907 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088519502 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096653556 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086058719 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074084202 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088767949 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089082627 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093596211 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101651732 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15110427 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.0885291 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.082855452 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084120204 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071206004 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077853711 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112276559 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10061004 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106129392 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097194456 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.077434505 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.358104603 seconds)
  done (took 57.443498004 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119342269 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101776555 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101393184 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147398467 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125228492 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203124695 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.153165518 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192092164 seconds)
  done (took 2.747082269 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070706526 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09825403 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107432415 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085442314 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069155232 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07096131 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22973273 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084073458 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068922063 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093650934 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079252463 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070855125 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.451579958 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068147215 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06933047 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.077440451 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068820125 seconds)
  done (took 3.467356612 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384124691 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617384094 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354652783 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079265489 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.985374009 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093008076 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.190068453 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142924136 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082193687 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537068105 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.3655235 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132737827 seconds)
  done (took 18.580695197 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081789642 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075790561 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092392331 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.09254719 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08060629 seconds)
  done (took 2.037377954 seconds)
done (took 106.052453055 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08103406 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.431221747 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069784738 seconds)
  done (took 2.14209164 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090332367 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088502952 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088706742 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086131605 seconds)
  done (took 1.975513223 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074564318 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076428714 seconds)
  done (took 1.764828408 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226924777 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173735089 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095564703 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083193084 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079668187 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08060473 seconds)
  done (took 1.861892906 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072632158 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072617445 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073400483 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073596391 seconds)
  done (took 1.905625879 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.067902178 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066699183 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069121202 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071276705 seconds)
  done (took 1.888483072 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084332572 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083782448 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078766878 seconds)
  done (took 1.860899695 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100312043 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090762081 seconds)
  done (took 1.804955942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080742084 seconds)
  done (took 1.696384437 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08855483 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09785362 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131349403 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113950252 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137627674 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.11417752 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.0843032 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085589492 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078438901 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085892038 seconds)
  done (took 2.631908455 seconds)
done (took 21.726830798 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078321297 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365670987 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360091123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090196192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.679933899 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356918588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970018032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092956489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142641697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07150335 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086559009 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.658985295 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961519229 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322316486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.947756709 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325227239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650588918 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069245039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068518224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068768533 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955880939 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068465915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068653662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068710354 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650605945 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.40633357 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071714822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327620087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071720075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073604031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359074137 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072030543 seconds)
  done (took 16.157431521 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070112152 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121202064 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074895976 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084566921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070788925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07088297 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071820395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069644118 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120394532 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068977514 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085792735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068612276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072683965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069331773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088323894 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068892706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069484428 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069992132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068724039 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069080763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087327256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068865751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071147856 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069377043 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068782317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080841471 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069480303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068949797 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069128397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070814978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0716236 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069307041 seconds)
  done (took 4.05294378 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115665088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124416672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074431189 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106785992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11197439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070617556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145582961 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09349555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127292037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068464041 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085783606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069474221 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102943697 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069428581 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088719203 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069133809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069848031 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069138946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070234832 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072118694 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090185253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068514682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069174893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069685592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069247953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082462007 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069732467 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069044575 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069093827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070468524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072094209 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071038626 seconds)
  done (took 4.307409456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07010437 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073144476 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080257858 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081354033 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0669586 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070134141 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071330143 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067395575 seconds)
  done (took 2.213094376 seconds)
done (took 28.353679686 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078002894 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068039074 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.07133593 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088046239 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07483377 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078868538 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065523741 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07477078 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074727688 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074789819 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077086402 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070822978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073990946 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06895163 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0763608 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070040919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08567819 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074414926 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083898991 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083922525 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071805172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075539093 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077812352 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083753473 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08354823 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083460129 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077420833 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074354707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069655694 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071296379 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.072046492 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079410932 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.080421888 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080378799 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067655208 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069580201 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073843508 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070792482 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084304812 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078466742 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071496103 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079230912 seconds)
  done (took 4.796424552 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083920788 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088606578 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08218695 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079184302 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090508439 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081989417 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086794192 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077191524 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077739373 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08584854 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074088344 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081068148 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078504121 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072475265 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07730473 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075016169 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080346346 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074448944 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078266138 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078433207 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087286336 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072202048 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087174261 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078985283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076694656 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080438669 seconds)
  done (took 3.731242783 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073118238 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084982168 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09217379 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141548978 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110100856 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079613704 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081439929 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091507391 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096567155 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068319524 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072843462 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092316457 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092439379 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074276874 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068354132 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084388425 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084600202 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07016245 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075135631 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097486087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088665406 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085581082 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09444209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085006161 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068005523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071012612 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073959816 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.089063824 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07277059 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079763394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071383786 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072774899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070048563 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079916514 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072248242 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069993474 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096871533 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082998315 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084240301 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072300601 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081099942 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071637977 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096633466 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132134028 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070665929 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074919024 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074511953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082060777 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069910874 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09808192 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082753738 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070014896 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071118749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068017719 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067499075 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070100324 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069242608 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070063074 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077422477 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07393639 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08906961 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073207883 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085399811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067136201 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078177258 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067153187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069126756 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066818232 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095840398 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069411644 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111643621 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068962428 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067087559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078521235 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077827322 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073620715 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068045435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085880329 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082045668 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074268045 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079180649 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07359531 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073911184 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100589709 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070901853 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070078615 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069155847 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074706797 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074262409 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071023233 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082884116 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069345209 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074091843 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08895377 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070386363 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070927766 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074204615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073324046 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069497826 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081485689 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074376271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071301894 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079655894 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068578192 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07272728 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080900347 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075111869 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067222001 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070185012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071348882 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070703154 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069670534 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071243031 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069578448 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074496546 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074352636 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073328962 seconds)
  done (took 10.824458851 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16188857 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.15441188 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072477236 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147752165 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079621279 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083319668 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.154960786 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098578369 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070816562 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072401843 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071799063 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11301263 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108873887 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121443784 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083994609 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072030428 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093645845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118120547 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156847735 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151003479 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093983948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079378412 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07373909 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072778413 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072612327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080811656 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090660884 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080380979 seconds)
  done (took 4.505823923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076863223 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101826753 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074231902 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093320254 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090297887 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071543873 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073009368 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072677028 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087183764 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.080409017 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071338038 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076794013 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074727506 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073099232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070944974 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076412647 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075931359 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069051748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075234488 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077056687 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080581933 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093258983 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075203152 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070850935 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074088696 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070857589 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.078916292 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085855019 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071062695 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.106337739 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068533071 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075676506 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082734911 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069140526 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068182795 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068551031 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068792595 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069794304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071113342 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067811139 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067334327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072244989 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067916541 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076637616 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081554812 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070761063 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070518354 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071648927 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071432479 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066485845 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071574354 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071598945 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071370092 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075831189 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073035405 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071884022 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069635834 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09512262 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074934717 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070605595 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069861426 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069753315 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072986866 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080571809 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086068092 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072818973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068941691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068875836 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081211151 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081454771 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067984089 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073569732 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066386554 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070220229 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071676544 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071372483 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070618581 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06961036 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070694806 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070756507 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.071480936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070377294 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073346464 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074074841 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069172224 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069868789 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071289419 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072787152 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079370979 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070689248 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075043294 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071832022 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06970356 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074050444 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.076634603 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074571955 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082339244 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081795661 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071233516 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069732021 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084651709 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073562035 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07019066 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077566055 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075756514 seconds)
  done (took 9.514439221 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090978542 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069389707 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087361789 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093945307 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080909006 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077110222 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080951553 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070701493 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086869599 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075571972 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078618648 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069555267 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081670276 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080705446 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071164582 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081363209 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075024799 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088774176 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.085501187 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069857359 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0798013 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083184648 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08283697 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085270706 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084336108 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085867174 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.082852333 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08126884 seconds)
  done (took 3.943384208 seconds)
done (took 38.94321575 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.731777634 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.969029335 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.709922665 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.945193267 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.925998151 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.7204337 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.803671281 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.703256058 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.058554745 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.746119413 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.948639577 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.954139436 seconds)
done (took 64.996192568 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.789009972 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.857642524 seconds)
    (2/2) benchmarking "String"...
    done (took 1.958002057 seconds)
  done (took 5.459998263 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.966734451 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.376760758 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.942454528 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.706001038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.713555492 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.960715511 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.486277304 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.156009157 seconds)
  done (took 29.985042504 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.931345068 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.933322983 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.428968894 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.462391842 seconds)
  done (took 15.445070949 seconds)
done (took 62.381099844 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.728694536 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.737756317 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.714057975 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.702427533 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.790836419 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.709017015 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.78596478 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.938556402 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.70282774 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.703582424 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.703479574 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.176209105 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.701402883 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.92074631 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.701396874 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.706592099 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.720705005 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.155315212 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.853387681 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.714652167 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.712273015 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.742499325 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.704728124 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.711556301 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.712584907 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.701757732 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.081124185 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.701943764 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.544130718 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.706888437 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.755684696 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.080270082 seconds)
  done (took 202.666382658 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.710027163 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.516410765 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.594592978 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.757940456 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.973429838 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.89069567 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.813827241 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.070597255 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.716219801 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.73939958 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.866403535 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.71222079 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.905898268 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.647825318 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.726261485 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.811023416 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.848397126 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.894128065 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.729971787 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.874870221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.717986775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.684671248 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.634607763 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.83751647 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.712090142 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.805877997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.717985215 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.722177023 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.900283939 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.809417305 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.739655431 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.720983396 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.901325647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.574287311 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.712336077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.738947481 seconds)
  done (took 166.375187182 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.896422451 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.714583593 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.710286032 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.712104155 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.717918095 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.712498523 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.833240706 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836436368 seconds)
    (8/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.714612128 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.358412271 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.063290193 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759341997 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.711852434 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476966506 seconds)
    (14/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.711486291 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.712849226 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.779140838 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.722307446 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.712486872 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.727386221 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.739470283 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.716104773 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707762446 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843059806 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.725727494 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.712459798 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.716408474 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.712674519 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.718281285 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.094561359 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.713533176 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.796564125 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.711580094 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.718821653 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.953159438 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.71430972 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.70778784 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.543707062 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.710673691 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.801160015 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715361822 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.719463083 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.712969289 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.930494323 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.713986187 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.707852902 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.715085403 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.717304387 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.829661256 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.712589218 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.839876563 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715725352 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191313734 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.714465788 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.709464685 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.412196308 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.289319947 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.714044847 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.716327728 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.714051178 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.708538451 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.719711448 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.373359899 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.787688071 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.716014281 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.717957499 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719976688 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.715278912 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.862604172 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.714233835 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.324667104 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.77800949 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.835221815 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.842351038 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.709124973 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.778815259 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.806645652 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.716064326 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.715459967 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.715064008 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.714756544 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.794646327 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.714688485 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.852483091 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719035736 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.715063666 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.761625943 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.783287631 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.717425693 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53681366 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.71451533 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.714657154 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954582772 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.779123067 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.715306012 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709991838 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.853480626 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.71613393 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.836988277 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.425733809 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.718178426 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.50333479 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.851190249 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.715961408 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.715942833 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.83571756 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.719733252 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.795176191 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.717633788 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.716929716 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.744535441 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.717276623 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.773805864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.71743506 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.089792076 seconds)
  done (took 395.220475379 seconds)
done (took 767.861222209 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.33882566 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.296011613 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.386891717 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.313346683 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.283142501 seconds)
  done (took 13.268073602 seconds)
done (took 14.918442166 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.796169731 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.796817592 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.734702402 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.801333408 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.730884599 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.796175606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.779596244 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.737214053 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.765617162 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.740499353 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.767978324 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.738059128 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.7242485 seconds)
  done (took 24.559822445 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.93775282 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93313783 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.77676986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.931023475 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.751859993 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955047775 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.864090281 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.847749984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.849696577 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.721450344 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.71915807 seconds)
  done (took 21.939974961 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.932543596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.949008302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.784598209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.960840575 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.757208276 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.937526456 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.866691381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.854165395 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.853111093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.723061827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719456621 seconds)
  done (took 21.992655967 seconds)
done (took 70.143627651 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.716728534 seconds)
  done (took 3.368943503 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.736809117 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.890280419 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.716466506 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.712959208 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.71354641 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.713716261 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.712537287 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.713055493 seconds)
  done (took 15.562695409 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.712749155 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.712687384 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.712738993 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.713912693 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.713528896 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.713193744 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.713099323 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.713553657 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.713709378 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.713474284 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.713252826 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.712726993 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.713563266 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.713178393 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.714438693 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.712240633 seconds)
  done (took 29.063380351 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.716085351 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.713449229 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.713752686 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.714180956 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.714285245 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.714138584 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.716073896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.714848383 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.714515621 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.714276118 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.714760086 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.714854098 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.714122893 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.714178399 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.714082467 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.715365315 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.715198402 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.715109357 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.719336973 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.714937926 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.715091433 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.715390601 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71472865 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.715051896 seconds)
  done (took 42.812458179 seconds)
done (took 92.459900242 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.461348982 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.621296041 seconds)
  done (took 9.735756616 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.718970683 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.715943372 seconds)
  done (took 5.167753084 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.716800173 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716399569 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.716019366 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.715660089 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.71628134 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.716092973 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.716501387 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.715747411 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.716964773 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.716967673 seconds)
  done (took 18.817164341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.716968493 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.716743446 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.7161173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.716990296 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.716502941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.716829146 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.716518228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.716702902 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.717532515 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.716413088 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.716174185 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.71761964 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.716698597 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.715948152 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.716661693 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.716865744 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.717451073 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.718045887 seconds)
  done (took 32.556545521 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.717199681 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.717027177 seconds)
  done (took 5.087866679 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.717249411 seconds)
    (2/7) benchmarking "second"...
    done (took 1.716723499 seconds)
    (3/7) benchmarking "month"...
    done (took 1.718017191 seconds)
    (4/7) benchmarking "year"...
    done (took 1.716096322 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.717154679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.717243879 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.718006096 seconds)
  done (took 13.674804535 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.717966371 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.867456131 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.929853206 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.292747057 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.719724142 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7207837 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.652200991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.720705728 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.723271059 seconds)
  done (took 18.999874349 seconds)
done (took 105.694126867 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.580361693 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.719720751 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.945238037 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.78576334 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.783384885 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.054222317 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.728599372 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.985307465 seconds)
done (took 42.238670995 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.733203628 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.448499023 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.516951402 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.75228972 seconds)
  done (took 15.373520868 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.717756089 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.059893014 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.747781827 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.565269912 seconds)
  done (took 21.749888293 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.09141431 seconds)
    (2/2) benchmarking "read"...
    done (took 2.067141259 seconds)
  done (took 5.817482081 seconds)
done (took 51.331598408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.718056966 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.719962426 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.71940448 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.720094364 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.719181877 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.719835172 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.718599219 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.719456208 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.720692242 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.719722731 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.719157917 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.719270651 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718500361 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.718735912 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.719499501 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718745585 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.720587699 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720215497 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718797529 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.719179717 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.720357116 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.71953425 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.718920919 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.719096259 seconds)
  done (took 42.922380979 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.720492459 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.718721761 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.720178553 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.720488298 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.719758568 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.720406719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.720446375 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.719982181 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.719530039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.71994814 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720910339 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.720714131 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.721058014 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.720294588 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.720661485 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.720408676 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.719845423 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.720671376 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.721861252 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.720731457 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.721423896 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.720473059 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.719915275 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.720895737 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.723016971 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.720318758 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.721706028 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.722348464 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.720784133 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.721375472 seconds)
  done (took 53.277280502 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.724708895 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.72918444 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.72545247 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.724756737 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.723194256 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.720759909 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.720988344 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.721576721 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.721841368 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.721511823 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.722215776 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.721581004 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.721395251 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.721682478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.722127839 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.720863085 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.723073025 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.724529879 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.72234632 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.721999665 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.721933319 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.721915188 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.723020322 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.722129249 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.721908019 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.722941416 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.722968866 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.721818391 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.723409064 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.722754749 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.722245612 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.722759147 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.72300587 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.723345634 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.72247715 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.72362393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.72656978 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.730079357 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.723261256 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.723432297 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.722265679 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.72257297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.722970144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.723364596 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.722711361 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.72422309 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.723112165 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.722363431 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.722949756 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.723581554 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.724071539 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.72345049 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.723038658 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.723877557 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.724651357 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.723451584 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.724186647 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.725514559 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.723746529 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.722931458 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.724395458 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.72499432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.725398146 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.724182085 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.724462205 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.724671014 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.7240244 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.724829163 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.725514374 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.725554493 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.725458247 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.72433357 seconds)
  done (took 125.749165918 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.72468673 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725441187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.725379923 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.725373649 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.723930818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.724707757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.725715039 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725216112 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.724567464 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.724717602 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725468885 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726158398 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725186537 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.725744584 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.724901917 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.725702113 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.72460055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.725018245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.726152649 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726071707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.725406993 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.726290767 seconds)
  done (took 39.618024208 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.725975428 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.726080883 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.725213298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725956262 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.725461437 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.726260399 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.726161915 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.726259226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725858503 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726438635 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.726313545 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726005772 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.726379391 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725827805 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.726551515 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.727011525 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.726285788 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.726686293 seconds)
  done (took 32.734021427 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.727814875 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.727672164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.726472115 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.725726333 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.727560841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.726964703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726398437 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.726550197 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.725926185 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.727340848 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.727305132 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.727100737 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.726459342 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727632428 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729279045 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.728704057 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.729168051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.729732524 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.729706241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729279509 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.729903152 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.727720651 seconds)
  done (took 39.674475669 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.72658995 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727412784 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.726923584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.727554978 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.727440082 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.727552147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.727911568 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.727782099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.727221221 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.728202096 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.727677208 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.727895165 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.727680288 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.728473027 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.728546917 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728402578 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.728719462 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.729466565 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.728498334 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.728647129 seconds)
  done (took 36.22361391 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.728919362 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72848947 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.728989232 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728882641 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.729091019 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.728461622 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.729950969 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.730479459 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729435239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.729077379 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.729041769 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.728958039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.729929066 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.729441073 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.729445735 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72973496 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.7300105 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.730400198 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.729786422 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731126541 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.729865322 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.729586241 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.729997507 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.730605798 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.729650862 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.729381885 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728931278 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.72930785 seconds)
  done (took 50.093547841 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730378479 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729214311 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.730265598 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.730015901 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.730032007 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.730969648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.730132405 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.730219164 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.730807439 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.729895112 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.729965056 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.730322681 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.730016633 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.730468056 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730194588 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.73089196 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730944193 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.730541012 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731412242 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730494312 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.731117469 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.730036562 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.73106812 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.730795477 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.731496952 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.731994325 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.731021555 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.731953889 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.731384861 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.731875695 seconds)
  done (took 53.588418271 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.750167852 seconds)
    (2/2) benchmarking "in"...
    done (took 1.75238086 seconds)
  done (took 5.170454771 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.731917408 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.731311082 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.732600619 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.732731563 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.731248126 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.731133445 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.731818881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731732766 seconds)
  done (took 15.523509964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.732945588 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.732360869 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.732347206 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.732091259 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.732545625 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.740469681 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.738178378 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.732420975 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.733947918 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.739216346 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.739146033 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.746432267 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.735937283 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.732547933 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.73260127 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.73568471 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.73158282 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.732002739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.733072127 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.732925894 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.733433218 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734849752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.734712422 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.73311383 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.73425746 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.743057216 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.737906954 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.732347191 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.733321001 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.737942694 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.734737454 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.733339546 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.734353195 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.73340538 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.733557487 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.733817988 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.742523733 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.734544157 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.74055139 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733682205 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.733670439 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.733471292 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.737024359 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.73592081 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.736678092 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.734261496 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.734033063 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.733831876 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.740954179 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.737928399 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.741781723 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.735739224 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.733953097 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.739932331 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.736808772 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742426654 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.734411274 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.737976894 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.743102576 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.745441006 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.746469315 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.743082671 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737457345 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.735729145 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744228695 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.758560934 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741981058 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.735896887 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.73565465 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.734359386 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.743326701 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.747450501 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.746038093 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.7356009 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736163208 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.734903657 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.736107717 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.735745684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743884264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.73932921 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.736637444 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.735829267 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.744727026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.758160118 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.73698225 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.736895972 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.737248584 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.735732032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.744072093 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746921828 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.73655544 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.736997709 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.74433833 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.738174098 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.743520071 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.736807746 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.742199446 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.738959837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.73554016 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.737788939 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.737002964 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740069226 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.746507719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735632597 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.737206853 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.743557187 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.736984224 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738174341 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.743927534 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.736402562 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.737329956 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.744515837 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.744097985 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.737170837 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.740140511 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.752871432 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.738923819 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.739959982 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.737863587 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.738484245 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746864829 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.76324072 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.737735489 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.737552827 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.743297986 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.748748131 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.738764494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.741836622 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.739185595 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.738816413 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.737881441 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.741303952 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.737937145 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.740596987 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.738526564 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.741069004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.73850219 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.738607957 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.738679384 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.740889059 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.74656561 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.739658035 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.741738193 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.741071703 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.737996836 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.74053374 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.746941089 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.74511074 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.741752328 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.747162219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.73878563 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.739423867 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.741503297 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.740561008 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.746257502 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739182363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.739811671 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.739073031 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.739477225 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.739424564 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739394094 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.747017722 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.743860722 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.739669543 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.743917218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.740266476 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.739238285 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.739893473 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.740259486 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.747498498 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.739794662 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.747260785 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.74343712 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.747176524 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.741189556 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.740291362 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.74392802 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.740381414 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740501492 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.740238452 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.742506241 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.749425237 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.740722874 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.748893663 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.740539126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.740924529 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.740155875 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.74143772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.741644333 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.741712224 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.744440526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.749116703 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.753256292 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.749741159 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.748969378 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.744919845 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.74929371 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.745333924 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.746086195 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.741450894 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.740994219 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742511764 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.742234416 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.742474549 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.744827469 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.743413917 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.748222056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.741953475 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.741115902 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.742168458 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.742428246 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.744263256 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.744456113 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.741766436 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741925475 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741954179 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.743161948 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.743142974 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.748656143 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.748770924 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.742332017 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.742414375 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.749765731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.742689517 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744432315 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744594078 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.742781142 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748307979 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.742691195 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747368244 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.743524682 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751492412 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.750679179 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.744748125 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.751382233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.751227317 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.74962163 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.747268806 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.743036896 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.742907746 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.747866587 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.751399392 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.743232237 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.745071817 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.744034696 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.744761208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.743502292 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.751060349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.743286373 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.744845374 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.742950974 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.752649937 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.74413649 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.746662805 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.745211893 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.752061469 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.746814691 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.744792121 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.743934391 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74576754 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.74418482 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.744782239 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.744514714 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.746953636 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.751796436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.749951121 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.750908855 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.753214686 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.752201761 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.748001417 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.745239453 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.745081351 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.745240023 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.756420561 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.752547902 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751160897 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.746745392 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.744906057 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.750639457 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.752505967 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.756161921 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.745871501 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.746719331 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.746215498 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.745698654 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.745868107 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747135512 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.745254959 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.748001062 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.747567957 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.748984992 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.747394866 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.74797246 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.746837161 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.747539162 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.746434828 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.747020132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.74627899 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.749810141 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.747631209 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.752395059 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.745875431 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752490188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.74764448 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.748880727 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.74677276 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.747904151 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.752789876 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.75524929 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.746239032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.749824098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.75413834 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.749275779 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.756547833 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.748877959 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.756904448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.746410184 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.749920512 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.754697181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.74744124 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.753266081 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.7535403 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.747317628 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.754825745 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.749568508 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.754909225 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.752205046 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.746986819 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.747566516 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.746748328 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.746583785 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.747224887 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.748602012 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.755658597 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.754525065 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.752673271 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.750876661 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.74751373 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.748976208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.747406963 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.754803047 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.752618952 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.748213242 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.75008449 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.749235842 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.754859279 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.747484977 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.748268564 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.748623839 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.749443906 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.746855878 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.756209296 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.756223859 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752730089 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.749021697 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.757876462 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.749260556 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.756212761 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.749941877 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.756807153 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.749776431 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.749989564 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.756622484 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755494383 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.749857654 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.749879893 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.757057722 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.753478934 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.749808899 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.757792611 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.750792568 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.749292886 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.750673525 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.758231037 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.771724024 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.751301617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754562291 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.751176665 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.752133156 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.753295559 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.750367315 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.756324772 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.753110291 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.760169914 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.757211548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.752241953 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.750092004 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.751905535 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751032035 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.751051381 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.750555431 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.750282905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.750321704 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.756956053 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.75141143 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.75441086 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.750716854 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.758726381 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.752462924 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.758839401 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.761203983 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.752503214 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.760440134 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.751400272 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.750871724 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.752746583 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.752167999 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.751847452 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.753853402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.752075422 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.752576896 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.759198075 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.765184592 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.754039492 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.751951669 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.751266701 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.75383617 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.759459942 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751257753 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.751421783 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.751522525 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.754081472 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.751918006 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.76043531 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.756114426 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.751199457 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.758865224 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.75212733 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754850042 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.760457413 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.752411346 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.751809613 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.751275524 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.752369702 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757202815 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.75374501 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.76078455 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.756249859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.763167392 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.767280526 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.756760291 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.755084162 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.755465738 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.762030313 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.75894025 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.7544322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.75282011 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.754602756 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.760895212 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.756845262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.752894992 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.760750196 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.755677663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.759807849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.761752583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.755340399 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.753163402 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.755684162 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.759396764 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.754872536 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.752711297 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.752898176 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.753698907 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.762246753 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.757671249 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.754235567 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.756922256 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.758507564 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.755501124 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758003892 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.753445601 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.75680779 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.753756489 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.756963141 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.755669395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.754470804 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.754556968 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.761334068 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.761277599 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.757874658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.768313407 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.754733237 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.757931476 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.755217695 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.762160888 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.75444076 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.755182013 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.75418455 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.755250691 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.761987466 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.756224859 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.756854032 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.758314162 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.76138567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.76275163 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.759163789 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.755914271 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76070999 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.766694513 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.762792215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.754628112 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.763090665 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.762769714 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.758514578 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.756464737 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.756024534 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75687794 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.758281665 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.755816605 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755871354 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.755542106 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.759507768 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772343932 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.756816499 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.757546791 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.758076375 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.760372565 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.755598914 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.75613254 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.756777275 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.766467576 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.75973138 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.763393869 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.756447342 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.764066512 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758907253 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764751214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.761529072 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.760815714 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.771245634 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.761081335 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.762338748 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.757882644 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.761963692 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.772751642 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.757676906 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.766189064 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786880469 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.765044014 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.764563521 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.756925467 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757562956 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.759045916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.765902568 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.757795038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.757071436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.757143302 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.758238955 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.766927494 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764818858 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.7603284 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.757385928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.757841121 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.7645808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.766146302 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.757230766 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.758290272 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.75757896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.757915545 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.758895062 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.759521034 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.759217894 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.770504821 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.775380577 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.758769526 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.759866282 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.758825358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.763319245 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.762188072 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.768189602 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.76662215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.760267909 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.760018484 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.761063924 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.758306813 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.759295099 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.76102332 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.760538542 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75981395 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.75959542 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.771644732 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.767596405 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.764709043 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.767190895 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.759414278 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.760163548 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.761467512 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.760409904 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.760735924 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.761259369 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.766862875 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.763962365 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.758719089 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.759412183 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.763794504 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.766788306 seconds)
  done (took 1044.275835285 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.761207078 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759974779 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.760375803 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.76065591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.75997092 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.761220399 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759517447 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.760318465 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.758838476 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760151285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.760197575 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.760584057 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.759970974 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.760258527 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.760732739 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760815313 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76054791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.759308061 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.760349542 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.760411438 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.761154104 seconds)
  done (took 38.662136599 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.760769811 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.76064901 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.761390343 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.760843854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761097123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.760187974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760608173 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760816423 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.761691767 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762226678 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761756464 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76191674 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.763224476 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.761277463 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761610604 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761856786 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.761532829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762171905 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.761978032 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762799807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762182095 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763098989 seconds)
  done (took 40.453629551 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.761898877 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.762576427 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.76343803 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.763359884 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.762312867 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.762613448 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.762885855 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.762115866 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.763538905 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.770927129 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.767839148 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.769741332 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.768714127 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.770316516 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.771955898 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.762978052 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.908507253 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.763119407 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.763658358 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.762745022 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.762980736 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.769408863 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.76288192 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.763601387 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.769571516 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.76374781 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.763570032 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.763080579 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.76436744 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.771090133 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.767362043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.764498513 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.764642539 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.766385845 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.770592082 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.770821414 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.767713573 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.764457677 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.764239964 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.763123047 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.772177554 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.78600794 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.76545228 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.771254732 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.764936639 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.763933092 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.76720635 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.773220216 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.764703473 seconds)
  done (took 88.391758887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.764129061 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.766087999 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.764400082 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.76520691 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.765654113 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.765023883 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.764441467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.764343601 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.765097146 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.765276971 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.765207284 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.764356267 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.764620192 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.76487011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.76563078 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.765044467 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.765284543 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.765745569 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.765086348 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.765876764 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.765466033 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.765698085 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.766103498 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.76636832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.764824168 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.766246654 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.765752986 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.766562357 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.765403548 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.765198879 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.766427364 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.766150659 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.765594569 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.765907658 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.765647792 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.766344631 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.76714697 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.765742741 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.76635804 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.765713643 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.766143314 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.766498364 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.765965794 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.767409261 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.766386228 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.767542282 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.766019655 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.766605636 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.76730828 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.76645063 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.766809259 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.767293623 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.766934693 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.766250386 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.767030606 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.766692509 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.766817591 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.766840368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.766724642 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.768278886 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.768361817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.766466817 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.768735165 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.767285707 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.766903359 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.768476896 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.768307689 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.767780086 seconds)
  done (took 121.8006091 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769208661 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.768822782 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768471946 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.767658555 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.76812914 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.767737111 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767711163 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.768278872 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.768338044 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768178533 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768828207 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768085517 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.7679397 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.768497904 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.768229525 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.76816797 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.768919161 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768096517 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.768250355 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.768385259 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.768763464 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.768969705 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769268677 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.769025721 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.769145004 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.769147844 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.770080129 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.768471993 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.76889064 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.769729798 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.770433917 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.769791928 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.768600836 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.770288701 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.769833117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.769966194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.769229634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769670366 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.769378014 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.769279816 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.768878882 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77031791 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.770010255 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.770609431 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770303318 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.769940604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.771228557 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.770250206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.770378379 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.77049239 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.770164585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.770373063 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770280996 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.771276938 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.770310656 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.770580492 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770780609 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771004963 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771082174 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.770798171 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770258487 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.771050675 seconds)
  done (took 111.409394414 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769778596 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770557597 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.770086759 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.769107642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770467134 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.770494377 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.769626578 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.769567286 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770778505 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.770686235 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770333825 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770500109 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771999035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771150835 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.771294078 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771771446 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770943445 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770044795 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771152749 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.771187913 seconds)
  done (took 37.117435041 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.77072516 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.771413191 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.770751496 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.771875096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.771540159 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.771185241 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.772440306 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770840273 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771608641 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77228467 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774541518 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.772899866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772185128 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.772673565 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.771875472 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.772284263 seconds)
  done (took 30.058122596 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.772047745 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.772046126 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.772437229 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.772496616 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.77144737 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.7739356 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.772367289 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.772924019 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.771830781 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.773067842 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.771298579 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.773282735 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.772070101 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.772969952 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.773120956 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.772716769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.772638181 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.772713977 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.773275023 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.772994989 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.773269665 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.772784951 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.772928322 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.773693924 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.773312442 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.773611805 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.773195818 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.772617821 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.773219022 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.77333855 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.773725129 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.774016424 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.773949599 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.774547957 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.773877362 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.772716524 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.772809348 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.77312017 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.774073224 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.77376085 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.774257877 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.773883567 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.773512472 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.774326601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.774469288 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.773600782 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.774177681 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.774044544 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.774680693 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.774804444 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.774615382 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.77497137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.774018538 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.775511929 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.774353991 seconds)
  done (took 99.245127402 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.774894975 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.774349939 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.775182278 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.775266085 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.774969255 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.775620641 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.774126189 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.775632712 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775769172 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.774498161 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.776409619 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.776172539 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775611464 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.775669368 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.775264809 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.776300304 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.775406009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.775190855 seconds)
  done (took 33.667747556 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.776088732 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776766504 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.775930479 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.775260117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.775423442 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776113054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775164609 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.778478931 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775587801 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.776416858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77535752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.775529474 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775793574 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.77642916 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776105212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776176927 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.777142989 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774923945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.776090621 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776547227 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.77675586 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775989428 seconds)
  done (took 40.785187341 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.782777897 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.78284616 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.797849213 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.803446027 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.802835764 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.815978499 seconds)
  done (took 12.497126115 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776207319 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776134553 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776122324 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777331659 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77772396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.776975723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777069118 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.77671706 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777872396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777148378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778118434 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777778816 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.776800906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777945725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777942288 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.777271523 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77835569 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.776824424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777305014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777460864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777018601 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.777363845 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77807437 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.777548299 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.778494806 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.777952434 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77818276 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.778467947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.777877508 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778665422 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777733493 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.778180666 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.777810269 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.777856697 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779190114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.778605385 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778221719 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.778546163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.777554379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778806336 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.779320934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7797695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779481812 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.778610072 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778687608 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779398146 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77883916 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.779219688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779310142 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779746953 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.778771527 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779077462 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.77954388 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780333532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779531348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779543502 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.778906144 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780588281 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.77892264 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779802705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.779260252 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.779719888 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779996456 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.779836563 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.780314331 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.779164905 seconds)
  done (took 119.086248053 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780476078 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781744183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.779732509 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781140164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780403291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780072119 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781147236 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.780011492 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781129797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780322929 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.780863095 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780897568 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.781360636 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780176736 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.780855769 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.779983533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.779882749 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.780922985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.78043378 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780381804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780873587 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780051557 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781084066 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781666403 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781902629 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781307896 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.781955324 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781213904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.78261916 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781958592 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781646523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781896538 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782352093 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.781037542 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.781703153 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781100692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.780922883 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.781007097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781765882 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.780561263 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783164758 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.781090206 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.782195695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781533613 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.78236237 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782492437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782600603 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.781536384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.782303543 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.781394669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.782550976 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.783217286 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.782979046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782554226 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782891788 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.782243483 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783325606 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.783619726 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783297833 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783450406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.782589058 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.782815224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.783682876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.783482354 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.78293955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.783730248 seconds)
  done (took 119.308276692 seconds)
done (took 2432.994580652 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.797708412 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.812827463 seconds)
  done (took 15.328765723 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.950812463 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.897250742 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.784980405 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.838101972 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.78454724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.809283861 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.80740254 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.785023392 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.785900417 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.784667294 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.7847982 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.96988975 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.787370798 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.785289622 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.785330245 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.877018177 seconds)
  done (took 50.939970126 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.78744389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.787935117 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.798827926 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.790471351 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.78736053 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.79887972 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818656432 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.79159615 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.821057416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.798804187 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.856700703 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.799786618 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.788569263 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.836521784 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.800150966 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.803090873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.879192614 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.864141747 seconds)
  done (took 34.328749662 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.864315349 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.81915565 seconds)
  done (took 10.410298325 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.809344578 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.847079422 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.884001155 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.79385581 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.818425591 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.808962889 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.816688213 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.814353952 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.824385389 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.825974397 seconds)
  done (took 69.964785227 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.79024228 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.787482018 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.785606935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.783803285 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.78169757 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.787844854 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.7837236 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.783271917 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.43944776 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.819695768 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.792668085 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.789778603 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.783996986 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.786457296 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.782997911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.805847805 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.912729747 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.782954019 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.783117158 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.791052464 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.785246074 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.836437176 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.798524891 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.78638249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.815133031 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.440363989 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.792135841 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.792020187 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.918952868 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.783630089 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.785947479 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.970191916 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.78732215 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24596091 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.058582447 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.791399123 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.799206471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.792373435 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.78302931 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.90816468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.787269561 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.790856387 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.693002145 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.038328614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.877334832 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.828613256 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.101260118 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.802601767 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.787096785 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.814924385 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.791346601 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.788527488 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.799312938 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.301250325 seconds)
  done (took 128.146317197 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.794040159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.138110629 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957232297 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.794741041 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075153788 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003313286 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.796545593 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836797146 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796404461 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.019924784 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.045898521 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.897779229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.797866157 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.790471726 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.794474318 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.789615901 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946922417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862136703 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.797041083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.791799835 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.818843023 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.033473455 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.916411936 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796512777 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.818926912 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001170196 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.916457617 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89435175 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.58865632 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.791915984 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854823002 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.796546715 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.792819637 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.791746931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947487301 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886332255 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879967631 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.79672189 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79090472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794992517 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.450875722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.990995266 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.890451271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.923806968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.046518441 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000287079 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572821491 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.791400421 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.524695213 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.95523994 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020903609 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.024623164 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.911361591 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.797571676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.138560416 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.792531903 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794489684 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042313579 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.015519893 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.895488766 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79600311 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.793660955 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.793993621 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032514801 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.798799422 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.888564625 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.798090101 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79545462 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891675178 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.891818397 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.027487408 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.008225371 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.82409268 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.13803755 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.294941143 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.040331458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.859711375 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.044837116 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.79804167 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794521847 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.87147266 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.639076114 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.045906002 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.040768295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039472989 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829228281 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.511307772 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.793930854 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.021554374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.015341422 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.052262802 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046546665 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.03034165 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.105776185 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.795226746 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.795266328 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.113197212 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.920261141 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.800398512 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.138870008 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023414154 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.321357456 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820682996 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095762415 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.925127952 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.800263695 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.420864115 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79576375 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.023067294 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.835816727 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.798568983 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797471125 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.014290957 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.78523361 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.796855798 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.455584777 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.85757053 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800529323 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.029716846 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.799465633 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064106228 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.801998407 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030095244 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.251458005 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826510112 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.969813941 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.046325765 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.800265574 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.036905655 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039383764 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.912221894 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019052093 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.507865584 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.797675006 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082399009 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799385659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.798753059 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.96489913 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.799149446 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.940063259 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.801798732 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.091162992 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.81942827 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028413158 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.801742028 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.050933954 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.829015529 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849181875 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.8025524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.92283098 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80095881 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.726248096 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.953808158 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802672547 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.801494101 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.365199741 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.799320022 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.946451073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.026572734 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821124382 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.869955196 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459912907 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.799285954 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879152194 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.822443451 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.191100891 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.801474821 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.047647233 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.802484174 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.800686328 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.798262372 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.033672513 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.984614301 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.80131154 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.799930766 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.703937476 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.799834586 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800122778 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.979189294 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.1337035 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.800744035 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004871484 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.803466109 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928461907 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 7.244027256 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.878765009 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132225863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801348622 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.802712896 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.801055572 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.802484342 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.801014117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007717079 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.825332929 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.293325363 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937773312 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073045904 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.112719079 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.042919683 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.845772304 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.805466824 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054979088 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805740538 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.863002999 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.804870518 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821140455 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030218737 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805904868 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.06541318 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.071344943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.651089159 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849578567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.805575544 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.802894672 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.800359123 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.945981592 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887393733 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.805828157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.802002485 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.917088781 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925459133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012712581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.80576956 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.891016082 seconds)
  done (took 886.871470305 seconds)
done (took 1197.709945957 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.803817052 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808638175 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.800613893 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807693703 seconds)
  done (took 28.952885826 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.798634374 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.803879566 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.799210994 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.804953061 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.797682988 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.803988359 seconds)
  done (took 12.53890584 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.80043961 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807094985 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.80679166 seconds)
  done (took 21.145870721 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868347925 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.179884608 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.935957046 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.235835283 seconds)
  done (took 9.951983435 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.800415881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.800665721 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.800473588 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.799419111 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.799363076 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.801181348 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.799541526 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.799900725 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.7993147 seconds)
  done (took 17.937565086 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.890751481 seconds)
done (took 96.150556775 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.002023461 seconds)
    (2/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.809938757 seconds)
    (3/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.120443886 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.880694156 seconds)
    (5/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.125597759 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.126914873 seconds)
    (7/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.869869732 seconds)
    (8/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.977385306 seconds)
    (9/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88421176 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.463633368 seconds)
    (11/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.901396308 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.806528339 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.934823708 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119477955 seconds)
    (15/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.252318912 seconds)
    (16/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.828014111 seconds)
    (17/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.799200451 seconds)
    (18/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.378439869 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.801924731 seconds)
    (20/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.121742922 seconds)
    (21/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.304704708 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.419629207 seconds)
    (23/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.818007809 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.009935834 seconds)
    (25/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.057948581 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 5.532399311 seconds)
    (27/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.687989556 seconds)
    (28/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.808923343 seconds)
    (29/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.975579258 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.8094739 seconds)
    (31/309) benchmarking ("sort", Float32, false)...
    done (took 5.98765404 seconds)
    (32/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.811483157 seconds)
    (33/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.29825359 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.185646562 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.830893832 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.956580583 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.479554193 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.933405993 seconds)
    (39/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.823664087 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.969987552 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.932670119 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.894709749 seconds)
    (43/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.884773765 seconds)
    (44/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.823551268 seconds)
    (45/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.878829074 seconds)
    (46/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.807240778 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 3.50852889 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.378188273 seconds)
    (49/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.956640027 seconds)
    (50/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.818854891 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.954862517 seconds)
    (52/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.878952319 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.927080824 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.972272368 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.905340907 seconds)
    (56/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.8039111 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.422461941 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.947686187 seconds)
    (59/309) benchmarking ("sort", Bool, false)...
    done (took 2.026161176 seconds)
    (60/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.819055139 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.673460601 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.480979201 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.953467563 seconds)
    (64/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.829765905 seconds)
    (65/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.20325696 seconds)
    (66/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.880194618 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.82563462 seconds)
    (68/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.87000121 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.802253741 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.515385244 seconds)
    (71/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253798006 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.056709396 seconds)
    (73/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.961408643 seconds)
    (74/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.823684662 seconds)
    (75/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.800998779 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.227332516 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.897296328 seconds)
    (78/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.017262848 seconds)
    (79/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.887109169 seconds)
    (80/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.061717249 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.061150861 seconds)
    (82/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.026178554 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.205728459 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.812874279 seconds)
    (85/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.964808357 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.944088086 seconds)
    (87/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.935168971 seconds)
    (88/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.818608171 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.8000876 seconds)
    (90/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.832836167 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.863713475 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.994093178 seconds)
    (93/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.814066012 seconds)
    (94/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.884973937 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.82604387 seconds)
    (96/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.594601248 seconds)
    (97/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.18886423 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.85858253 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.934308287 seconds)
    (100/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877203476 seconds)
    (101/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.80348123 seconds)
    (102/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.60209477 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.809881338 seconds)
    (104/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.910562617 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.953642002 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.594902305 seconds)
    (107/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.846597359 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.899874947 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.898238048 seconds)
    (110/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.829123658 seconds)
    (111/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.812678563 seconds)
    (112/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 5.171568951 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.488717592 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.824849838 seconds)
    (115/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.817987982 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.0632709 seconds)
    (117/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.891994847 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.059379415 seconds)
    (119/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.819920817 seconds)
    (120/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.002401351 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.170374519 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.846747413 seconds)
    (123/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.100720572 seconds)
    (124/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.908724698 seconds)
    (125/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.833539988 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.129208106 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.899559337 seconds)
    (128/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.129187634 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.722631652 seconds)
    (130/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.824467196 seconds)
    (131/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.88415665 seconds)
    (132/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.137991023 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.162951943 seconds)
    (134/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.307282942 seconds)
    (135/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.965462632 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.835574892 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.917072261 seconds)
    (138/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.820937743 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.055647207 seconds)
    (140/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.117067409 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.059894115 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.916235359 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871862183 seconds)
    (144/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.183944809 seconds)
    (145/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.112824569 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.063698177 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.44893185 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 4.732212676 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.13152967 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.842048912 seconds)
    (151/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.912819408 seconds)
    (152/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.18781347 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.142155636 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154998717 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.083041051 seconds)
    (156/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.15725097 seconds)
    (157/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.900974822 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.055049842 seconds)
    (159/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.828749766 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.967811466 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.14481469 seconds)
    (162/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.170029973 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.11152412 seconds)
    (164/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.820890814 seconds)
    (165/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.901632323 seconds)
    (166/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.423963254 seconds)
    (167/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182218538 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.218517376 seconds)
    (169/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.938468382 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.212953153 seconds)
    (171/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.677408044 seconds)
    (172/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.821488879 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.812744942 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.839279872 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.896973657 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.944193021 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.736588637 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.77854269 seconds)
    (179/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.011656064 seconds)
    (180/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.824629381 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.914753792 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.98782366 seconds)
    (183/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.832124294 seconds)
    (184/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.834369208 seconds)
    (185/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.979023999 seconds)
    (186/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.898780003 seconds)
    (187/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.894106315 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.220418872 seconds)
    (189/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.815912006 seconds)
    (190/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.012922236 seconds)
    (191/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.753805557 seconds)
    (192/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.706005134 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.819210131 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.923412972 seconds)
    (195/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.830845495 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.152225693 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.817977713 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.105686095 seconds)
    (199/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.559759921 seconds)
    (200/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.208872285 seconds)
    (201/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.829188855 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.817446056 seconds)
    (203/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.830537709 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.263324077 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.91557288 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.055880015 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.92844114 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.135155304 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.823881389 seconds)
    (210/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.117241433 seconds)
    (211/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.160206701 seconds)
    (212/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.198960092 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.136563673 seconds)
    (214/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.882309464 seconds)
    (215/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.97627301 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826258822 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.955082949 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.001367864 seconds)
    (219/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.056774986 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.063500415 seconds)
    (221/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.168508854 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.123809899 seconds)
    (223/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.829411045 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.694925781 seconds)
    (225/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.012215299 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.140453343 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.022943635 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.569475243 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.835466909 seconds)
    (230/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.819544308 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.452648218 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.830216661 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.57240825 seconds)
    (234/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.997628682 seconds)
    (235/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315120509 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.231770303 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.722495866 seconds)
    (238/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.215686735 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844104057 seconds)
    (240/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.203311932 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.955380813 seconds)
    (242/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.959541983 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.955876353 seconds)
    (244/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.944296909 seconds)
    (245/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.812028125 seconds)
    (246/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.593018545 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.95506788 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.837580332 seconds)
    (249/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.813761045 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.247324133 seconds)
    (251/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.996918265 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.997177898 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.896815695 seconds)
    (254/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.719460147 seconds)
    (255/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.288217894 seconds)
    (256/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.086143069 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.047478383 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.829432186 seconds)
    (259/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.129087462 seconds)
    (260/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.85043963 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.882604303 seconds)
    (262/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.904911358 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.814683206 seconds)
    (264/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.248144799 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.821891107 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.82560223 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.078884614 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 6.825679864 seconds)
    (269/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.963391862 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.944017548 seconds)
    (271/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.829941778 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.09948101 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.829562989 seconds)
    (274/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17681103 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.152056238 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.947266876 seconds)
    (277/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.817296881 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.816349674 seconds)
    (279/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.92126773 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.832475003 seconds)
    (281/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.930283542 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.831032897 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.197420773 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.828901168 seconds)
    (285/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.903887382 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.737839754 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.912450276 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.850184904 seconds)
    (289/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.066097788 seconds)
    (290/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.830098267 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.824998176 seconds)
    (292/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.925967085 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.576464475 seconds)
    (294/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.816851459 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.343445117 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.923275591 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.627599054 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.924655056 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.845843596 seconds)
    (300/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.508859238 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.503877907 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.820415738 seconds)
    (303/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.081327973 seconds)
    (304/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.822310082 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.827028908 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.231806959 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.045946435 seconds)
    (308/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.933422933 seconds)
    (309/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.842829689 seconds)
  done (took 986.568261019 seconds)
done (took 988.366361919 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.843714774 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838980187 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.821311723 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.841766389 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.933639395 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.867679471 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.835197989 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.825594932 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.870583208 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872132941 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.820221764 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.865252841 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.823203813 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.821805092 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.822537889 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835817431 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.136420134 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.855844633 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840843393 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832121312 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.839914867 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.82092909 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.870307657 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.866048449 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.825596919 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.826800571 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826598864 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.841130988 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.934178207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.824102419 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.826116084 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.834413326 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.136023212 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.853869774 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.820251871 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.840809752 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.835435594 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833796245 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826022784 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.856070914 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.221347429 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.86412594 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822299194 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.823244698 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.823125176 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.829030642 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.824613252 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.829314275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.836699507 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.840468023 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.217984868 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.880305299 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.825829448 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.823767067 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.834983111 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.823670817 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.82874046 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838373656 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.843544726 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.838355646 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.121362255 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.863074945 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827223371 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.842547134 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.833748625 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.249511495 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.863696297 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.831071051 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.220062048 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.871321307 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.250227787 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.8786295 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825010453 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.838167979 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.855904962 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.13523479 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.852986132 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.820977947 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.831220665 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.821042315 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836274217 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838435141 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.829185809 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.82366566 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841797854 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.869949555 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.837499802 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.825078906 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.836787758 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.844644095 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.833466681 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.837015147 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.82837909 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.82189342 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.83694615 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.829260398 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.827574956 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.828032628 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.829360927 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.837921883 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.222592688 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.88451771 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.823248312 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.822343959 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.822605185 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.839823564 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.222289543 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.867880097 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849554971 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.875651587 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.828623385 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.125635522 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.860712133 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841204804 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837974295 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.830059113 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.823839689 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123614984 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.25164711 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.884398079 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.828018424 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.825560962 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844434537 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.82974557 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.823830318 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.140128134 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862295796 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.84286798 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.950326773 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.840521126 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860023885 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.824696658 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831239081 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876992442 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844138026 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.859874101 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.830151965 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.842736372 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.844246199 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.823627719 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.839454895 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.839516586 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.827690596 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.83663199 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824518372 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.877758834 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841411884 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842048971 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.849136538 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.951451312 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.82621211 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124753881 seconds)
done (took 287.244121533 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.91335635 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.83513009 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.925693473 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.825278197 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.922402582 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.906769086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.825283217 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.826381311 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.824565132 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.319017902 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.827893755 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.832562284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.832692285 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.825475047 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.904594927 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.827674306 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825709287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.267577632 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828233585 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912233373 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.833720637 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.827794699 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827891693 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.319483147 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.832095791 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.833461835 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.915910737 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.826561877 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.269703748 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.833705689 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.834466768 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.268358698 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.915829144 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.854564417 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.836129757 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.832429051 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.922492883 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.838728075 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.901120819 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.903974082 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.932866374 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.860168893 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.832592297 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.832538072 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.831485033 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.828750438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.827370429 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.859196714 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.83243198 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.833038013 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.267446178 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830829441 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.832681332 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.827433715 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.824807569 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.856699938 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.826056185 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.827241816 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.912221019 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.828655777 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.900384531 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.318889673 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.31963786 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.826759206 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.83419838 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.82381961 seconds)
  done (took 182.525511526 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.89760552 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.909684884 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.898301242 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.842536917 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.881103038 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.902561361 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.842748977 seconds)
  done (took 14.931742209 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.839697939 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.825805147 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881115808 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880682008 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.824955537 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.987769842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823623622 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.841742425 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829973675 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.859425262 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.822804629 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82485291 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830223146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.829807149 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.879676341 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.843985884 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.945061773 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832683136 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.820924238 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.977750649 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829450814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.830329685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.856750162 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.841819846 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.821797499 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.836712028 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404394002 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.822531132 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823917637 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823324964 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821718272 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.87049423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.823669834 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.829674236 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.823362022 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.946523662 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.822539893 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821161829 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.821815407 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.831302371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.821908599 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.822856811 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.822032276 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.823479237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.82282112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.852315909 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.823254709 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.822989427 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822782254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.825084689 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.854876518 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.820228297 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.822997846 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.827222656 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.871250672 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829690817 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.823986581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.823575936 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.823292795 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822476447 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.977747217 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.879259268 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.8223367 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.877330615 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823508129 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.82200214 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.820473559 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.819845456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.916541809 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.820627146 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877182697 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.818981518 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.987166429 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.851296232 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822895171 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.830499109 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.832710696 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.821823475 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.826751464 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.837592271 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819583404 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.829413821 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.833915674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.823807915 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821267969 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.940670947 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968316156 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.818631647 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833474002 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.834377958 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.820812196 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.872208233 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.819915804 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.823200013 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892488308 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.944861732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.854413221 seconds)
  done (took 201.485505458 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.835205081 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.83221397 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.829247974 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.842433269 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.827243036 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.827837777 seconds)
  done (took 12.745118006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.830335534 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.821767507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.81977546 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.818036446 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.820445948 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.821679414 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.820694575 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830777731 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.824656033 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.819193917 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.819818657 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.820308831 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.818115459 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.819843682 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81776243 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.816758013 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.821374638 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820728473 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.821354379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821793111 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.080674568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.822151572 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821019741 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.823398643 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.824417251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.819104572 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.844237292 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.817501968 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.819241375 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.83455102 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.824858328 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.819394854 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.82427152 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.833461307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.82429124 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.82318109 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823331581 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.819081735 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818998469 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.817814068 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.818503617 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.818878935 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.817922404 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.818598859 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.82775244 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.826674683 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.823830842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.836095791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.818757357 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.821283891 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.820743915 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.821935141 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.822087001 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.821823354 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826155119 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834427298 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.825964954 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.82221223 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.823520116 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.826461199 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.820813029 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.816622256 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.828906136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.822102127 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.826920386 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.817151463 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.818932238 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.81915361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816236206 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.815120273 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.816917104 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.81475598 seconds)
  done (took 134.217885874 seconds)
done (took 547.686313688 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.943207806 seconds)
  done (took 8.690300308 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.984885471 seconds)
  done (took 8.798273855 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403964746 seconds)
  done (took 10.168604572 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.851457642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.873370399 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.843469815 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.843065244 seconds)
  done (took 29.200768474 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.073047488 seconds)
  done (took 8.83428742 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.854646278 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.832509027 seconds)
  done (took 15.51529419 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.945984463 seconds)
  done (took 8.710746613 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.912559303 seconds)
  done (took 8.686750264 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.846960817 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.84572189 seconds)
  done (took 15.47919214 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.831513604 seconds)
  done (took 8.593000398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.032251195 seconds)
  done (took 9.88011968 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.849288128 seconds)
  done (took 8.673857243 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.905532955 seconds)
  done (took 8.662360473 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.908447479 seconds)
  done (took 8.663722082 seconds)
done (took 160.305027215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.831814357 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.833641026 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.831849699 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.830335546 seconds)
  done (took 29.082944982 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.853107131 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.853000381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.85621003 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.863499664 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.855904679 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.85199711 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.845348082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.846137932 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.863057311 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.855399999 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.85415345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.85379794 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.851039736 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.844263133 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.853391313 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.852733617 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.860953704 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.852073488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.845020606 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.851624067 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.81760468 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.860501389 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.851956255 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.81719108 seconds)
  done (took 46.163609436 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.013664205 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.895034821 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.976457818 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.892863557 seconds)
  done (took 9.527648402 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.866138559 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.86751476 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.879007568 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.918296386 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.943044459 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.875106478 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.838948769 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.835261162 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.821709715 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.868373084 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.942765901 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.862823984 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.955319604 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.813614807 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.000516367 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813738633 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.812953611 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.863455789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.915818207 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.927748179 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.81389566 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.86097654 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.864641552 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.858889899 seconds)
  done (took 46.769715392 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812783103 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.821084076 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.817454656 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.81086074 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.811699397 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.811857757 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.817755623 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.810678415 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.830965344 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.810793734 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.80842255 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.81008725 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.816311228 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.808604629 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.808892905 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.821649361 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.823728828 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.810129808 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.812222443 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.816048202 seconds)
  done (took 38.037087402 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.812657397 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.65891047 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.158180407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.065590428 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.814699115 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817364551 seconds)
  done (took 31.068855472 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.827352715 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.820352802 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.812241064 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.872682453 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.955725638 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.822982316 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.813860342 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.823627853 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.858989488 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.879695998 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.83353476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.842878625 seconds)
  done (took 23.903018104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.813126687 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.814769202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.814324826 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.826643841 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.823557196 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.821188074 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.820501208 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.812434722 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.826786387 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.833166443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.820632077 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.824225233 seconds)
  done (took 43.596152508 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882299472 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.679512087 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244070562 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266922376 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.329208304 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.007736042 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.812305972 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.88948298 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.807270672 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075987596 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123845978 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036444473 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.082984942 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.627703531 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845022685 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.337590246 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124250891 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045276347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86312689 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.512658656 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940398976 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398346012 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.466431421 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.943391722 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.0431425 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962332684 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.104590321 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.789737149 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888846175 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843335875 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845240273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.840474919 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.111397397 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9601964 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910296792 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845986888 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259306727 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.548135485 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.864259518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.510512013 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.388499687 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.956669896 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843868823 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842317928 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767001836 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401187609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93287868 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.84320636 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.542392054 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842829387 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846143281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915700223 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.841968823 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.649164619 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532044899 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.110036593 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.842402408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851315078 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.402719815 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855741111 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.523336734 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.776654628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.931431701 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51322299 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298485923 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.99287205 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.84282048 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843552924 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768527444 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.459348293 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949056375 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978746149 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.85949967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482714502 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127169656 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.27192822 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891529172 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106112732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.6755328 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.777078552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060069139 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793509365 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769014822 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.668923696 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767951519 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06256263 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86971174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.420742293 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879202238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925303101 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.848882892 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857821703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845882327 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05768611 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.738708306 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843488291 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.15705507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093002631 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860417877 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931126277 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770207438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.845437924 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088533735 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.047054278 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.143915239 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.321461098 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925972868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83297438 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.858055712 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.827456788 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851032192 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.108166032 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.898092155 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831678745 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955520411 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.792929152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.101507191 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866505555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.941616129 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.199922751 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079459576 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.181176766 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088318536 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904263713 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.84359247 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841891767 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.527174258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.448309191 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060593906 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.857657065 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379837334 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.851703264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.843965801 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771952489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.467774329 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218311414 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.920118833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059313473 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84525067 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118902643 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77126644 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.982127002 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.857677106 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.059562187 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.489816793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.922619819 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.095130145 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137416409 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.142199992 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853241449 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859368125 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938814036 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860716163 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.333470995 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.085863732 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.839683552 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839479479 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.529467974 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891559445 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843051688 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.843074297 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402662777 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120510084 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861720067 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.848510033 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712771843 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.849132314 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900083583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838922373 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.839458448 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.357522066 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350570643 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.841800796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.495019073 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051249193 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.837216618 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.51527479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012395503 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.855349893 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113647485 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911613843 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.767361937 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.541116378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540864684 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841932473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.768280957 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841392718 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843760233 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846689369 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.036648297 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.116981091 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891850917 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.482793927 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.945295147 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849361852 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.846448867 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843066771 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.360491571 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877192574 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.509029763 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.84915828 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972837637 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.856025182 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768346027 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.843196831 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843098941 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844695143 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.790324466 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886290878 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.526264392 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045943601 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093724144 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.263964395 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851368809 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.489699197 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.95955388 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.858644381 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.176931122 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408314474 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.948520414 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915692041 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850328938 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.554604276 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.579556164 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408273594 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134045039 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17748759 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197366618 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.268956983 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.172230651 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930322987 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072426207 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365301823 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903156644 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.935479499 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781327325 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858508609 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.493246478 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199090178 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857848421 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065164233 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133588879 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.238385251 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983099257 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047924646 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872893753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.697052748 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.873306768 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.380086007 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857827437 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.333324437 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047336815 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931038464 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.180387333 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.927177171 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.854816461 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182767213 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884314871 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.544340394 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197087482 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.327374054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.375689405 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067571965 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854354988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.283600721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197638542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.068823095 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.968997501 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771497713 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850884879 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848803637 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857536931 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.815417906 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.685777281 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.086217066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847099812 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068497509 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.013167029 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213469278 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.743277622 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.842906097 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840440042 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092922073 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.53267057 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999280873 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.186632747 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.423765614 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852072348 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76613477 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766425721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.540708303 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84570839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.801407036 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041564745 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.940569546 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.525925443 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.25035607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.149608825 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076981193 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.845307008 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114448348 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.10737004 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.333940112 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852703996 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.929264023 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.18600083 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.543412399 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.06338014 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.073625873 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389034735 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.065181334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301009018 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.81495612 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.853989049 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053748657 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.062098145 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.276798624 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023396913 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.559223676 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.856162303 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216068679 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910227052 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.272654745 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036103386 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.950554724 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864364767 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926762527 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852997462 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.855212839 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856069014 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861008492 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.279151125 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969647391 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.86351588 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92625889 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886511126 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.427021614 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.862117985 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132567848 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211478025 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188085797 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912428788 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852249165 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860745163 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777221658 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981111951 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290960083 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12326132 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.971480239 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.991398943 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872502999 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.216978516 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.139569438 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166394301 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124417367 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.733904145 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.51092714 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.974201784 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.069036906 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856994936 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.054904989 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077878198 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15368987 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312688436 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.019477605 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047924884 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125138685 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.212285643 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.85365283 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434853413 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.857374316 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252985871 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.882685878 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.260231815 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108663054 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856451242 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973748684 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.856517842 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.051139131 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.30332985 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.541015467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.199363358 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.705227041 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856607475 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140468345 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1936824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158109398 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931909388 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859554436 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547907 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985956571 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.689309433 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.069876028 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854612236 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057173877 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.564038216 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.858006884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132294954 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158363818 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.855316547 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.739633629 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857812407 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.856485926 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06875779 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063057089 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.095998904 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858434748 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.862156192 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.662349816 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.133195313 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914264367 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782080216 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.856364885 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900371449 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0804759 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874786941 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.37050406 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.555274517 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129865182 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.757422802 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872734414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.290588248 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242542947 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189264608 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.382885735 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07074673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.40357151 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.743845213 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237907561 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.858160358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296131202 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238762376 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.858457871 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389837027 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971875877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.137728453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183485933 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.876961593 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.630281494 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.885990722 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.071872022 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.222819781 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787147405 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858825668 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.906264365 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.855871963 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.839095753 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866138622 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.767302369 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332588277 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701497177 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341308709 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.858234949 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.864718377 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.402521532 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425158786 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97599049 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874999617 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862042922 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.58148575 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.141592337 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.100649863 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388644781 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.956855843 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.859494608 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858737783 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776713918 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040187438 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.056358231 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133967737 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.23185855 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.968698697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857739043 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.063469066 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059128323 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.272143803 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990995242 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.027744139 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97416395 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.798503041 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.563926217 seconds)
  done (took 1651.738196083 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.881742592 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.868939173 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.876286392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.884850031 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.904685227 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.893775385 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.932908798 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.891690422 seconds)
  done (took 56.92311932 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.863612686 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.022649865 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.867243393 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.862917204 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.867686055 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.863066088 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.022330227 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.879806171 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.867678329 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.868904371 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.863235699 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.863368492 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.146156324 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.8855027 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.865238645 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.855798907 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868564981 seconds)
  done (took 74.153150615 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.858618465 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.113378892 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.890236877 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.856473203 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.825736004 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.859370539 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.896966733 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.885477708 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.863305229 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.107743159 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.156572843 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.868494456 seconds)
  done (took 89.971843158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.87728793 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.866587164 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.866765196 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.86739471 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.8669777 seconds)
  done (took 11.141014611 seconds)
done (took 2153.852026279 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.087125596 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.052975196 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.101396269 seconds)
  done (took 5.94310521 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.009479388 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059692511 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.170870627 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.177585844 seconds)
  done (took 10.214257993 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.146662757 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.247337593 seconds)
  done (took 6.185577584 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.180403177 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.893143726 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.273224537 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.863037327 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.865708928 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.866620386 seconds)
  done (took 22.392024005 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.861579855 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.861565915 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.861863445 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.861570949 seconds)
  done (took 9.239612384 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.859981957 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.554617613 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.863228546 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.872972023 seconds)
  done (took 20.942978942 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.008963798 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.978268748 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.005799532 seconds)
  done (took 7.786437734 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.01151186 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.100646462 seconds)
  done (took 6.906089847 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.024068262 seconds)
  done (took 3.817106638 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.891579318 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.132791185 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.362563443 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.39332334 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.45069789 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.746660969 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.158568505 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.08828342 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.322585283 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307652359 seconds)
  done (took 24.649029666 seconds)
done (took 133.300778714 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.202106597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.895452048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.070799862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.216457396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.209821554 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071063792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.089755064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.205639344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.897153203 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.886218236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.223078628 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.207637037 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.038144464 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.884670641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047003189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.8886651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.094297967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.225706486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.907985459 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.147295362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.100193353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.866271273 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.063426572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.881383763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.098781504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.022803227 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.410843053 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891823415 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.044198521 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.421816884 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.028834057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.291720001 seconds)
  done (took 168.325059672 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.872479666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871882848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.871860558 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.872062095 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.32734076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.872876794 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872135849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871352454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.310935177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.307734262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.871658726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.320360046 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872717822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872771038 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.87279088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872485525 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.480023293 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.872965013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872697451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871841639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87173371 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.178005702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873260517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.197373637 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.47432212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.872983583 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872891483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873067039 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.872304468 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.873030023 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.874407218 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873775419 seconds)
  done (took 209.335945702 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.768826555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.874058144 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.872274013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873944396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.874201749 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874898232 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875515823 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.873231725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.624971033 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.616530868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.874290498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.875822837 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.877021444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874343481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.874264576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.873664952 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.873790083 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.820422132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.874256915 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.874814257 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.876967211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.433223678 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875669923 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.439545853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.876179223 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.877653081 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875549499 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873880825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.874850026 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.876222554 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87678904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.875192141 seconds)
  done (took 220.249556611 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.109553801 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.867775753 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.868093835 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.799291012 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.868499052 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.868330289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.844059126 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.113966477 seconds)
  done (took 19.13893348 seconds)
done (took 618.853448001 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.242398986 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.08049551 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.042712928 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.891815725 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.134157185 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.943039228 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.887643496 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.9531742 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.693623755 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.961300264 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.524007381 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.919952829 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.620391998 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.916814137 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.009581991 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.950864582 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.493851438 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.58269774 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.06973121 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.948543323 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.063413958 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.783046843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.969018497 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.740540812 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.653808376 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.846310277 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.91700596 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.4798734 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.900103838 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.041355013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.603825882 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.151403196 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.90839546 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.897082946 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.944955091 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.922041632 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.109293594 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.907556855 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.024045167 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.579373607 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.941320994 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.595234889 seconds)
  done (took 102.645707017 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.880007997 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.876247151 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.876026662 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.877096656 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.88604234 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.875869655 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.876352427 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.87589964 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.876908912 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.87730049 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.877381809 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.885995875 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.876442141 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.887544073 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.877132384 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.878162157 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.877521474 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.887726021 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.877264862 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.877846415 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.878868235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.878624326 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.870151662 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.877857609 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.877426028 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.878126808 seconds)
  done (took 50.655042882 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.87097756 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.047417955 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.121605637 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.899760708 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.879635462 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.883030671 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.896923251 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.876441452 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.882091323 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.881655401 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.982014465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.878230911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897402872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.120521704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.896098883 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.871847072 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.871942686 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.880307734 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.057557301 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.89604405 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.899491861 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.87736848 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.899308637 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.893178624 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.882391404 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.882257743 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.884665927 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.378676571 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.892556369 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.983186319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.925609133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.904581936 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.323454967 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.131839309 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.937080115 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.881642026 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.872458378 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988677399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.886796791 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882215063 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.899706514 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.887192795 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.123187223 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.417921698 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.896096977 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.874047569 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.387424286 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.99815389 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.922497839 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892263338 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125666802 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.899211173 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.875067541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.882061051 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.917968813 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.888789014 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.882213244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.245841024 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.895864727 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.900323581 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.880048032 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.882911433 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.06033754 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.890761832 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.048232675 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.892103189 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.8887152 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.883045352 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.125748208 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.899157116 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.433948295 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.897889435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.874046422 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.984968128 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.055046061 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.413699127 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.89511943 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.06323357 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339176064 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.908146789 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.892884322 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.369448952 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.91320346 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.890893628 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.877044915 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.876988496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.874461962 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.91967569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.899173752 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.341077769 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.433883409 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.266070341 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.914941378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.898359193 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.885231469 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.248881204 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.886910054 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.875864798 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.117776153 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.439399105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.898787795 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.891500188 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.412602529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.899424535 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.903905499 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.892445266 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.132838443 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.900282654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.920561247 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.875790214 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.890812985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886839346 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.902563001 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.892185989 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.877113436 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.402527137 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.007201507 seconds)
  done (took 234.141927004 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.885028594 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.887649133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.885218451 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.88815936 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.882952844 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.88387303 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.88266394 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.883317652 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.885470251 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.882935206 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.884536281 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.885443476 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.885787468 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.887406395 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.473088896 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.887467718 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.488625624 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.885738946 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.884643254 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.887617693 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.567966361 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.88975547 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.887877685 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.885366823 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.884200473 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.885174897 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.88751929 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.890126783 seconds)
  done (took 168.486066731 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.878691666 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.068354201 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.898299272 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.917456172 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.887648112 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.879170351 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.0282092 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.909426351 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.89262459 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.878659768 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.880113644 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.947130286 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.889163126 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.975647846 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.918800807 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.984580192 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.98819756 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.885635483 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.879241166 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.879368281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.91625072 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.887530305 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.946729478 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.010999605 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.899301234 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.000246566 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.899282465 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.879517144 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.887294525 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.000417207 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.899625432 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.940484701 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.917472309 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.90578161 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.005465256 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.003821293 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.984461252 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.982874546 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.894371009 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.880532127 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.880166558 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.882000602 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.000476692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.900320395 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.890050753 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995636856 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.899832188 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.881240634 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.880537085 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.881178248 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.902368849 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.906306827 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.953537704 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.020834186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.916685469 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.905246532 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.986141043 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.006811769 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.881822739 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.985268628 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.889164171 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994010609 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.901827913 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.883324089 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.883011217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.884868081 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.910818828 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.98634641 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.992457537 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.89624671 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.986043406 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.916528492 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.889363305 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.882162897 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.883122876 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001207956 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.00627441 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.917293289 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.926001888 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.920412779 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.891315025 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.890641896 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.882975532 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.907599922 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.888660253 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.99530218 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.005645018 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.888063076 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.883342171 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.882371034 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.88328 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.914749083 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.010253952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.927096884 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.988247585 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.95753551 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.96693742 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.899246465 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.896897684 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.887838295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.953475912 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.899394396 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.895320511 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.174235706 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.951225518 seconds)
  done (took 204.450143434 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.282162021 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.929518314 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.946390887 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.211976653 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.241642516 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.796466736 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.940751792 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.932300423 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.964310415 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.117653787 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.007541176 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.956386499 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.925913185 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.913137689 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.93054027 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.959689728 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.93870098 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.271092484 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.141754351 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.079186851 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.928670585 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.203622659 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.243812702 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.529162658 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.988204587 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.330910305 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.49235128 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.063598794 seconds)
  done (took 62.088653096 seconds)
done (took 824.267754058 seconds)
SAVING RESULT...
DONE!
