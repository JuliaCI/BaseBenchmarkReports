cset: moving following pidspec: 953
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356211111 seconds)
loading group "string"... done (took 0.605592406 seconds)
loading group "linalg"... done (took 7.660169667 seconds)
loading group "parallel"... done (took 0.18060602 seconds)
loading group "find"... done (took 1.237819385 seconds)
loading group "tuple"... done (took 1.931431941 seconds)
loading group "dates"... done (took 1.297497701 seconds)
loading group "micro"... done (took 0.241590157 seconds)
loading group "io"... done (took 0.995218971 seconds)
loading group "scalar"... done (took 41.112844571 seconds)
loading group "sparse"... done (took 13.228229515 seconds)
loading group "broadcast"... done (took 1.058080209 seconds)
loading group "union"... done (took 14.512019715 seconds)
loading group "simd"... done (took 4.780609533 seconds)
loading group "random"... done (took 9.575612455 seconds)
loading group "problem"... done (took 1.965228523 seconds)
loading group "array"... done (took 22.275817577 seconds)
loading group "misc"... done (took 1.996393107 seconds)
loading group "sort"... done (took 3.405586694 seconds)
loading group "collection"... done (took 19.331088667 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.560465426 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145639887 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136879395 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125791764 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188384202 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132602725 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142846396 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086815454 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.88217552 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162880459 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14166493 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520115648 seconds)
done (took 4.942899996 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.193444864 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088923198 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099681942 seconds)
  done (took 0.851124539 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06624677 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129408569 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082201411 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068261211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068108696 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082481483 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067808579 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068290726 seconds)
  done (took 1.237714087 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074514774 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070392734 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086095779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069827395 seconds)
  done (took 0.969671498 seconds)
done (took 3.994568208 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.942112875 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256983204 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194318927 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.489756612 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134186134 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192569813 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669069493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350093518 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21847242 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103146305 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108937994 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3928435 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.110244027 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681736527 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077201641 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106994908 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.171899759 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.425125754 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081800432 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083377415 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104989419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140847913 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105540302 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080452405 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171844984 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069830149 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155234186 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095934876 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069090934 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.252882056 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190152238 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698759501 seconds)
  done (took 10.63356022 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100717862 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122317587 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071232115 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14314017 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122249954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072230318 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074206381 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084037366 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095196442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.164757599 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118416098 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126635977 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067749332 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072248309 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102805965 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232433502 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096121839 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105921773 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075749145 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.095309375 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112664241 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102507829 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084541988 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099040951 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15397954 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194823993 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102859724 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113804822 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072880587 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101390771 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132510012 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136720356 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07003076 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085444699 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.160894084 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098637418 seconds)
  done (took 4.648994504 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.125429566 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176752004 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.0956031 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156784269 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086913583 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131902024 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066408287 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101090615 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255108098 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.169926121 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.498218955 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13312333 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.091113283 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070283168 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087587007 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068447966 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631140444 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148583808 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123700202 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086222801 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092576816 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072111859 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.382735188 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082090256 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068181675 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07003382 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077200317 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149383852 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069332226 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.281581067 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089678555 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08929995 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121789827 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.181009886 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09917077 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125415812 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083872898 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067600927 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174302342 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075540477 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.085245962 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092247383 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121773582 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120856293 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083088074 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069591801 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187409018 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06782325 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099986893 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.952328045 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167758327 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126494168 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086544953 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.301697641 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087484631 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084616183 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066832798 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273599624 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186441317 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085812251 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069288447 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084219516 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071300963 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.425644778 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068005297 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.730508273 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073297787 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079644521 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086520422 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067824451 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109835935 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076346972 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092222565 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087736912 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086031299 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.071014986 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068484954 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0847775 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070101608 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082018515 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088309715 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.209746027 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085010631 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070816702 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082945458 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08910128 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112904519 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073937041 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068250942 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119125741 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071187142 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08455945 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104776375 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087061963 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103436694 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072072042 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129760917 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06973835 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080922977 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124236632 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069564958 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067995741 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117653245 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092580124 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102202279 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.097110368 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070215614 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156770509 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066185452 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0835428 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069117844 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083837921 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069556128 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070979402 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100907246 seconds)
  done (took 21.645761529 seconds)
done (took 38.721226427 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.314816255 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09615504 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09508833 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.0943457 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079657198 seconds)
  done (took 1.430600477 seconds)
done (took 2.150912221 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.150783831 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103973014 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082277157 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099684526 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082787263 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103669976 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119019071 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083568373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119952055 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065310661 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11599815 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065538455 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081763472 seconds)
  done (took 2.027646977 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083072303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086891668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086218011 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082433363 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080603213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083147141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080834306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10600852 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080689613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089374178 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065526107 seconds)
  done (took 1.642402826 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082796196 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085524059 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086482286 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081922595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080151627 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081311194 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08112785 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102502069 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081004545 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091164814 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065255937 seconds)
  done (took 1.640619272 seconds)
done (took 6.026056824 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079943231 seconds)
  done (took 0.793757476 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.751584217 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.483010711 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085470205 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139017407 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224972134 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.161184519 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469084854 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.116058744 seconds)
  done (took 10.355350071 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102240414 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.085417321 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071710953 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099906896 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073023776 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086672821 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070787897 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071986341 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084331341 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073616401 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087792324 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075164918 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08852647 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073180138 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08529165 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074793809 seconds)
  done (took 2.089692123 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106413432 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.105484972 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092430232 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077924839 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08999164 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075219521 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091705721 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077429664 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088141005 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075042262 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092487322 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075520012 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089879752 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06832319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091578618 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078428276 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088033781 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076322436 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092184236 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078524852 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092933848 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068240841 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089213536 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077862295 seconds)
  done (took 2.871522606 seconds)
done (took 16.829598024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.135428382 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078752931 seconds)
  done (took 0.936520905 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084055377 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099153291 seconds)
  done (took 0.914059639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085682754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082031832 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093528496 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094938241 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08219129 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068308702 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104505456 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068801269 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082308766 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068389007 seconds)
  done (took 1.561719227 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071500653 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095390076 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072451517 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097579504 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076117069 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081834418 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07594134 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084740042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081091493 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078963148 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073754222 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099752415 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073737315 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101091077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0909017 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071201902 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088667861 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068838121 seconds)
  done (took 2.215486527 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06895555 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069216815 seconds)
  done (took 0.872282201 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069796922 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065071867 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083349362 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068657594 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080078008 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065115058 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081221167 seconds)
  done (took 1.246717435 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413849562 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110199493 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.266830309 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072559746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.108711153 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298067613 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067474554 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072903042 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089452477 seconds)
  done (took 2.273287695 seconds)
done (took 10.748030669 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082708994 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088036557 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112705032 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.44448563 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107078651 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068941999 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145996496 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.220357207 seconds)
done (took 2.00416687 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.129125255 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.634750266 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.414262612 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.232245735 seconds)
  done (took 2.01761652 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.387935746 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092262592 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075606366 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069606576 seconds)
  done (took 1.362985723 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067027581 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071685837 seconds)
  done (took 0.879273903 seconds)
done (took 5.12592768 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10069683 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084605276 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068853255 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06566884 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082657893 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068530854 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065097716 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082223551 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067861023 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083081476 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067263664 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065014455 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.082886831 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067873242 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066375796 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080090299 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068205512 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065387555 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080783127 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068012397 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081332924 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068110923 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065330642 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080919412 seconds)
  done (took 2.55375008 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088922746 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083943481 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074267319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089105259 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072246561 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091925375 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073638326 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069416386 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088946009 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069613934 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086970275 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073073084 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08487407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072727954 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085590324 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072791133 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08917435 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067981722 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085602849 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07264161 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07430042 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083382907 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072357763 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087410133 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073024641 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086340308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070013231 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083935538 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074034941 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08701528 seconds)
  done (took 3.125394842 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072519007 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066218037 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081879752 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072583744 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065158226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083317247 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066112857 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081803454 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066781897 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066120962 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.0827203 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066239001 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065961783 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082841941 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066628715 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08476378 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082779677 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066979187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08206861 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066358661 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084374806 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066019926 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065554101 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082786189 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065841175 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066130075 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081560842 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065049976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082082244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065136717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068596925 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.085416773 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064878875 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071756528 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084972063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065294783 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085244814 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064857927 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066092298 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080636837 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064611063 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066487239 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081171634 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072422142 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06525809 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.084063661 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065633489 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082951755 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065946344 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070175722 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080094893 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06515806 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082752079 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067459506 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070689537 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080545473 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066977251 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065062979 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082074684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066170876 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080317573 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065321025 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068423597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082019809 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082416453 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.088385976 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066676363 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066818799 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.08230504 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068376084 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068349103 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.096362362 seconds)
  done (took 6.037521603 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122707643 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096132084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084445395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068341916 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080388296 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067088589 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069529218 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080806801 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067297699 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088034799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067012716 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083504341 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067843822 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080680088 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082193914 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067344921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088042847 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064586345 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066695286 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085292175 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066791356 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085278508 seconds)
  done (took 2.479507611 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19170035 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090145873 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114680681 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092328022 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085760467 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076619202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088522587 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072690527 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073923071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086825229 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070395808 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088851562 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070652039 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085665269 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070615198 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086749985 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072194338 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086718398 seconds)
  done (took 2.352920692 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079613677 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068061919 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107273371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068225609 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084942681 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070480642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090286309 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076651758 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086067226 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068758839 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094159322 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.181408594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086749409 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067466384 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08620138 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068204838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070320904 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084645857 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077613139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088992803 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074378072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091863173 seconds)
  done (took 2.622074935 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084234533 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069800483 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103707661 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086516549 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064262056 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067014947 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090486419 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068304976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09132735 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07008637 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084449055 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068045492 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073092478 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083891246 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074558633 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084155771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06974742 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085004377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070062699 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064695983 seconds)
  done (took 2.303804996 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091330447 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085907817 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069632687 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094687717 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069870743 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086654601 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079099553 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086813163 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070930712 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111461648 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069932633 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087009891 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079087161 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091257077 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07056036 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094698451 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094590342 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079712465 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086385234 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069308055 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110949215 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069296192 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09527842 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069160135 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08632868 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070245986 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086793188 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076498219 seconds)
  done (took 3.088597879 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068040329 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067708347 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082092525 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065406732 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06629241 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082092507 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065254442 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066284513 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084157108 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065392423 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084807535 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068834477 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068565889 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08352989 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068208545 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068110644 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083841891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065682751 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066242144 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081345946 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067955399 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083538649 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068885739 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066346988 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08179407 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067758717 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066145199 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082231385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068980143 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067049166 seconds)
  done (took 2.93049165 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078302166 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092644471 seconds)
  done (took 0.929862327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066507373 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082726327 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082766522 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071534 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089596502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069498031 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.093280269 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073207368 seconds)
  done (took 1.385197164 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084191294 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079824012 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086203898 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097790862 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08009314 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086055847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159416328 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086490024 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07518563 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083616074 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08254565 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084693657 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07459071 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068889406 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09194681 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074894246 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08288208 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074689183 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071608531 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083658445 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070444265 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09644188 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071003511 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08257592 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069954323 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077804658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096286374 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070876433 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088431869 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.0768381 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092297144 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063287647 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084669832 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069830529 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067367289 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095723672 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085078056 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088414315 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078984072 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086724193 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080430591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.080444806 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074537485 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.092053719 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078750099 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0707855 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085791671 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064236301 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082856185 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071819254 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065351003 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08520893 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06379227 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092861185 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072269676 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096280143 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068221253 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070937465 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088746858 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072503124 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092476804 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070579948 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071278932 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084774287 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075967852 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09043793 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079260975 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08075018 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063234212 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066583488 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095998622 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09222674 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092637704 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070074424 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087244559 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066339047 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089220874 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070488801 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075636475 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090854791 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069659442 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091813581 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076432573 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084816759 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070788531 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093560317 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067028105 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069985674 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082814216 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086588093 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083936891 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066381735 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083750988 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080727088 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073163304 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085378477 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067319248 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092706099 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0634072 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069793228 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086407483 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069146473 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097014465 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074663515 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091109877 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078087937 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093029686 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069074258 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089011259 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065537774 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071433214 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084989534 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076380553 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079593085 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072381541 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070700883 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086761126 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078602905 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084212376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069787047 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093105478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074968842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067354263 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082128124 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072584072 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086046914 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072839317 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094260548 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06807218 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065198383 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081027019 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073475998 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085742469 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073536108 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090577521 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073391309 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064769052 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08370746 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073050167 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095916029 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069116891 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.087079469 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075984448 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070299497 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084385407 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076145331 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088698984 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068433516 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07544306 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086206851 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065158154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088581921 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072622197 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083849484 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073238793 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073046853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088426825 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070948101 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084503308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074066756 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086814186 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067224897 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068927978 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083605694 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080129306 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088896756 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065107488 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065387937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093198558 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067359806 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.085506114 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068830146 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070682429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086624677 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067068421 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085212088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071025375 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099193654 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074767826 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087230037 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075368786 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097110969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068594264 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072203894 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.086148454 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07072808 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087209174 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078026836 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075001505 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091522444 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07152792 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082777744 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075353886 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093975101 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067531566 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066287057 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085539582 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072825394 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092375969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072009053 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087337972 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067776626 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069263343 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089147383 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072643739 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086278168 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068586734 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089865084 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068595753 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093172831 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071146623 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080138225 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088651071 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065311633 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088963554 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066964024 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093058123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065140217 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066871655 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08570953 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06969214 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068399307 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089631486 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063259337 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093654664 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077124808 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08613238 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06778688 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069800291 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093540164 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0712976 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090977243 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073323163 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092133382 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080100867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068228286 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089509076 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080057003 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086407093 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06380075 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091892961 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067404433 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069347155 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085049227 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06748045 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089643133 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078030802 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09330936 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064033878 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072350028 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084478645 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067920071 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.08110077 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073974441 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07150857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086846676 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07651611 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086635261 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070435998 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072646322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084917199 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.07069577 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087510839 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072715751 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086715043 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071349701 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06865145 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089489263 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068357427 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084141151 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071079259 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069743588 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084971108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075639781 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.085758744 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069421316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071849614 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086009214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070272868 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086571554 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068446852 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089792255 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070832066 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070250914 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088784048 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065153524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093444319 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068278506 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077492343 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086746709 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066366026 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091797233 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071605718 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091808878 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070493453 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07040157 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088147773 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069996023 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089700553 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076121837 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066860786 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097845899 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078124529 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08691672 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072558044 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087201692 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070681066 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068901261 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087263999 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070379655 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086629008 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069644545 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089817096 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07215005 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069486533 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088462467 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070991129 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086124904 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07115681 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063569412 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085330298 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069620897 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086175765 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079649922 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069829643 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086111047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068130974 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087076009 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067486162 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066226573 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095583844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09553532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069901658 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075986858 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084843612 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07109213 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097657637 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067293928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084624257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068177768 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067393744 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095219301 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071067893 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096445466 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068894125 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068406541 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084186867 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070648366 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085625309 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06410788 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068071616 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090446415 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068338037 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085023375 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069944686 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073148441 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087797768 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079790301 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085345157 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069244688 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087048869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067439933 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068659067 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08627519 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073280083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087737151 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067703585 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065774152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0862768 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069773325 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070993097 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087002817 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071537487 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09386051 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069835293 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090113171 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072162305 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064152177 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090071593 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070304829 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086287932 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068559135 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073065523 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090646441 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071062951 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095947918 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069642927 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087036969 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070178543 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066903663 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086071328 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0682621 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087585099 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067927629 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070895247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095648577 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067274986 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089961066 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068291151 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087764764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076559326 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069979676 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090161373 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07745295 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086796001 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071349931 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094733644 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072800336 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088892803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07077325 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070276548 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092315121 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067752431 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092763167 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069837977 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069644792 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.088812064 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066937273 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08682726 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069698525 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068930795 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.093189876 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070878168 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085621328 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067987405 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067643659 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.087408158 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071937656 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094225143 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072499591 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090199096 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065106742 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066790383 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087776364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066516256 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088537643 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073132585 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075686741 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088654531 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070626838 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086248622 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078759845 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092826532 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072272104 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067770659 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090418473 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071424594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089320602 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070909399 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068742732 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089203514 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073363793 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08809157 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069035922 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094472434 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07335439 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070799385 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088661693 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069925206 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086638693 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065137797 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070292494 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089306102 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07373475 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089669241 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069333482 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098834405 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066290409 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068906655 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091214058 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068136445 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.091011944 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064061136 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071356985 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088461625 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07055297 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081573134 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067884047 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068344585 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089869414 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068127295 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082925201 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08040409 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097422939 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073064258 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069170597 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085431729 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065818475 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083274627 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069607676 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071225897 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087860202 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079890281 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086536643 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06845221 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081595601 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070190559 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071880883 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089763263 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066632809 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082956228 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067613941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071879022 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09282347 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067702025 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086908108 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072884476 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071190438 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084429954 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072193588 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083795135 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073343347 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101261364 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070395773 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070260977 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093913361 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077531002 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087049942 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0648896 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088263596 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072554636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070287714 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088138108 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069976023 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104054883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073389447 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08657789 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069195771 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071929279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08625799 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077300665 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088102077 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070470361 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092014442 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071418787 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.095516949 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072056855 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095766068 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072769288 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071856929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087006585 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068944561 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085979305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067908344 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070362825 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088503503 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074350021 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096160573 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068402983 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098548045 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078885135 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088692284 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066504052 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069258372 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.087043795 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065207555 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070426917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085826456 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067405363 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08608678 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06938594 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070434297 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092935135 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070330123 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088403064 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06942961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064002367 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089711029 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07221598 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088353632 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06696362 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069305845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087719596 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072568571 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090617816 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067493025 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087962392 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071716051 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070095825 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082956347 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075465061 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085302259 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072695384 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069666884 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087728952 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07151071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090730555 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074990427 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087893823 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071054132 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079032102 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089923531 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066148227 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084816002 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075114066 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068003929 seconds)
  done (took 47.64811349 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113008379 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083816715 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06554122 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082489057 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077291446 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084006979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065354597 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065497053 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083944654 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068324015 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083867213 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064929784 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.092145616 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088364453 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096532983 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086855946 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065795485 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064819164 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082634546 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066802586 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.092834285 seconds)
  done (took 2.47457243 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089661185 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103864978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07933579 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102543473 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092666976 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081729603 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099854066 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081705392 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102879315 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094015731 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084534355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098080148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076303432 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.094591289 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077886767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09620928 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102666362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076188161 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.099373992 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081312371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09684071 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0986014 seconds)
  done (took 2.809349932 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070485149 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068971905 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088177185 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06424788 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069117004 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082534444 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073596214 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.084593958 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072099816 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067527398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.094498538 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067390803 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.08896748 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067726882 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068459544 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085333792 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136346537 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072276022 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087017258 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069864591 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064320941 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08979127 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064128628 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08368579 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06729761 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072769999 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087123467 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067441911 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086337273 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068223715 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068719858 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085451125 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070907455 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068716582 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086590153 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067330935 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.0874076 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069091667 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064397376 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08477239 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070316492 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083403572 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069912031 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069903419 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085860559 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066832002 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087367572 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068809543 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063922024 seconds)
  done (took 4.550825768 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089589812 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.143076401 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089256008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125264847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084489612 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096091544 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071666126 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125341484 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084769357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06847395 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.106602699 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083647234 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088701432 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074053693 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093820023 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068404331 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089219258 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067443516 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091864647 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068240667 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092508537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076286563 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103605315 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.100682419 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073980429 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067574101 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08695773 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073380326 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100596555 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092053652 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07396097 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092093442 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086066001 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092959811 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068569722 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089651199 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086085141 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088687862 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072337405 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084963159 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070990148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091484543 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075928338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105211642 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069620029 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093113971 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068112006 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084684182 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083164544 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089669456 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078197406 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.102924853 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091146125 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070059486 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091489786 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084252773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.088449311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067139084 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089360823 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082357979 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.085732847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074249985 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101300934 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071243318 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095346991 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085187484 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.092342091 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073140363 seconds)
  done (took 6.80416665 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077831868 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093596099 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083547121 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103866755 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094814327 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076244538 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093328799 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077103242 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094522724 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082526661 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093607942 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117382459 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071193654 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097704423 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076417174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094439385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075674496 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095528074 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094132865 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076494188 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094949628 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085256949 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095430229 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102818388 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106620038 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089102285 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076149931 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095180339 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103556899 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076771585 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10614486 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07544261 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095379016 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103197175 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086373453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094536392 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067306203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094547215 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075959428 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094162259 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070113186 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103507896 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094141534 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071331176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093557651 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076144566 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103707543 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107161585 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078904695 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099885266 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074727975 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103410732 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093733984 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075414595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104235389 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128577537 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082952899 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103353227 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093789244 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084459562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10179726 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.111342852 seconds)
  done (took 6.456148976 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092501225 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096404002 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100082893 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066124817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06633588 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092880698 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066458773 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084959628 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07886747 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097004244 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081939574 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092421628 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076451031 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099910939 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090697248 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076183399 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091172929 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073835017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096895197 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073811538 seconds)
  done (took 2.504530044 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07789661 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105419706 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070557593 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094727339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07199287 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075168716 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089660898 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072452473 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08882297 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072344924 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098904151 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080835464 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08909248 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075005561 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098595419 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075327159 seconds)
  done (took 2.15205023 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081764827 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098717315 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085730227 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087982518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066373213 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085450085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069136401 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064964271 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085319618 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082538515 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088930818 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071110703 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088547046 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067843443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065543884 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09159245 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066274999 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086713026 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06907512 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1036869 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080666099 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087101491 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069358286 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090800541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070116827 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093959531 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070358078 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067287798 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087113312 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069485146 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089173467 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077104262 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084864335 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068501366 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086720296 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066314212 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069680825 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088971008 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071751958 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087059371 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068451565 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087182217 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069307322 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071106202 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084929444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069685099 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.084411809 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.075915299 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067538192 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.088613649 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068501493 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089645341 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070890519 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099045576 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072927738 seconds)
  done (took 5.168661999 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084191966 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07186451 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08391103 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067649518 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091770373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071531318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072860911 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091391366 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070657839 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085179857 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070326663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090485606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071853369 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073453764 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091338932 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07376192 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08382366 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071997156 seconds)
  done (took 2.240867608 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075360057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06946058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094866252 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070183401 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088836165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071206718 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064982556 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088171777 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068490229 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087777154 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070395898 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070868808 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087862601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071197321 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088241308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069790842 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07173548 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087149918 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068571619 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083625874 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071197112 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068048875 seconds)
  done (took 2.511848856 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076289973 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096941647 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169307812 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.11130965 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.085819165 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103257029 seconds)
  done (took 1.467745383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094226711 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102962925 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069027067 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11020774 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077322731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09093601 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071973402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090532967 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080283417 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105047476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070624079 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101557254 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098459679 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084128523 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095779913 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078376063 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090469012 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071158059 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08862182 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108972054 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071498094 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098993717 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071783905 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090768771 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072044654 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098902557 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098891537 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085907412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090420204 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07929531 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096351584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070981748 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09990374 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103669131 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072096316 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09923632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070832234 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109550433 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095994798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081606249 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091947674 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07716243 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099669264 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075980238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099950254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0904096 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077835805 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08927003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071970588 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117173642 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097479652 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080245502 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096924881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099725363 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081365792 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114057497 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105155762 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078331523 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09674005 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105244449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078596097 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096213178 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098150485 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086602879 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096969898 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078827083 seconds)
  done (took 6.74669514 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085669228 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1084864 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071219565 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104309564 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098196034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072130276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089103524 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071397654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090433808 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070775732 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132124751 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070819988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097942555 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098069333 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071417366 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091147306 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070871002 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099957925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070842662 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116548967 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090041778 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079846445 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099980488 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098106534 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085605161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09797537 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071290211 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089795571 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089191545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072737518 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095447405 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071692428 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098071655 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070393671 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097664097 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071574099 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091130028 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076836012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090629042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097192149 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080654238 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109938408 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07226578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091080773 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104780554 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072025635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091959393 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071807667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09062835 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07134567 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104737955 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08599095 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103887687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099619649 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071712865 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091165025 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072740553 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090326473 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07214201 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097052254 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100524545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072028672 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118065707 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089817769 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072397318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100212105 seconds)
  done (took 6.64786056 seconds)
done (took 130.731035067 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203006573 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185856954 seconds)
  done (took 1.213133531 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071353663 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.11909774 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080966318 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131542733 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089264068 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10316542 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.122151202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083079958 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069023588 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090144903 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069949674 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091677967 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133473216 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070012336 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090246542 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072328373 seconds)
  done (took 2.319007858 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107219253 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202174557 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11376473 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068021362 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103554046 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082107621 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088619794 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080808646 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095464901 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068137508 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101576858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079777151 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06827898 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100175759 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094118603 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081887017 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067661683 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100202132 seconds)
  done (took 2.539699527 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110187361 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146638546 seconds)
  done (took 1.091470759 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.205632213 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124656076 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208117203 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.486258519 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.246316651 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.294485301 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.177626515 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.176270226 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.151624014 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174587972 seconds)
  done (took 3.073674759 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102304937 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177097676 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325711584 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.143288206 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092416265 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119774723 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.14331696 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114597401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085794531 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106583551 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105003256 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080883279 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121922651 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078990922 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098092916 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079978533 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125732831 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077122527 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098335479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078735609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122546823 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068484952 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097791047 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077358763 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102353908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081978036 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088725017 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06958915 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.097877328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078040905 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10195853 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117741448 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081568525 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136163795 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106535599 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.137275558 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099761913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076709511 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077290048 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.095997855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081517553 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102260451 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.107705304 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07987599 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069031386 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101284521 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069146579 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088697754 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084131594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100854355 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083386243 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102944209 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.137095566 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101701532 seconds)
  done (took 6.418626111 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.765926775 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138802915 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075327435 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.833614389 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118568535 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08704481 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.752373059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097422142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238799426 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764079659 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115528004 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080560398 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213757724 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223049849 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943059551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.297334305 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.651493476 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110646606 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112653489 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137707547 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.167305432 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161760371 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.155380209 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.436088545 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098724175 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074857571 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144786449 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100403667 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143170231 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108262812 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077562172 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163328334 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.252833366 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.166642926 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099030651 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074284658 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07341974 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.174024042 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233873061 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197215887 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162521938 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071672546 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093985859 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.146606203 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137268688 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070557987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146327044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17870417 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154775866 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076833366 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100279936 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.147517037 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146237906 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147917538 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104859333 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303664357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.29216164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073242855 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126586844 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.089182965 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246859616 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107408117 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187814763 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143823859 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195804157 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073163512 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761613063 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154019227 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093533375 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080047804 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123702123 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098680181 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146408809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.148541519 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.376628445 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.151279518 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076141037 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093895554 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214464931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107662046 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073222613 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147858745 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098392805 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127931336 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151855727 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153414646 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.153721958 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.240399305 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150917263 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.147103443 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097358464 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129920151 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07919252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.19628046 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202347451 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147712238 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191820565 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166631193 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147082454 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152487398 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081538203 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177433016 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125267282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085247647 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145549392 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202241332 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127973747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107199577 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076589649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14517385 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130654931 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110081916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.144541257 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.15629909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479855749 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153173378 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070457765 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109740814 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.148093863 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148854698 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100838841 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220420967 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129922317 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.153187932 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127850548 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090263326 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126716339 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.147819486 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083195232 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126891749 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167044555 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079425888 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222304245 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198157782 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082459522 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223682865 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165227508 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080035189 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153882507 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126505438 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15172613 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102430485 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.145411993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09940688 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760655436 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.169913781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128956977 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077566405 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.17733075 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073082183 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105882894 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088095259 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090271576 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751491645 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.11060582 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10363161 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085911587 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099312433 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127250068 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144284157 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077836601 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16768608 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191107281 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101168468 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125454355 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087962887 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143862482 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0994207 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106550817 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.088098833 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107767771 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128858289 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077675298 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107065763 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.153355316 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.147271307 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201921957 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550200112 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093165173 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08762008 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210957911 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093219785 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.252716607 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143995707 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.207518486 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148999005 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104787764 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288682013 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15074507 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.180519854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090235334 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157020069 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090627291 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142528314 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14941524 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094455536 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078929625 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.146758685 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.173675117 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.151071151 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947098859 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074127854 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211346126 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090573278 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.156063931 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077771017 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102341627 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.281811129 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074189522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153370567 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151314254 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097209464 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.108683285 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.71585489 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.087841724 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165132409 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079552576 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203439738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.150321394 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.143036528 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163009781 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080566052 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.146391425 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191962187 seconds)
  done (took 41.893178296 seconds)
done (took 59.376433959 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285471992 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.2180894 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.237147461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152065703 seconds)
  done (took 1.824039086 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149286426 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.110922652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122024028 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.088630204 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10967991 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.088885963 seconds)
  done (took 1.528734719 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.435027567 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284847822 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.263528035 seconds)
  done (took 1.844169557 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307197874 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236788078 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464651906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308961137 seconds)
  done (took 2.282581057 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199639067 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119778136 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091423968 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087462214 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.187467823 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249791202 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131648389 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195046609 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102343121 seconds)
  done (took 2.271103808 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18473019 seconds)
done (took 10.791230767 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.337596723 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.136895343 seconds)
    (3/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.214942969 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.283059462 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.19356194 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.289119751 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172171506 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075713167 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.109064603 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.182597296 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.299507096 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.150053258 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.222599201 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.104670591 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077888872 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.274904032 seconds)
    (17/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098444208 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.241179803 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109760013 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 0.17048882 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.300501455 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077377611 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098445802 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.201788223 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.137310629 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.271807507 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102258453 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.109498816 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.154598674 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09547184 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093227298 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09652657 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055235842 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.075482223 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.26275798 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069205379 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172632936 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.098193371 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16830152 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086388185 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107314018 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.263652449 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067073643 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069275887 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.143673969 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085366207 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.186339294 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.102186396 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100363444 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.274850496 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.088433851 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.121609166 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066126483 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.204529883 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098581614 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076186918 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.26320938 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098251669 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.117131143 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098695227 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.100998805 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081528941 seconds)
    (63/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.163504185 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.122731392 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079819183 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.103038518 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.249852516 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152541572 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098392517 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07866038 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071676402 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140691394 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053981808 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096340431 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179732584 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.242963503 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154569932 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.065602881 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077848104 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.225219928 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.271097796 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127150048 seconds)
    (83/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073357994 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.100750737 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.117238344 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.125577517 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069511258 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054199676 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.126858858 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.10299657 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09710533 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070682695 seconds)
    (93/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206004207 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.245891515 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.070643885 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112753484 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082758743 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055449439 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115650936 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173205664 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.115876823 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.121116257 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072268919 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.214004461 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.055386006 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.135522379 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 0.152052165 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072605493 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07853313 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090367344 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076789066 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087022449 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.255018298 seconds)
    (114/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134556924 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07780224 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118865779 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086300808 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055606578 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11509439 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054910424 seconds)
    (121/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215311652 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.098349357 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.098432169 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.086492368 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077984721 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069408468 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.173035727 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.125410903 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069081892 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079402443 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090074759 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096852794 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077320736 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122487744 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111773681 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055608225 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148867961 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.105619102 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.103204337 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 0.163442382 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077577378 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.396275184 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074278923 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.091929698 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.141573007 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099519505 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095377298 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101566638 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055962792 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075170715 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095339999 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077071297 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.16691817 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078104863 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088649652 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.093211197 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.101775777 seconds)
    (158/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080444519 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104116189 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054357897 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09331493 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099279516 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068194853 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077201426 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091302642 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069825747 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054049576 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078212304 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.175858598 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054649313 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077572689 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.133657138 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.069637402 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 0.155860218 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.224805764 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126719375 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06969675 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093836176 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.141022584 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.22452411 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093313849 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089700123 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.245358148 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054915576 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.093515672 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.057801415 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161947852 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065443811 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110244858 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100740142 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171048296 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075607931 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168221764 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070736135 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.246617658 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.247820752 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.064627665 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078662451 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.257618758 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070280777 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079242603 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174284369 seconds)
    (203/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077009593 seconds)
    (204/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07677483 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069314737 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094936523 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067893169 seconds)
    (208/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.090885985 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.0911023 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056127619 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.129240782 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075014913 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091013888 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056156775 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078239037 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099161981 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084057509 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11738857 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092583772 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.09194904 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080101041 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054428977 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075632539 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.070041576 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.05519821 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096093017 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054144385 seconds)
    (228/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.09166598 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09796389 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07086745 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089802438 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.06768261 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194735502 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077957881 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056758169 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.165939972 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134967502 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.11892417 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090485531 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055309544 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.05447451 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113983769 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054874576 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067525762 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.092175011 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068958981 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075773584 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.075660802 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069974961 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.114036054 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076837943 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055101696 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07748216 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055160975 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068646777 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090330646 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054567937 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075449197 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.091458241 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075992753 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076675197 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077149086 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077347711 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055592734 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.092476301 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.095376576 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.07743608 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069550071 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05392242 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.076020366 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054891461 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070535171 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076532231 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137899986 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116501735 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065598049 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05483815 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.099450398 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054646013 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076621976 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196386937 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132212482 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077525449 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055040675 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098008504 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068244782 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067576966 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.092140225 seconds)
    (289/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.053955474 seconds)
    (290/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055722211 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.099182542 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056239766 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068798091 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096182075 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194552844 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0679383 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.173746719 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180710903 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.094976781 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074308013 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096517611 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054747532 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.069635203 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054339721 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203900135 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115904592 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069136098 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070841099 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077666211 seconds)
  done (took 36.136509387 seconds)
done (took 36.998386165 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08407992 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118588946 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079113872 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.119153376 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085312824 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104401746 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076920943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.105370507 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084519807 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.108357532 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083361216 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058142057 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1012091 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07806642 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100617557 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096350655 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104816703 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075442213 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.09897478 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06920768 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077032821 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090846172 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071207998 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057648976 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1040299 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075991402 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.099391513 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.079230912 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068961406 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09123733 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072682932 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.099155344 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068606357 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081883878 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09799399 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077527325 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101253396 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080067943 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071142017 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091353355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077863738 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.091930857 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075790489 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076865735 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.097899296 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074030351 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098712816 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083516298 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121202984 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070589067 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.101998283 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.08130186 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080318539 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.1003591 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073172195 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.099505257 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075297274 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120341128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077617748 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071734789 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.099961223 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078291706 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.096923 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077455705 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077176225 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.102012141 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080573599 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096459674 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079459664 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075729962 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09036864 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077794978 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.094762952 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069638474 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080692107 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.102260527 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067520721 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.096420127 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076146613 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075628181 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.091483317 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070908174 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070698861 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09770926 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071654949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057548858 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095682695 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074301481 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.090074831 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078409084 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075215066 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.097161878 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07026589 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.102478741 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068927778 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074440517 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.091233116 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068466324 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071277096 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.095752318 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068972784 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092569086 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078635177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07053193 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.097110006 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083841012 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091273896 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075355202 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068973744 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089918572 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085587857 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100195488 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069883355 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072219028 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.090798329 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076302331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068221373 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.091439102 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068584541 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090780338 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075099526 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068508705 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093505121 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07680801 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083671439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.09395609 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072245042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093093459 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06886074 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075309694 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.091681235 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068849262 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071348962 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08857659 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071335164 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070131178 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.098685831 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071657277 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099802091 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069865766 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077076854 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.096522358 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074460446 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.096902481 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068002166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061194746 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093701952 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070398505 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070261207 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.091398515 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070119175 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068569023 seconds)
done (took 13.63519047 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069920384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17714184 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.133293207 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101993273 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114508078 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069965884 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104827434 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134866173 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07178287 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132531207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092895705 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11231132 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146183969 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069208409 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069508385 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096670706 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070858565 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.118062996 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108025471 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11344202 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148513589 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067961111 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125806143 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.117127717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09378219 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12361335 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070370668 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.095726989 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072939099 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.129339503 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090545879 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.0735235 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092883892 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129807041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100243003 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114436929 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068381178 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11152343 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070071044 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.091224276 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.099783284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127753099 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109286192 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088136284 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096196526 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07284556 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070730535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113724435 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118991039 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085819318 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116525662 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140777492 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072905724 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110889702 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069313487 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115169426 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086711457 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.094675159 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069653888 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07123484 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.091784467 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071729304 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.117040987 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.122313236 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074391706 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110483974 seconds)
  done (took 7.525868019 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088413982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119407203 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088359892 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111490028 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069078315 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069671091 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.092375391 seconds)
  done (took 1.558773718 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070227556 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093031779 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117056573 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094370069 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113257965 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091390632 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.102135687 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070395105 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110715449 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071824177 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114740653 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11045152 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095573089 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077204383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.11894975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069320445 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095539583 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093184695 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07324988 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117383937 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0733509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.113987203 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072668574 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069818436 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109709626 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07081625 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143758752 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075169503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095065989 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073075722 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068809481 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144635961 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108395711 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0810199 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09340793 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086369408 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108851038 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068097369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087540968 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098334981 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085084197 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.094759899 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072044005 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068364637 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.098195702 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082445133 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093949485 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072432521 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072806997 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115338251 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070781712 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108148476 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070412629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074259381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094301802 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07678002 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.103409101 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072438957 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092026476 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094304718 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087896748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110708904 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085542462 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111111321 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073580135 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.108585923 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085367585 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073993105 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094773827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074224878 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11170368 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06839409 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072324169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105272664 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071796681 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117512495 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09485472 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095223544 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081289013 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070449143 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.093590154 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070376846 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118739826 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07394438 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093490047 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07508515 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073557786 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.092435193 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070289313 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073623624 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.092124131 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071893394 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074210104 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094404698 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07321262 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.112110288 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071646121 seconds)
  done (took 9.599764619 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07161445 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071312379 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095268706 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070935491 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071795715 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094923728 seconds)
  done (took 1.412090154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101814927 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09696791 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086032576 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100764087 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.113159185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10913035 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085652133 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110324591 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089021609 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106710828 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085145552 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110704586 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093002644 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100616689 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086758635 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100535141 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087079961 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104561717 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083584004 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100622246 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093392304 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.100636768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077694541 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110468223 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074770184 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099631277 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082177773 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.107291485 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084529888 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110028009 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077763806 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.098593838 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077061737 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109601706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086417522 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.100019862 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076316999 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075159614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104553374 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074462221 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10938153 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078193394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105779131 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075963204 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111276874 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076646489 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098375994 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081493536 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110142203 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075802343 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098013601 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076587596 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.097710956 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076298799 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076585334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110232672 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.098144209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087461472 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099935401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076562695 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07531487 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097857923 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.087516748 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.097955904 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086062116 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.09847499 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076404156 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.100314612 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077166907 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.100189127 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075524617 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097364566 seconds)
  done (took 7.599298028 seconds)
done (took 28.613507428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657987814 seconds)
  done (took 1.588142325 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.805474918 seconds)
  done (took 1.737634375 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.531275087 seconds)
  done (took 16.466331119 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.658914948 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.821773252 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.831007502 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160743703 seconds)
  done (took 3.402808711 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.880589596 seconds)
  done (took 1.831212847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247050658 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258283613 seconds)
  done (took 1.441412604 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729005189 seconds)
  done (took 1.669884715 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.306215826 seconds)
  done (took 2.242552807 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.345581152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190146962 seconds)
  done (took 1.47975518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.53398127 seconds)
  done (took 1.478318512 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.528746844 seconds)
  done (took 7.477413922 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237341522 seconds)
  done (took 1.195700312 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277442192 seconds)
  done (took 1.22467295 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.249484921 seconds)
  done (took 4.197473316 seconds)
done (took 48.367480933 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080751234 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085624152 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108359809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082661391 seconds)
  done (took 1.300446645 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082488645 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076820477 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104766623 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075959209 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105236618 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075834187 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104498684 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082132914 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099712975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07680935 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077173436 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09904617 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079903146 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.102441868 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07502763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079777568 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104327432 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077160452 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.1028247 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076878091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097551671 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07867722 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10363148 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075514555 seconds)
  done (took 3.069421031 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081116567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076694793 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102017531 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075869466 seconds)
  done (took 1.292070579 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080602575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.121277019 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094346213 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104677655 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097670402 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115934622 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074063986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073441137 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098033433 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080761708 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094551216 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104758419 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116118519 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081045506 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1065512 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069189846 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.09650824 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091802916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081698478 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.104876478 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073141283 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103418844 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072367499 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.11840249 seconds)
  done (took 3.212054363 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081282717 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130013442 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083677156 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118567528 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09604529 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069079778 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104334956 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095345329 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156796265 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.092795034 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073005751 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068972407 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099397376 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06920431 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081311472 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137757421 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.142168129 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071754906 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126569567 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069899887 seconds)
  done (took 2.922941247 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078358806 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072972992 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092568459 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07147519 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079835922 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.09936992 seconds)
  done (took 1.455424703 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071600033 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070061462 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093351094 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069762063 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074451606 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092989243 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069238545 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070669684 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09364727 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069576355 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092832938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069175703 seconds)
  done (took 1.895043733 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.460078176 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073115007 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095069156 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068669611 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0733322 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09372199 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08560637 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071247526 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119274186 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069719743 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094168811 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071699222 seconds)
  done (took 2.337188696 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274731143 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081198538 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.34223524 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17519099 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144629613 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16183359 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133563772 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122977296 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203806351 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143318988 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239215181 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233035906 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116038302 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200813341 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095013576 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.139010978 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222813107 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205415828 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135874746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234331883 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192906313 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162578787 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.2114735 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134799871 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14068658 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152549432 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076240613 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109568661 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244038521 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169174296 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210670958 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143269163 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101585346 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242891979 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230345308 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204718254 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168886665 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090477486 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163844468 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.17161706 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267797914 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117257411 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229933956 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114117418 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109421854 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180007445 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152616305 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153957899 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142217607 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117674558 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208041724 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249061134 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.175181584 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092097881 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140955221 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145671496 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147707905 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133075623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254001274 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227310963 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164895039 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075360196 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125975106 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220176345 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167234332 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148275616 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160031861 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123634917 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176828966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.222379067 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149105815 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182545451 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.191627564 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093131767 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151049204 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203971621 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162630652 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241103427 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161281225 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076367634 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157890875 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13279652 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111624169 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149659963 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10605382 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245212934 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105182027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145116418 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142326138 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141585441 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143201731 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229656063 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187250825 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136116283 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070299214 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134848538 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155341783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209217638 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093684146 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14028749 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154302706 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.107625693 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174981607 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104157002 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159318343 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082473497 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182678999 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169132965 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081010275 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158397269 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134566881 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132570095 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171778709 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230296863 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095395417 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111418506 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237157064 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16268058 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138595912 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184238068 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222902148 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130834519 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10698215 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211916789 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254278147 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119451611 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20609887 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136052937 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113056131 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093297288 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183690049 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121154319 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155026947 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112505225 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160279745 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235389746 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078268652 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126298435 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173385326 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110815972 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110148988 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145932967 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10594179 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.125951569 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130895672 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139189607 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178752878 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162204653 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139386075 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162707643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130256108 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230714041 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119781415 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134972205 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111616845 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098598825 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172512219 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225877972 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08490292 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237580302 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161920376 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135332596 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153595303 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089250898 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20337259 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083730833 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099086006 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183046385 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145893665 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14360112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194074364 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136124268 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162451862 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.157843146 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195194267 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169521598 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168713779 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1379289 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116718852 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146068609 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161684695 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077221318 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125049923 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112421567 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111513859 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125008655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111959024 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181435013 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163947985 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128510498 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144433632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128411056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190546326 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.106908737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16540523 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154884396 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125559496 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195786804 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225020966 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17095788 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130862445 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207398053 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074857606 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078984271 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.120076636 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163980934 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114079072 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088478736 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176215742 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189961509 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163759712 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200156575 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117063505 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157880845 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.222056121 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075300285 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147245421 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215408259 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160787475 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.136556893 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116803636 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130066383 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185223264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136985023 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259238628 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150003755 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159293826 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217547777 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140458003 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085899368 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136165825 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175198257 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137692559 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219540082 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132168523 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094442913 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144174123 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110242406 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13759178 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165285807 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153877837 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199220318 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12588732 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19336859 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080776547 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151237019 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183354905 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157102263 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067867827 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154334513 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234259281 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1259823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153865764 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198582029 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110174925 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1554406 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252459537 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187271551 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11539353 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143041103 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158047086 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166697222 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154061209 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176498411 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142731492 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194542361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117896533 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115690754 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118725017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105385923 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140202234 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.128131241 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147336321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151296807 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125649496 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168061423 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145563481 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144473481 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152429402 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127839995 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097281427 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128022779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247166455 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156454503 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246751013 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105665186 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.21670046 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239076521 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079518083 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109910714 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084262139 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203904522 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089632424 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19600515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.102051827 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136963097 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163308123 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182316257 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126500889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097329325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117790401 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197289724 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143666618 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105088354 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137910655 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232267303 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136231329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082962612 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159845384 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135835596 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134781689 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24729667 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064999045 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128907566 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080527899 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11122607 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167557084 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224094245 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08705384 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158162034 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15252337 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157514182 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165613969 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131299723 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128352642 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143544856 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187451664 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165237281 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.120820633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148162325 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167380473 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225845281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13918424 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128272214 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213504887 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221795217 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.236178501 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093444567 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15033869 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148474419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144759855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206265353 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088718887 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236128653 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11283156 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174189782 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134866514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125120419 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164222765 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127521846 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120572409 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206545077 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154190691 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113024199 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084558034 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147230383 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180393349 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110455884 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103328466 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177207242 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.102255388 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17344506 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23723967 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086742274 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139526236 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127951627 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087022218 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140386939 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136072093 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118241669 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.125841565 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237951007 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122011022 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21874255 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179971359 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148991817 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202579304 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132982718 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66912753 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083327958 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223616642 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154081555 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253337272 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130658673 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155521725 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145201634 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157909159 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181867699 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137566931 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209829991 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169435675 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156811623 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109738066 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136581321 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145666239 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.094990714 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140960455 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148868731 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15045044 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13251488 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154948545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189697742 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.088437653 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125896568 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2021025 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153895092 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208939363 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179420107 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115590079 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15247329 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180492004 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110107653 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157993142 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224162684 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141618477 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132648427 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086773324 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139471046 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24166405 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077005511 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229001116 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160138512 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144439153 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147983289 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.182177128 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17340043 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140015535 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161796562 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128632013 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146487872 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150790982 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089421009 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108054654 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139002092 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148302949 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.131836764 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110454056 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.147151209 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21806708 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076980536 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127270417 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109324418 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210421057 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251332655 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095425009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113240512 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15382347 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147589004 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150898695 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15976096 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112152996 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088917409 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112781763 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118786415 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139610522 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150702491 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13520269 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144882501 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236899381 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089659063 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257784231 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126307652 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142613551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07351803 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.109933882 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102940633 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12711352 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138632543 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129207211 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216736288 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127967129 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121666351 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124757972 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077990075 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11379497 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168219915 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144893727 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158198011 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128435453 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067340724 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14213804 seconds)
  done (took 74.523037117 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.136615135 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105579907 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121845956 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177351744 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151052253 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244888442 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184252984 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.229019978 seconds)
  done (took 2.383611055 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071801315 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.1204406 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106255339 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118953214 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09194038 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072222696 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.309232748 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113978447 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091783817 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094492972 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123857172 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09330587 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.484580598 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069633579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096316966 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088646726 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070175402 seconds)
  done (took 3.240839725 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.448418968 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.631298432 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452621435 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102075839 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.869505228 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110178201 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.266300406 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.162498448 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092555158 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.420357964 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.72844087 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154610292 seconds)
  done (took 17.472990504 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077682023 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072118568 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113991533 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087523892 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101756086 seconds)
  done (took 1.485507368 seconds)
done (took 117.534869501 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083050363 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382234942 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056688081 seconds)
  done (took 1.504311215 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086782889 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089892765 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115217108 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087397367 seconds)
  done (took 1.420543375 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077903045 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079292485 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114309542 seconds)
  done (took 1.309360067 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.298931909 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171787137 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092745158 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085977016 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081168683 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.107696941 seconds)
  done (took 1.314774963 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076549851 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078525103 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102182754 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080399182 seconds)
  done (took 1.368978654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079162383 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054935087 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057974736 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084725509 seconds)
  done (took 1.314138 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094400981 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109442726 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085730112 seconds)
  done (took 1.32497475 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11268501 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116180076 seconds)
  done (took 1.26785218 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085214105 seconds)
  done (took 1.120726034 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096556087 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14660826 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167974921 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143404922 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177966834 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14372647 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118561857 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092541991 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108238623 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121589096 seconds)
  done (took 2.357935714 seconds)
done (took 15.978015808 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082188632 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392269026 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364667652 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121788812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674111184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385827948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.022213893 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12273112 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112921389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097113401 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087882376 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682001102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976855089 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352752635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961729258 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326550818 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678545763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070974003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097150141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07207744 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005174787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095811636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071762971 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096825074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652071591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374838004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097347602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326257232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097262739 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072680302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358836104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097353629 seconds)
  done (took 16.058949848 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074632082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148617892 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077902573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08800416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100224792 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073515571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101079571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072958588 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151709292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071134638 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115732886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070538593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102606509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072787444 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091337995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098307043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07186731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097190623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071163958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072342512 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116526363 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070519883 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097481326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072788263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07093662 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109978718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072384321 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.097175963 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072386682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074711391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100492652 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072464636 seconds)
  done (took 3.891666187 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117968231 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157375375 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07831086 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132691587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14449423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073689351 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174442328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097800969 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155957997 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072310865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114546235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071627393 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.130902825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072958747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118391158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071921733 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098979804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07212451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072360075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097616745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091810144 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.097106901 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072821289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072390712 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097812457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085523146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097811996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075121055 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097082958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074106127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074846259 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098221501 seconds)
  done (took 4.209097021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076055447 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079086342 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114010802 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.0875722 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09955497 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076556167 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077666123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100422632 seconds)
  done (took 1.752604303 seconds)
done (took 26.946809052 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081583504 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07396329 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103418728 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085330813 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102268774 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082672051 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071306307 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104776563 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079062119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102009969 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079487244 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071041254 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101205655 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07175314 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078834755 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09819575 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082939056 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102019876 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083981022 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109980244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074329923 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080156298 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104268226 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084198879 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109784988 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083473988 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110820535 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076930833 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073129688 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100366938 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082107434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115418066 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072147728 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.109188587 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071452669 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071971257 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.097265018 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071460936 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.111081369 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078761352 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074515944 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.105469649 seconds)
  done (took 4.761170726 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094017482 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097809374 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116917174 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065245531 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098802312 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065622085 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.120780378 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063873977 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065862368 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.120453622 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059346533 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060406353 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088864239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058185522 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060710531 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059699872 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090754697 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05952388 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061313169 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087894733 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063027482 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056770346 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.090387892 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062911644 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060066096 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065699693 seconds)
  done (took 3.046362129 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078162623 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086863075 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.117800495 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132616023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136371482 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079506225 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107553113 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090408381 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115858675 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070746953 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101556573 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100962751 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090741986 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104380109 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070645913 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114466382 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085431193 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072983443 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103596067 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093723648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114533734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082088073 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120057677 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083756829 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071079113 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099905972 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074507858 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110869746 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.077244106 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080993347 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101392215 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075393979 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099517753 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.08375029 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.102251294 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072956482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091901123 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10772421 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080705701 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099381762 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074303073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072358718 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118654629 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117366241 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098194391 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078741451 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.105619262 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081542468 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.105103 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089117996 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080733923 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09780014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075432281 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070447698 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.097595714 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085288667 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099417969 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07443039 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080872881 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100223918 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084040297 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101904698 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087115223 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071972604 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105558529 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069748521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.098009247 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070552965 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094135609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099180626 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112364193 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099068475 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071654999 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.107641532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079319605 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078344766 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.098083169 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086164156 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107913256 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074622621 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10703075 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074577054 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073875856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117124392 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073306977 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073046542 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.099361618 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078248823 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101057053 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073355482 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086113035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.098519937 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074950735 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116339304 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071221349 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07210582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10417198 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076391009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097998764 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084709928 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.102821793 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072139248 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080416847 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.097219347 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074174731 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.107319299 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076598864 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070730161 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103350277 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076934985 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097963305 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071845298 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073232085 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100653946 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080881625 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077377462 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102646927 seconds)
  done (took 11.66709877 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.204078017 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192433744 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074204384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185439915 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.084664933 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110521288 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186637651 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104399767 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.099154322 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070925801 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09963784 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110221786 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1337869 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145129996 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082625363 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07082577 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116702453 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140514631 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.190544276 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155089532 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.119330247 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079850652 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100318255 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0730585 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.100843863 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082227548 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.117531585 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083439091 seconds)
  done (took 4.381164732 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086834107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131150307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076683503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.119885198 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095632199 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098471748 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076611003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073954838 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112456043 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084315811 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097904162 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077983915 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.106056248 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080354792 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072160162 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107166505 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080780786 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099962747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074581545 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075761683 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10554267 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084910937 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.102924447 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069995667 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078873227 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097511119 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06889933 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117240922 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072199395 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120991349 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069269221 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104918836 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082655209 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073165561 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097732784 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073820756 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10176024 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073896427 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074018606 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097978075 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070884497 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061429921 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.098137133 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085072532 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104860489 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062879277 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077681322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104865852 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078052221 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096305581 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074795057 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074402059 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.101940596 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078668353 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076758036 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103859744 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074737166 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.098490232 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078418767 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073540742 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.094847548 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070466955 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076110079 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098189002 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080106051 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103769899 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070955788 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073465023 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102626735 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077797589 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.100559677 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073955086 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069678013 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.101355087 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076192144 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076069737 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.101592099 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071059162 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.098297528 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071841776 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057964801 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.098141063 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057143592 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074411669 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096814753 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070222412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073163123 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107636593 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085375299 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.099797758 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078345756 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.099097495 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071713353 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074492929 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.092961857 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074847587 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112781838 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088674893 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098114668 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069618548 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086158413 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104341408 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071489428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060091345 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105940607 seconds)
  done (took 10.144610497 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09676477 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124199273 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073746692 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085431487 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126828741 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095535389 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106844834 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077546249 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074244103 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116376755 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071989039 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106731529 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074625772 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080105058 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.123738004 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079908247 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101769668 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081174313 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106477828 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.1087558 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085529378 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112925744 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082264872 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.099081028 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075982039 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110336502 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099752493 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.08203292 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107980076 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084971657 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109866858 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099579649 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114690442 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07620994 seconds)
  done (took 4.324735273 seconds)
done (took 39.364540448 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.140564192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.32958074 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.118428472 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.969147974 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.167446161 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.135160292 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.133811947 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.121062462 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.622515167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.124207692 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.342401297 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.66614447 seconds)
done (took 58.93632608 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.140809826 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.257827342 seconds)
    (2/2) benchmarking "String"...
    done (took 1.390556432 seconds)
  done (took 3.712296061 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.506707147 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.067645302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.406352129 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.118796166 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.122376505 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.577692097 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.633538256 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.913169741 seconds)
  done (took 26.904482815 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.121934024 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.458699888 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.296285473 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.284576503 seconds)
  done (took 17.227408542 seconds)
done (took 57.557619752 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.112310932 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.139111174 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.131082034 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.110102254 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.2200652 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.148638692 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.519053656 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.125272544 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.122015258 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.119863538 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.136545397 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.116916104 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.124668965 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.475786543 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.122400231 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.118489555 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.201200664 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.588105754 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.473965844 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.122899588 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.133840501 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.159369412 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.133976001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.12171586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.158371912 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.122517527 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.122899584 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.123618805 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.046820241 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.123026515 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.185419169 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.648295591 seconds)
  done (took 187.371893216 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.113581282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.034298284 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.170491268 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.175191852 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.378192137 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.318494851 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.254132943 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.538144077 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.129330285 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.147544526 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.343765418 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.116041642 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.381525158 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.095370762 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.126648997 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.230514315 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.329844579 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.407623007 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.128648311 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.388886408 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.135092827 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.205000943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.129436024 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.327529828 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.151156007 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.22717349 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.124373601 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.144218591 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.309207312 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.275563096 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.127098485 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.132490816 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.634407724 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.974764224 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.130795867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.122906822 seconds)
  done (took 146.019272093 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.374002315 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.114471643 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.114035127 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.115740643 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.141517851 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.115046608 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.58026705 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.579202111 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.608412475 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.5778654 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.173704875 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.290892708 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.117021103 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.202422742 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.125667304 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.114516013 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.129217851 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.139165246 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.116333447 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.11441561 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.575261818 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.129069381 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.163233609 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.119154294 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.113176367 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.139087464 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.502150081 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.114210152 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.139414992 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.414407733 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.150997025 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.113643318 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.336066852 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.112786472 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219763107 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.115339516 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.137405531 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.114066012 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.370197162 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.112562847 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.115867101 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.116797267 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.635102141 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.116505211 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.563047299 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.113007277 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.949855484 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.116637986 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.114438465 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.33154967 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.443634648 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.115757235 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.111640507 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.11438735 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.11292208 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.112589124 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.138616133 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.2973895 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.20593579 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.113100221 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.116015898 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.138444611 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.113424756 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.120497396 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.113615047 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.307316488 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.171767918 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337482918 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.560400205 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.116641869 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.114073294 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201036964 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.225958158 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.114070845 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.114117662 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.113691659 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.113546005 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.214084266 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.114197662 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.114179495 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.454374624 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.120234223 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.114795069 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.169988146 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.20280343 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.112846589 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.330434675 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.116921129 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.115108209 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.725441362 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.201681661 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.113690193 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.114168779 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.113421521 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.456369043 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.561409936 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.211697009 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.118220852 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.114947517 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.361049325 seconds)
    (100/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.117716944 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.114393519 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.467410377 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.554359818 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.628973671 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.118715921 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.216987189 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.118528843 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.116085651 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.11603537 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.143659384 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.114604589 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.167630515 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.118062937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.506081382 seconds)
  done (took 332.651538217 seconds)
done (took 668.480620933 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.789819522 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.747547506 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.863029972 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.762454443 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.740745982 seconds)
  done (took 9.965221669 seconds)
done (took 11.025742232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.278178267 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.276323378 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.165911035 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.277279123 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.141323615 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.292253126 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.258560536 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.135882097 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.205716225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.179071317 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.205725623 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.158455935 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.140493724 seconds)
  done (took 16.776343765 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.405873559 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408347164 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.182417123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412388879 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.159636431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405787998 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.305099902 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.306415222 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30093247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.133586706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.131626258 seconds)
  done (took 15.214696141 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.420387303 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408553396 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.18491684 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411906202 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.159655209 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414817925 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.31491028 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.324286526 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302817807 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.134831639 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.131334498 seconds)
  done (took 15.270560772 seconds)
done (took 48.323110365 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.127580193 seconds)
  done (took 2.189964524 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.158338666 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.318102839 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.139920521 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.132993056 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.128006179 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.130168475 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.132150152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.127779801 seconds)
  done (took 10.331009087 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.12477911 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.124391746 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.124338614 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.127785645 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.12702165 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.123927782 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.125027345 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.123403681 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.124277008 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.128227704 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.127781295 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.127877729 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.12795593 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.12749907 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.125102984 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.127251102 seconds)
  done (took 19.081207238 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.12708031 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.125326722 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.125765482 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.126094411 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.12586148 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.125681334 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.12676819 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.124758431 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.124986069 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.125283769 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.125782456 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.126012177 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.125815266 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.125866356 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.126164957 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.126959523 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.125601638 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.125217271 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.130493406 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.1259089 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.125587648 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.125330343 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.127273177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.125293491 seconds)
  done (took 28.090429038 seconds)
done (took 60.755032525 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.923399176 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.488613334 seconds)
  done (took 8.476160118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.129209378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.128783989 seconds)
  done (took 3.324368358 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.129799898 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.129560203 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.127751416 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.129567234 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.129552603 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.128909989 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.128705046 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.127951288 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.129328095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.128350323 seconds)
  done (took 12.354723314 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.127714444 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.128625426 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.127461343 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.129502055 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.128656411 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.127162602 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.129681145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.128314942 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.129620323 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.12716844 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.128527912 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.126984073 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.129284691 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.125758807 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.127209369 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.126066426 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.125542503 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.127383111 seconds)
  done (took 21.368061036 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.128422007 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.130113094 seconds)
  done (took 3.322686312 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.125573276 seconds)
    (2/7) benchmarking "second"...
    done (took 1.12679748 seconds)
    (3/7) benchmarking "month"...
    done (took 1.126727869 seconds)
    (4/7) benchmarking "year"...
    done (took 1.126458281 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.126966203 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.125366731 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.126226717 seconds)
  done (took 8.9489982 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.130477238 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.306572809 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.380672505 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.760096248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.13111912 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.133245372 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.036736337 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.135355163 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.13842443 seconds)
  done (took 13.21793601 seconds)
done (took 72.076308776 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.082303162 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.122989594 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.909398165 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.129834186 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.143633736 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.467812745 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.125701958 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.238873159 seconds)
done (took 36.287782561 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.136784304 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.827838482 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.825558772 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.123185661 seconds)
  done (took 10.846458189 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.120253525 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.951192361 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.112623256 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.038714565 seconds)
  done (took 17.290355683 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.664954599 seconds)
    (2/2) benchmarking "read"...
    done (took 1.456213485 seconds)
  done (took 4.183137702 seconds)
done (took 39.52512821 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.124542907 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.125385193 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.123936858 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.122008638 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.122171484 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.12428406 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.125565289 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.117603801 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.119622996 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.118941609 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.11984043 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.116224515 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.119874466 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.118614722 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.117771346 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.118843755 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11764348 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.116171841 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.116115781 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.118448863 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.115867386 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.119507362 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.116027355 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.116298353 seconds)
  done (took 27.93430813 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.118478876 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.115589375 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.118524237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.11868394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.115575806 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.11761177 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.118227509 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.115738977 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.11856325 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.118393153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.115313626 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.115295441 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.118750468 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.116896833 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.118564442 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.115863329 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.119218528 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.116734758 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.118587627 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.11520769 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.118512189 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.117227576 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.117249657 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.119276298 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.116547475 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.116347623 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.120181022 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.117993728 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.118764736 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.116091688 seconds)
  done (took 34.580327143 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.122232739 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.124832966 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.119545154 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.119704949 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.119847151 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.119289417 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.120188874 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.120180208 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.119683596 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.119990089 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.120331232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.120582664 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.120080775 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.120681752 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.12015589 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.120508714 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.120386152 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.120523936 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.119876599 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.118864888 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.12086939 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.120503728 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.121155571 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.120932005 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.120786056 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.119819136 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.120364304 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.119891105 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.120773053 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.120753768 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.120009853 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.121306044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.12190058 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.120257729 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.120038036 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.121162616 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.124157619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.127328561 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.122138166 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.121670939 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.121360432 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.121375735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.121711125 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.120839563 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.121845488 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.121163626 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.121931015 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.122987985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.122040038 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.122725098 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.120124148 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.121083379 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.121000982 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.121954753 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.122191678 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.121918192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.122847159 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.121649315 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.12191757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.121955465 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.122735032 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.122733897 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.123089028 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.122174944 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.122747501 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.122651032 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.121124687 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.122170291 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.121809149 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.122590885 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.122957176 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.122993433 seconds)
  done (took 81.79559115 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.12350724 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.120741272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.119767353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.121244837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.120586087 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.121949785 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.120418512 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.122938543 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120565305 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.123286274 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123159421 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.121528242 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120558905 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.124216694 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.122689402 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.119944756 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.124678262 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.120782774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.123144491 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.125114949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.123335261 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.12134013 seconds)
  done (took 25.744911264 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.123479928 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123787628 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.121624896 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.124637071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.121466093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.124267277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.123720313 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.124256696 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.124598794 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.122087439 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121688453 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124253188 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.121873318 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121477314 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.12279118 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.122489966 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.124783014 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.122605107 seconds)
  done (took 21.276639697 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.121638956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.122198992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.124043425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.122627047 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.122908728 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.124769559 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.122631024 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.125026192 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.123879133 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.122872744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.125808142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125122491 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.125855692 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122869625 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124584696 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.122795292 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.125729503 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.122789598 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.126364874 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.123537431 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.122366488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.125944971 seconds)
  done (took 25.787272156 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.126330196 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.125462719 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.123455654 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.12322692 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.122880061 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.126058289 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.125446878 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.12262777 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.125782198 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.125567403 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12295032 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.126877551 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.123552076 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.12462029 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.123894304 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.123482784 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.125910709 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.124062524 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.12724785 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.124102914 seconds)
  done (took 23.556273915 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.126254314 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.127582662 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.127763062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.127128901 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.128302969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.128275874 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.128369705 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.128542838 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.128626421 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.127954482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.12764601 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.129037752 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.12868604 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.128151946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.128884521 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.127962501 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.128305355 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.128017028 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.128451965 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.128874139 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.12968239 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.128945113 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.128020657 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.128299234 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.128775711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.129347098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.129410959 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.129209212 seconds)
  done (took 32.657295161 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.12763458 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.128202386 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.126183446 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.126247189 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.126166143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.125556825 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.125850437 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.126092426 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.128905765 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.126127412 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.128110851 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.12948904 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.128695529 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.12838043 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.130128269 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.127997606 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.129669289 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.126671108 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.12599209 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.125567704 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.129654195 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.129430463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.128526906 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.126758229 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126330687 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.129489303 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.12766282 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.127436727 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.12892195 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.126707401 seconds)
  done (took 34.893240602 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.14838533 seconds)
    (2/2) benchmarking "in"...
    done (took 1.148053585 seconds)
  done (took 3.361757145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.127152198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.129801299 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.129903581 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.127858793 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.128268275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.130158506 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.130926875 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.126989337 seconds)
  done (took 10.096742543 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.129229375 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.128794149 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.129860718 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.130707244 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.130735001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.129289141 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.133935162 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.145348438 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.130348286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.131657901 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.135417049 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.135316087 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.132852224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.129755779 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.130356122 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.132089906 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.131220303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.131756892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.132517784 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.131681473 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.131898682 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.132444373 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.134022475 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.129386853 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.131716291 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.140679085 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.136353759 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.131593068 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.131145778 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.134719721 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.131155557 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.129796192 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.132422533 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.13285259 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.133082348 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.132357382 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.139941604 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.146203427 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.136534266 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.132830234 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.133541442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.130151224 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.1331962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.132310932 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.133526399 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.133136507 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.132687585 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.130234711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.131828254 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.134390433 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.13594216 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.131989295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.130314516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.135776036 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.133680525 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.14029814 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.14781781 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.134476714 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.13929743 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.141903433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.144984178 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.139291258 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.134195188 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.134000578 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.141585323 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.151854714 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.140691108 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.14636055 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.13126856 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.135020636 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.140907944 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.144333002 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.140842871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.134055715 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.135893033 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.135091747 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.13373245 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.135388362 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.139217938 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.151418163 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.134100515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.136410695 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.142407631 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.151271257 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.133662807 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.135979575 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.136246676 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.135828994 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.135719167 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.144350782 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.150091174 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.137298361 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.133350267 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.1345474 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.136856276 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.13632585 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.132327827 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.135407075 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.133762308 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.136420367 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.136370985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.136926629 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.141283893 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.135357716 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.136372926 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.142165086 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.135145772 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.133604176 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.141040092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.136642013 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.135947991 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.136217248 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.140872958 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.133420283 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.136633344 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.141874933 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.136158404 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.135789803 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.135889537 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.136836451 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.142371563 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.156963106 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.136801227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.135916683 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.139286913 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.145386405 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.13763352 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.139524444 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.138270987 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.13444613 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.134408013 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.137286516 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.137890106 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.13658799 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.136838643 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.13825049 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.135148031 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.138259132 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.137822507 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.138048104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.137052347 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.137154502 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.137612578 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.139260081 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.138417777 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.137785531 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.142908081 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.137073628 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.138040735 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.138474549 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.135476442 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.137682087 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.137510443 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.138640461 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.137555102 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.138234836 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.136957882 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.138188072 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.139861708 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.138553603 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.138324437 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.138481944 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.140736443 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.13898194 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.141958328 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.137211457 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.136206216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.138778769 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.138845796 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.138890981 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.139534249 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.136907356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.139732514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.14557244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.13948617 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.139403127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.140534247 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.138630678 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.139780627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.140446606 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.139923766 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.143905791 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.139388766 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.145817833 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.140477337 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.140121833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.139684213 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.139053247 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.138655887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.139550871 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.140809594 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.145876872 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.149903736 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.146096375 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.139751148 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.142765435 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.139560433 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.143038442 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.142953023 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.140266547 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.140431733 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.140329047 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.138580564 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.140178172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.139943617 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.140017296 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.139232132 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.14030445 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.140702958 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.140804247 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.141486694 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.141124432 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.141373121 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.138124283 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.141569405 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.139954549 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.139194293 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.138022507 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.139716406 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.140550912 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.140715919 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.14164657 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.145567853 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.139446527 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.142272241 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.14150417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.139340271 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.139962724 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.142330035 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.142060758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.139964966 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.147650388 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.156105667 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.141666388 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.147377983 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.155149841 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.140084488 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.144287368 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.142702111 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.140265383 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.144293122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.148277202 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.142261377 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.143370473 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.143189668 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.141780274 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.142769749 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.147133172 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.140607454 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.141586932 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.144285748 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.143779524 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.14110558 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.143193138 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.143062298 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.141874439 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.145285245 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.143710664 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.143112106 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.144273112 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.144278347 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.144067496 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.143457277 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.145514395 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.149305212 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.148339674 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.143066068 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.145173629 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.144142916 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.146950469 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.144288169 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.14243511 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.142338691 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154360524 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.150937312 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.150688353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.144273194 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.143190575 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.14868239 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.144754165 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.145443846 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.143561913 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.142735566 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.143613475 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.142322238 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.141954395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.143303211 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.145166986 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.144954368 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.144653067 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.148242811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.144964925 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.143678219 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.145543276 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.144738646 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.146744821 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.142820964 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.145349122 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.14563665 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.14530663 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.143772935 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.144545943 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.150729536 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.159248584 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.145740956 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.144127021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.144457369 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.143544253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.146424658 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.145985194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.148618592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.151681237 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.146927166 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.152740834 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.146608331 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.153140401 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.146184261 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.148013783 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.152086748 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.144186915 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.144433469 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.146007886 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.146595069 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.153611475 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.161817312 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.146486702 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.14994221 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.147106517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.147363732 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.146767077 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.146913715 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.146176084 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.147338122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.153800816 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.160656179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.148764351 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.147696048 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.144141348 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.147842134 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.147127929 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.14560295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.150156282 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.147120968 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.147191888 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.145753618 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.146510686 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.147918471 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.148575218 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.149425315 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.145352395 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.147687793 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.152385062 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.161047489 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.15080586 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.14842177 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.154590151 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.14853906 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.153764469 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.162949818 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.148547931 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.148431209 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.149685261 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.148838885 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.147061438 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.148404623 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.147552065 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.148807652 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.152227553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.147694427 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.149543444 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.148172444 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.149633517 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.147194317 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.156325522 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167743824 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.149414041 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.151162064 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.146411638 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.14927241 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.150959426 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.148617268 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.147785039 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.15060368 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.156048415 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.155494719 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.148221091 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.149826693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.148622428 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.149722652 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.149505884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.150169185 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.149881703 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.149103554 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.148933792 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.148909463 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.151941904 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.150053364 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.14944978 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.148795914 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.149700569 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.158822591 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.150005717 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.150304177 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.14926033 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.150138581 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.149323697 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.149365718 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.149941657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.150058631 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.151145905 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.150590899 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.15476882 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.154321451 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.151837184 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.14885676 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.150207097 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.149778555 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.149536786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.151828694 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.15115261 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.151478285 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.151122377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.150653001 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.15101173 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.148804771 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.152027111 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.150842046 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.15114111 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.152500174 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.154558324 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.150589424 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.148456959 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.152367764 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.152146764 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.149335116 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.150913936 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.158320943 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.153167683 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.158971353 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.157650122 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.154179939 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.150411122 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.152913347 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.15721747 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.150372815 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.151998351 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.15220482 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.15310643 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.151805828 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.15406704 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.152715332 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.157013862 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.152120486 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.151135012 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159233308 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.166410006 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153444447 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.152537749 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.154691275 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.151303413 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.149594687 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.153438598 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.151689316 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.157452279 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.167944011 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.152887822 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.154390124 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.15053921 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.152998935 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.156680056 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.15254966 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.153191035 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.151333007 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.152921521 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.153749238 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.153358841 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.150867296 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.152168658 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.152125402 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.155050362 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.158186922 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.152385834 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.154004403 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.151648399 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.154008168 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.154535109 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.154144999 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.150375257 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.150099442 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.152899024 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.154008697 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.153707912 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.155026486 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.152975109 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.154108825 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.154196759 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.154797616 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.155371738 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.160657993 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.159347278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.153329626 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.153138276 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.153963176 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.157317006 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.155436961 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.155426854 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.154415242 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.155096187 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.155245466 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.154514337 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.155945466 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.155913439 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.167682684 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.163799165 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147681916 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.147923807 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.149884202 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.149878031 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.14735184 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.150142562 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.15148562 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.150667944 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.153845223 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.148826963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.154618255 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162138966 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.149102499 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.151394614 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.150947784 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.154187189 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.151462994 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.148846136 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.1493226 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.152637577 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.162014383 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.149084964 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.156619405 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.174130201 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.16341886 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.148551058 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.149595078 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.148190693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.149285413 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.150944194 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.149411451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.149480176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.149470253 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.149445978 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.149681683 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.154310353 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.151396389 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.149491698 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.149614125 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.1479856 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.150003315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.14702997 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.150800289 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.150438684 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.1494791 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.149884066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.150261292 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.149662492 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.160086585 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.157104094 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.151419896 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.150703181 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.148880354 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.151547966 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.151697912 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.158839543 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.15600611 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.150796132 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.150426616 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.15088831 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.151598613 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.148076279 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.152051731 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.149073144 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.14946463 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.148781475 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.160695819 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.15846701 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.148177425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.144349503 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.143715805 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.14462511 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.144409771 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.144772487 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.144347504 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.145053225 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.141003516 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.140347093 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.137538114 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.138319162 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.139267508 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.144250527 seconds)
  done (took 683.688212177 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.135262069 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.135512851 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.135564669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.132522627 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.133059077 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.132329626 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.132671412 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.132597391 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.132317886 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.132731579 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.133339562 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.132678563 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.132903811 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.13281477 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.13245503 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.132912647 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.133654112 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.132283293 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.132786429 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.13287514 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.132494994 seconds)
  done (took 24.869869189 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.135716497 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.132386531 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.133571434 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.136318327 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133087817 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.135865168 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.134291521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.136371099 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.135935166 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133897683 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.135931215 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135893291 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.133593251 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.134680775 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.133723094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.13791716 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.136587641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133658805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.136428265 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.133750761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.137012785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.134831392 seconds)
  done (took 26.044002638 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.136773238 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.138247901 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.136084902 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.135022927 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.136824048 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.134127021 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.136694543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.136898723 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.137000176 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.136461861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.136579131 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.137571841 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.142355258 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.140776266 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.13819095 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.136968924 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.281124916 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.137737699 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.139069211 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.136817568 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.13451955 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.142162458 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.136002569 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.1354665 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.135710335 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.137314655 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.137133847 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.137454438 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.137872921 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.137888258 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.140902222 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.137018414 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.137610717 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.139217635 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.135975687 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.137435697 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.140862203 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.137349906 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.134668898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.138645365 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.147570046 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.154759452 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.138281794 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.143905098 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.139320039 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.139233433 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.141148038 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.144400637 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.137198301 seconds)
  done (took 57.001927958 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.138791041 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.138835229 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.136553814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.139531264 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.139123293 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.140549821 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.139009567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.138892655 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.137013142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.137355468 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.139978092 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.138268683 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.136637564 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.139608345 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.14030073 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.138225058 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.136416418 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.137951473 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.137720925 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.136848336 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.137362684 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.141446155 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.140972395 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.138098162 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.1409369 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.138438879 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.13941926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.141314776 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.138122133 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.139618123 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.140407255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.141342213 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.140648175 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.139517993 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.138551321 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.140842023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.140984032 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.137608665 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.141271496 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.13886843 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.141497202 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.141659208 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.140749574 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.141190083 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.137859839 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.138388765 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.138385263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.138145791 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.138843857 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.141199761 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.141289013 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.139390169 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.141776276 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.139275413 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.141369076 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.142691549 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.138783419 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.137853646 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.14105967 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.140361479 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.138700997 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.141616391 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.139575215 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.141364013 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.141957806 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.139520141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.139792217 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.141799393 seconds)
  done (took 78.56613324 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.141703306 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.143317289 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.141902566 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.141926186 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.142953843 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.141770632 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.143406257 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.143442369 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.143631634 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.14273797 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.142469091 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.142857485 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.141590129 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.142693523 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.14305078 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.143706599 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.142264722 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.143087535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.142511146 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.143944329 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.143041767 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.143119444 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.143822528 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.141086405 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.140894112 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.140222421 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.14061354 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.141615394 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.1401092 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.139681899 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.140782635 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.141191614 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.134487977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.134296426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.134829532 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.13281378 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.133832302 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.134411199 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.133734562 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.13403661 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.134255703 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.128284825 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.128653737 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.128693049 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.128824462 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.128579421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.127509835 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.128864404 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.127932153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.128390314 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.124812645 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.124222201 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.12401638 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.125034061 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.122676481 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.125961011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.125210729 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.125106991 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.12316958 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.122813818 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.123093056 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.123089039 seconds)
  done (took 71.481170266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.122591053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123475884 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.120394987 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.121386599 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.124043717 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.121036979 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.123217237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.122931562 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.123210908 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.123602678 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123187589 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.120960651 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120768545 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.123551735 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.120382786 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120209917 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.121092152 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.12069627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.123815023 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.120698744 seconds)
  done (took 23.500324962 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.122018641 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.124243434 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.120959947 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.122038228 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.12369799 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.121340529 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.1232748 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.12503851 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.121110875 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124925272 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.124014933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.124201265 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121925658 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.122311722 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.12413126 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.12211271 seconds)
  done (took 19.0267948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.121394079 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.125281598 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.123667869 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.125053389 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.1221871 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.123013924 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.124684253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.122551908 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.122829595 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.12689934 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.125690173 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.125237992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.126819022 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.125091302 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.123390168 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.125358405 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.123490487 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.123321165 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.126001796 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.127206891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.123429968 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.123436444 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.125704047 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.125887493 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.122924615 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.123874866 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.124324285 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.122720689 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.123483341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.126663316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.12326942 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.124234396 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.123097175 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.124652953 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.126140461 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.124281842 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.127680932 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.125708042 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.126404274 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.127271115 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.12700909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.123319985 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.127571596 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.126866059 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.124154353 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.126978003 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.12428272 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.124806152 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.124299792 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.124602181 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.127030142 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.126468711 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.127885231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.127516401 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.127506905 seconds)
  done (took 62.936652118 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.127962732 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.127836042 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.125660353 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.126730088 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.126802879 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.125294271 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.128004215 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.125455153 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.125297031 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.128072427 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.126323992 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.127707211 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.125822664 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.128766257 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.126859621 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.127995127 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.125305056 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.12537621 seconds)
  done (took 21.344887118 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.125451636 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.126106619 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.128656001 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.126268821 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.125996646 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.129125542 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.125986372 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.128829251 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.128799933 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.126508006 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.126165 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.128782843 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.129681848 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.129794112 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.126580556 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126902303 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.128850554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.130243897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.126464236 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.126134527 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.129537358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.129376158 seconds)
  done (took 25.875526336 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.127840176 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.128809082 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.143114384 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.163859627 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.154131376 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.129066555 seconds)
  done (took 7.911758882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127077702 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129055205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.126679765 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130682948 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.129913133 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127053364 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.12784541 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127318048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129654964 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127819387 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127575474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130523565 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130682672 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128153029 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13072466 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130720016 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127715568 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126979361 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12810822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13040291 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127502697 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130404477 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127576395 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128366828 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128001941 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127919431 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130269868 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.127138468 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128315855 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13126783 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131127349 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128133633 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129867501 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128638855 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131476258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130323759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128576726 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131029825 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130743991 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129473311 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.131334598 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131046537 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.13083268 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129143148 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131038075 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129296364 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128719233 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129347753 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128373945 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132106677 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131970448 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128912925 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13215796 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131958007 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131709245 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131106896 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.130483057 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129722945 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131663521 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129188771 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129896957 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132783299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130104998 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130683964 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131854287 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130297689 seconds)
  done (took 75.622907777 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.130080286 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.130899576 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129741819 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131861374 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13015061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130789352 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130873827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.131992462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129770289 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131252671 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.134157028 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130718853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130752385 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130494213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131374006 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13025871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129758431 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.13103816 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131013132 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13443575 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131533189 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130739466 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131588959 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131865002 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131818289 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134016296 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131208292 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131056864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13181054 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131514521 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13209729 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132134737 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132667176 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.131112405 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131892541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132060466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.13200247 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132644737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131693329 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134074801 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13129681 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134803562 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131946116 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132489459 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132323501 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131536581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132122325 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131702076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132903867 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133281349 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.133155849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.133549647 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.133079423 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132261484 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132420037 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.133025133 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132639017 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132925457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133215828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135336369 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.133045815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13311869 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.136191829 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132987559 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13304704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.13322512 seconds)
  done (took 75.788681981 seconds)
done (took 1576.405713118 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.123153834 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.144194187 seconds)
  done (took 13.337769613 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.295097439 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.249317868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.134371197 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.157861441 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.133182824 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.15388563 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.152237319 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.135000841 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.134910078 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.135284068 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.135262154 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.322688174 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.132203652 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.135701757 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.134417519 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.230844963 seconds)
  done (took 39.84436426 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.158718059 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.142330039 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.237234458 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.16423508 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.169771917 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.308155925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.197558682 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.150768763 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.293596335 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.184425058 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.511206252 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.172901398 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.14966144 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.120778793 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.166302052 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.308371087 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.361875942 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.522987224 seconds)
  done (took 26.39322963 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.52296802 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.169800784 seconds)
  done (took 8.776439555 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.152617057 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.161353687 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.185021117 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.153210476 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.175072094 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.184947781 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.161008296 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.162535675 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.170093084 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.16861954 seconds)
  done (took 62.758128699 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.165246294 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.150422549 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.150675077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.14774042 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.140514115 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.155391612 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.14792471 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.144487914 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.219507003 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.255373923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.162841994 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.155379874 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.149494791 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.14947255 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.146823117 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.181812661 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.324106694 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.146851827 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.145353201 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.155138262 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.149835298 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.251364425 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.183516793 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.14988523 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.255153369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.225051379 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.155043154 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.155157667 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.312903776 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.147049683 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.14879802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.14944153 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.151903217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.697812245 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.602241093 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.168196444 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.171364472 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.159545461 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.147568527 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.281992555 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.150451027 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.15734186 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.151420601 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.592434669 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.300151344 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.249660357 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.194700211 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.152121232 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.151013234 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.213128621 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.154025026 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.152394468 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.178117213 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.86129083 seconds)
  done (took 99.802882546 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.167662474 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.62996364 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.310341704 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.163354987 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.963141408 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.89246982 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.144535823 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.386294381 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.156732299 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.143090389 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.411286468 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.606511753 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.150297446 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.195810941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.670835643 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.169791612 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.142921034 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.023848083 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.146757735 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.149310179 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.547473501 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.16013365 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.154617822 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.406488741 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.181189385 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.565240118 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.374795869 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.528984747 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.148011239 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.144425922 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.573142841 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.148853172 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.157496061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.147064302 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.397099068 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.457976484 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.433220895 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.1480547 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.155169044 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.14729844 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.16870955 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.561975858 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.446572463 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.146452364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.14625355 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.566563158 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.145854338 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.147262909 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.150393643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.347603907 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.905787609 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.146603076 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.388645261 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.149354682 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.406016099 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.226743806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.215939869 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.593397492 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.146345619 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.183237428 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.197638926 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.147334096 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.152989165 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.148316341 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.147143943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.450088462 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.529746281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.151640466 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.452431425 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.565676919 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.145871283 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.634355942 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.029083655 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.169651785 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.18799368 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.14881308 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.827709771 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.597255673 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.198771741 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.146743519 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.437805386 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.148245478 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.405484674 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.15903013 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.14753362 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.558426283 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.162476861 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.186264484 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.146985148 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.148988039 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.915023179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.148903323 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.393818861 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.192849983 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.148170228 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.147833532 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.154780023 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.152396801 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.147328429 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.149098692 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.634660542 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.154704398 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.252020702 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.166415243 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.148374599 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.150428921 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.148339085 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.147276834 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.365935336 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.734604315 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.150551246 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.147465816 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.148277625 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.157090409 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359049547 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.148030085 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.411538457 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.148677509 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.159960961 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.149416793 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.935679112 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.178254727 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.149869322 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.148797417 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.959544077 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.3532022 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.16320996 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.148677266 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.149084422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.161411768 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.335468733 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.149058544 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.204210064 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.15167235 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.815205856 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.160940381 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.171485356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.560298758 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.150973185 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.945186727 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.170839654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.150327136 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.442357339 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.404325599 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449887993 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.151006478 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.151166381 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.804721525 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.161488951 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.288121226 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.169100744 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.159584862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.34624613 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38463177 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.152387589 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.709233391 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.153298483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.363087819 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.152557888 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.456801162 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.600838377 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.152639954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.152706876 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816662337 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.787960029 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.957995096 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.152434724 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.407731316 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.111443392 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.592204435 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.152576857 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.151711963 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.722427581 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.15695298 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.156809606 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.1513165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.151084654 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.211234246 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.322714575 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.861645426 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.161317876 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.568480487 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.182106974 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.153151334 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.159097883 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.155143956 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.504748734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.228003479 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.152984608 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.187918661 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.153841503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.161015122 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.580794682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.066882316 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.155604057 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.302246127 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745342751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.152326047 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.154216868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.912171966 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.351725659 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.659037542 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.188862611 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.419035211 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.156887988 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.190956963 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.903449548 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.156243848 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.625397026 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.154677677 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.156052492 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.721569119 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.15302135 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.280542319 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.153196222 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.154365366 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.651254355 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.153631926 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.156739773 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.334381566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.152993399 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41094523 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.156039417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.160102816 seconds)
  done (took 1068.271176843 seconds)
done (took 1320.255306648 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.152813085 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.156829061 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.143978665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.155433354 seconds)
  done (took 25.704714804 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.164251203 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.161818417 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.16269929 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.161236257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.162463149 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.161598556 seconds)
  done (took 8.071663434 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.212454436 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.155853773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.1578005 seconds)
  done (took 18.623512389 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.348578069 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.295050034 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.480101202 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.089603988 seconds)
  done (took 9.309200495 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.162858141 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.162365616 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.162600147 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.164653135 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.165188987 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.16680454 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.165314924 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.165195463 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.166723366 seconds)
  done (took 11.578658588 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.657656471 seconds)
done (took 79.040516691 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.620893743 seconds)
    (2/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.223675865 seconds)
    (3/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.734964492 seconds)
    (4/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.747246179 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.307543223 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.164216229 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.195341736 seconds)
    (8/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.234926882 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.403803806 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.014765162 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.18955564 seconds)
    (12/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.193234643 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.478318429 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.213687821 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.197894857 seconds)
    (16/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.507129132 seconds)
    (17/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.279449575 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.571495468 seconds)
    (19/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.587446094 seconds)
    (20/309) benchmarking ("sort", Int8, false)...
    done (took 4.216947323 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.370521787 seconds)
    (22/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.311052934 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.857907175 seconds)
    (24/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.166926173 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.144287895 seconds)
    (26/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.859375603 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.173036615 seconds)
    (28/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.360561243 seconds)
    (29/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.506973733 seconds)
    (30/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.236595794 seconds)
    (31/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.183058935 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.189796263 seconds)
    (33/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.178508139 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.302951798 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.762002121 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.939245602 seconds)
    (37/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.311539642 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.278216604 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.782225536 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.836096703 seconds)
    (41/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.152046166 seconds)
    (42/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.537930306 seconds)
    (43/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.471297595 seconds)
    (44/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.25640691 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.162460867 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.191241975 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.138321074 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.181005957 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.953578766 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.685986553 seconds)
    (51/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.420148463 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.764014046 seconds)
    (53/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.158664023 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.173685323 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.21732042 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.290117054 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.160015229 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.433000245 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.5150582 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.55586553 seconds)
    (61/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.245679744 seconds)
    (62/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.271038528 seconds)
    (63/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.317715553 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.562709464 seconds)
    (65/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.270809083 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.20071867 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.655045559 seconds)
    (68/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.454738642 seconds)
    (69/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.275732537 seconds)
    (70/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.259501221 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.232264871 seconds)
    (72/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.299164273 seconds)
    (73/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.311291388 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.365379136 seconds)
    (75/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.187783445 seconds)
    (76/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.39407016 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.171171922 seconds)
    (78/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.178305519 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.489089789 seconds)
    (80/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.269065162 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.574391851 seconds)
    (82/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.511960116 seconds)
    (83/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.301856606 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.175011684 seconds)
    (85/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.162646031 seconds)
    (86/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.434008845 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.176253825 seconds)
    (88/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.401458473 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.225584933 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.667058885 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.408359956 seconds)
    (92/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.211449689 seconds)
    (93/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.644317042 seconds)
    (94/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.308680742 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.29833467 seconds)
    (96/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.330569124 seconds)
    (97/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.288431963 seconds)
    (98/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.977136378 seconds)
    (99/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.176319002 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.284707292 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.305005531 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.233289313 seconds)
    (103/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.240865081 seconds)
    (104/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.722830819 seconds)
    (105/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.376508683 seconds)
    (106/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.293646753 seconds)
    (107/309) benchmarking ("sort", Float64, false)...
    done (took 5.389284999 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.241612242 seconds)
    (109/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.489388298 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.509399536 seconds)
    (111/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.216634945 seconds)
    (112/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.357217722 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.464202454 seconds)
    (114/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.501591229 seconds)
    (115/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.202071637 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.290247311 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.868402763 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.140525978 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.519486227 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.596958922 seconds)
    (121/309) benchmarking ("sort", BigInt, false)...
    done (took 6.178008014 seconds)
    (122/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.391764112 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 1.99229718 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.502913227 seconds)
    (125/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.238861579 seconds)
    (126/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.177209094 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.195967118 seconds)
    (128/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.944657471 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.001871998 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.178636919 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.77788988 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.222880428 seconds)
    (133/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.754560509 seconds)
    (134/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.178468934 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.392605773 seconds)
    (136/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.354785757 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.202797882 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.191293128 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.300120737 seconds)
    (140/309) benchmarking ("sort", Bool, false)...
    done (took 1.681120349 seconds)
    (141/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.201239203 seconds)
    (142/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.170353271 seconds)
    (143/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.26659736 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.005452685 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.172954221 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.438279043 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.003095675 seconds)
    (148/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.289393473 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.597602723 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.843646437 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.197006487 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.457257441 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.980134319 seconds)
    (154/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.261195939 seconds)
    (155/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.167626796 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.193948621 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.3233577 seconds)
    (158/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.188782292 seconds)
    (159/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.859307048 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.377792921 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.14586031 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.218745429 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.865488322 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.207650977 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.407022256 seconds)
    (166/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.19102638 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.69762883 seconds)
    (168/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.165459434 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.292413793 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.68017067 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.2024018 seconds)
    (172/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.53740588 seconds)
    (173/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.674104006 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 5.15614417 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.452471806 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.166887946 seconds)
    (177/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.182795214 seconds)
    (178/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.279330058 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.165496749 seconds)
    (180/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.734737726 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.564987332 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.439940722 seconds)
    (183/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.332654159 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.950886534 seconds)
    (185/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.30403808 seconds)
    (186/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.173240589 seconds)
    (187/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.184904764 seconds)
    (188/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.812203796 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.253189527 seconds)
    (190/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.206481835 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.289264472 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.207892629 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.180910844 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.288639509 seconds)
    (195/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.680051634 seconds)
    (196/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.186398982 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.526556392 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.238181882 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.929541252 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.225371948 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.673082793 seconds)
    (202/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.194941339 seconds)
    (203/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.493499782 seconds)
    (204/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.19112464 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.01927036 seconds)
    (206/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.228997142 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.245172352 seconds)
    (208/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.855297309 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.884506985 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.172448006 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.257927464 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.209063013 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.629202709 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.168128611 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.821916763 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.415889401 seconds)
    (217/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.693837935 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.298038213 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.424622505 seconds)
    (220/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.16763838 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.562651635 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.396956308 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.640264709 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.684240818 seconds)
    (225/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.710764674 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.205829395 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.684868304 seconds)
    (228/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.212031188 seconds)
    (229/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.208482543 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.265554018 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.51591836 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.235431099 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.310415242 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.221637735 seconds)
    (235/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.169272122 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.195943379 seconds)
    (237/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.299735099 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.25882952 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.962483211 seconds)
    (240/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.446191716 seconds)
    (241/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.736239961 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.420869737 seconds)
    (243/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.180167021 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.857296798 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.192529143 seconds)
    (246/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.422998397 seconds)
    (247/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.290303496 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.940441099 seconds)
    (249/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.183972592 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.890253175 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.184084574 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.736342431 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.408572612 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.940854827 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.375350663 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.725334581 seconds)
    (257/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.402381276 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.211175151 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.221470757 seconds)
    (260/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.216533179 seconds)
    (261/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.194600077 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.384263237 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.574480457 seconds)
    (264/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.223461794 seconds)
    (265/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.202234345 seconds)
    (266/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.21742702 seconds)
    (267/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.738368691 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.185927413 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.554678935 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.469619768 seconds)
    (271/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.384860596 seconds)
    (272/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.270607012 seconds)
    (273/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.886872241 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.190496023 seconds)
    (275/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.268019211 seconds)
    (276/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.888162219 seconds)
    (277/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.942685551 seconds)
    (278/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.211742722 seconds)
    (279/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.732070452 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.213596255 seconds)
    (281/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.184444066 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.512792709 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.277345242 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.32525985 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.853198799 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.2683823 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.302256246 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.581012159 seconds)
    (289/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.864125044 seconds)
    (290/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.365872295 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.945922349 seconds)
    (292/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.170940001 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.965838619 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.228276257 seconds)
    (295/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.185680794 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.298409916 seconds)
    (297/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.185421897 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.187528028 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.619092721 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.209496731 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.212037748 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.308307779 seconds)
    (303/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.313283683 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.167965048 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.200499529 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.32395914 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.625038922 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.293297184 seconds)
    (309/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.61784953 seconds)
  done (took 858.66634275 seconds)
done (took 859.782612384 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.218438549 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.213292416 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.19776933 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.218709286 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.30998496 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.226369904 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.208511526 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.199555669 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.245111926 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.246841368 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.196973372 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.225116968 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.19953571 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.198680429 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.197993767 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.212062749 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.126096341 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.19871975 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.213747589 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.208293021 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.214758849 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.196756779 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.247910503 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.224616391 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.201604941 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.201045966 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.201482888 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.21801177 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.31053734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.201776682 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.201311136 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.209639274 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.126368152 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.19668519 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.193410405 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.218993772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.210312244 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.208759604 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.202507778 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.231005294 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.482617885 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.198588453 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.200469676 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.199848671 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.199202935 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.202866946 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.200863266 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.206185019 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.21268779 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.214066531 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.47087559 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.215187875 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.202891675 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.201356695 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.210324013 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.200012759 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.203535668 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216181719 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.219766225 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215156288 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.116884447 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.205373376 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.202465684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.216523596 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.207785874 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.510572441 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.195802769 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.205510905 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.4898641 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.206553711 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.511446007 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.209245267 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.202023796 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.213885228 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.233338094 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.133570175 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.196207589 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.200419954 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.208922979 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.200357694 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.211223606 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.214580534 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.20734267 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.201636111 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215531408 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.229950863 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.21235548 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.202830057 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.21054293 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.220851275 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.209581529 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.213361043 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.206211878 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.198678913 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.211161037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.205523913 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.204388035 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.204839871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.207494239 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.212204712 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.488400396 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.217986582 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.199356992 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.1992617 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.202072669 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.217071615 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.488299581 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.203437229 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.224678726 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.250360969 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.204537618 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.123547703 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.205566771 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.218867396 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.212181675 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.206284905 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.199331846 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123102608 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.478862294 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.21711704 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.205190552 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.202315461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218309495 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.205809142 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.200513058 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.13822153 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.204451547 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.217195941 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.324483414 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.215006842 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.234415193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.202090297 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.207809798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.232157337 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.219917495 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.235761539 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.206905265 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.219040009 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.222287829 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.201089054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.214836167 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.214556072 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.205748384 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.210026679 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.19841228 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.233208008 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217682208 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.217291245 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.22612362 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.325791714 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.203793334 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123972539 seconds)
done (took 203.13915395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.263812477 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.196186854 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.286667422 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.202702542 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.299909042 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.298605782 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.200147605 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.200638539 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.199460411 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.584542207 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.199764264 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.200191854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.198527665 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.199520015 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.285479484 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.202652821 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.199985982 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.546401971 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.203864748 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.272924556 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.198518073 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.200888439 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.20249311 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.583577113 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.194962436 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.20266639 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.273168427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.203614708 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.548906087 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.202283032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.197920357 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.549149619 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.292789972 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.219531921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.212664752 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.209682171 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.300935066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.217581674 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.285408956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.285036529 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.290180913 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.242351377 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.20168502 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.199128072 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.205116542 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.204443427 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.201207834 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.23194226 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.196323316 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.201890567 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.548351744 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.214449655 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.211505772 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.202945075 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.203378152 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.22440489 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.20280504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.206248552 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.294178005 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.205973288 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.266651598 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.586122827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.5872563 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.204551271 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.19949837 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.202356807 seconds)
  done (took 139.694410282 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.27107581 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.276372171 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.311439825 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.205783022 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.253354864 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.313636146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.205536771 seconds)
  done (took 9.975444614 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.211801326 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.206301004 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.256045883 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.254331801 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.206342905 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.355403315 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.206563867 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.216866074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.203589652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.258447746 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.207343701 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.206166298 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.213507999 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.205540593 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.254521645 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.218455781 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.320739248 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.207701257 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.207835438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357509684 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.203874113 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.213794041 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.257718341 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.218691354 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.209655499 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.213126103 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772029127 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.207516787 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.204748871 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.207362179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.205633 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.246210513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.208278148 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.20146992 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.206482287 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321801631 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.207222338 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.205211006 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.208346369 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.20158891 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.207802065 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.207537276 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.20773673 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.206079066 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.207521541 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.23131414 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.208259969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.207890827 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.208184908 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.208717248 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.258257858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.208299455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.205751276 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.207312035 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.263784088 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.216059071 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.209168816 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.206000553 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.209503953 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.205958532 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.360201009 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.256525991 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.209833471 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.255538291 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.209120277 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.209313942 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.209558561 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.208914715 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.263960745 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.209979344 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.257272162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.207022662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.363034612 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.231434928 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.210980826 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.211567965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.211888104 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.20987804 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.211031917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.215630746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.207334396 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.210689939 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.215362836 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.207321062 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.207079355 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.31112342 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.31724513 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.208725411 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.221266556 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.21668873 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.206354683 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.263128597 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.210172454 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.207205222 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.26091234 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.324498172 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.264369433 seconds)
  done (took 140.911476635 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.213675158 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.217447574 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.21178161 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.225964965 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.210804975 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.210822932 seconds)
  done (took 8.434568704 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.21188499 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.21147459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.211522859 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.212052278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.21129363 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.213180203 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.211640846 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.211526776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.213752762 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.211531612 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.211504695 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.213196403 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.212869797 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.211495384 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.211080755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.210224022 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.211458571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.208214749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.210293372 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.211817428 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.305964603 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.212271757 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.212265701 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.212607024 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.217452716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.212152976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.219106803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.212823996 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.212077958 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.218853509 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.2152911 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.213057407 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.214104493 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.218264725 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.217098324 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.213739127 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.216143191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.216037184 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.210267492 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.213676601 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.216260944 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.213515471 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.213646339 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.215988665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.214412061 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.21731135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.219363357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.221838914 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.21453255 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.215488279 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.216646596 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.213362414 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.214284966 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.216299355 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.215726436 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.217356719 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.219519024 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.214252932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.214870545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.214673987 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.214864541 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.215991598 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.214834694 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.217758411 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.220273456 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.2162967 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.215290612 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.217154308 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.214578043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.213706262 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.217782956 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.213347735 seconds)
  done (took 89.673054582 seconds)
done (took 389.824249789 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.434766452 seconds)
  done (took 7.581562044 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.388144088 seconds)
  done (took 7.540086499 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.011264563 seconds)
  done (took 20.160207242 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.230194165 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.301497214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.209009494 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.215839085 seconds)
  done (took 26.10379124 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.279852267 seconds)
  done (took 7.425845771 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.211216524 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.208369142 seconds)
  done (took 13.57140648 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.392861741 seconds)
  done (took 7.54167874 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.707578294 seconds)
  done (took 7.861617571 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.235752788 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.235196807 seconds)
  done (took 13.864361251 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.194478273 seconds)
  done (took 7.344306135 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.785829953 seconds)
  done (took 7.939666608 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.220142672 seconds)
  done (took 7.371969019 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.243954787 seconds)
  done (took 7.394358965 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.584543256 seconds)
  done (took 8.734404901 seconds)
done (took 151.583419194 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.210822533 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.213582518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.213659601 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.21275345 seconds)
  done (took 26.0000888 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.250060603 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.250211892 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.252834292 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.261689641 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.253923907 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.250703076 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.242572679 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.24430455 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.261708873 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.254292881 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.25343233 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.253411254 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.250669541 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.24147645 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.253547931 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.254077644 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.262180081 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.251911262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.243558078 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.255451278 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.219599673 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.26191112 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.257091507 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.219274683 seconds)
  done (took 31.154517985 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.414893941 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.289684665 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.370382534 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.271082004 seconds)
  done (took 6.497226042 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.27050898 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.273802363 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.284727012 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.323283102 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.349357128 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.282131764 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.246286998 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.240413265 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.226536104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.273579307 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.349373658 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.289442177 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.358180031 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.219446276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.404540636 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.221135439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.219304715 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.27141845 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.322963768 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.344189322 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.221049892 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.270805558 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.276018114 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.288239056 seconds)
  done (took 31.980031243 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.218111042 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.226703952 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.225470829 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.220382672 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.220496732 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.219173088 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.22564059 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.221410288 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.239845644 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.221067988 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.219148053 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.21933821 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.218936024 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.221254903 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.21963987 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.231274207 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.234262124 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.220399609 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.223402805 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.22673089 seconds)
  done (took 25.626441329 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.212790036 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.137948847 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.564143912 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.469331211 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.214028706 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.217480871 seconds)
  done (took 26.969348051 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.282158459 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.404294566 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.221113239 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.535032691 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.611364438 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.220900495 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.222563797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.438607188 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.705218415 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.705478364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.267896006 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.279911887 seconds)
  done (took 18.051980903 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.22698835 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.216855413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.228870033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.232946252 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.268871234 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.223718052 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.227554825 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.214549196 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.272079352 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.272906604 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.225922364 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.270167882 seconds)
  done (took 36.037253688 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.302724868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.262810979 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.123568823 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927526304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347888175 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.428022757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.961294475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625492337 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.225901295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.490080334 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.910295511 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.321247722 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.474008446 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225137687 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.216266236 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.085106339 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445983329 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673819277 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21841946 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875675179 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246251394 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.21812472 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.040331783 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.245514635 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.429108755 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.195821891 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.479050145 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.996222107 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474831432 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.231546585 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228982303 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.218352134 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492638039 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851017406 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317522902 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228621626 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.890610617 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.765705902 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.220477982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.973589258 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.67777865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.223150636 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228343644 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218809879 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.153283781 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.220446671 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628034409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.22779137 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.932027467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.219788723 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.230264261 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313871681 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.224281779 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.789443497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213875485 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.224733809 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.217451507 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.224953601 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787636032 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.33920365 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.223390219 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.155054609 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.575905961 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.890383293 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790725251 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.323720427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.223165493 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.223163065 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154365397 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.954021289 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.238676975 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366930329 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.245285273 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.869693341 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861246232 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.877140293 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.164293636 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756770543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233375873 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.15390704 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44775867 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.995226294 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156078268 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.167725638 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.155079595 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873338908 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.232055296 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.550449777 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.230818339 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625786623 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.236035194 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237924446 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244864206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.443921806 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.104769518 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22083949 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.6393516 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362333364 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243948462 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.628309688 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159421211 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.224636892 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475955285 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.434010671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.221764891 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.084023505 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403344498 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234438525 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.239257514 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.234212552 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.232684794 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.744074486 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237146202 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.351893362 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24153183 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.997654851 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921916733 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228391766 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.32600399 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.903325342 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.46293194 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.938000597 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134098492 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.29140118 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227575771 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.223717069 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.00875483 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076964232 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.118520175 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.225144 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222043727 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.253668225 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.224109774 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.171837538 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.221394905 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.957996042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.003157577 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.446971311 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233035949 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501030627 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158355709 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370866312 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.233333282 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.446110349 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.319462243 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.222966309 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482913233 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224135268 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.226069451 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238290304 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.244411298 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.322664377 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24681388 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.227866384 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.483460555 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.229034421 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.229365641 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.985568054 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.008247211 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232003712 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.23152096 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035422433 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751695684 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205865666 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2323961 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114841916 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.239525698 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.293348653 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.230595678 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.235132835 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.891828645 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018092585 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.233569753 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.223991492 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447420134 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.23704664 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.987453994 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.311334917 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.40331858 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759899496 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244470416 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.159079587 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.938345681 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.920514479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226287191 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41504444 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.225930963 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.23640866 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.238501713 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.706187569 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.755286257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234310389 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.901502053 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.236370098 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237700126 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.233023596 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227028772 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.861467316 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.363765781 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243611957 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.241594137 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370703768 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.241654926 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.161086476 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.74436205 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.23337818 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.228909221 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.002720831 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262198349 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.935391005 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688003994 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.489051104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.882802933 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242247383 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.986782527 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.258909721 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.227761004 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.689463571 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243612312 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.239386433 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.23694382 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.239032888 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.920369621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.669843053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794382797 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887360439 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.705718112 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048762784 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.24238328 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133296467 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640964088 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168161957 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.885170859 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398268677 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642147362 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177083372 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406823892 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.343137551 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.931646834 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.239537065 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.456688376 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037933889 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.714182066 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.255435921 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439993332 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264465711 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.231938581 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.161741775 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.517842052 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440357018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.725879688 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.314962837 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640587442 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.706292844 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022782926 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.228281476 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54446595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387907474 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.863145057 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.616198624 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.229734392 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.934411088 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706353545 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.239104799 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.757110395 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.818766744 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.234350488 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.425419451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.170953555 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.241899926 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.241700453 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.230212179 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.362186776 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.233783221 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.487556458 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241158833 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165390565 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.230854001 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.713089733 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.088884083 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.237600694 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231954294 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928553558 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.234767277 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494934874 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.242631619 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.848110814 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.235521066 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.165354115 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165337286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.925574094 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.24066978 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208751492 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692285855 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.575975888 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.216323814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263257587 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079778594 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.486462582 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.246280795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.763524266 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461203051 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.995501851 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258326393 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.332950346 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.726224527 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.235117488 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.133873238 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.469009923 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045208528 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457217152 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.17731537 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.141187737 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.23023141 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.449322661 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.132522615 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.94108371 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475194078 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.949348962 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.24317786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884335214 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264675323 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.972407589 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.2612189 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.587690433 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.24481464 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304656981 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.243740022 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.243985927 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.246269853 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389658852 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971197032 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250998059 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.247497001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.328883118 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.405312553 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.842586634 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.010037105 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771738872 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919708892 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.772388886 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250510084 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.234863528 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.237368608 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169864344 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383681539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.760460135 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509163556 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365043974 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.650120164 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262107392 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.718878404 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253799592 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448110145 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.510985596 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.107688503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241672306 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897569131 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.136012909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.246000732 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.446898982 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.700025992 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.761837883 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355151245 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.239485622 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646921112 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514597653 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325174571 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236068346 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.826700641 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.2371775 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.557891611 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.245744992 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.990546266 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386146656 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.245701296 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872019293 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.24901603 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.3964446 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.010245865 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.023331574 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.496616888 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654060771 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.247429778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.77090304 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.880564363 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502285899 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.306725052 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.247933436 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.344664727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382879101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.244863334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134827781 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236304166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081298298 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.946341983 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.246910685 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770502796 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.505066843 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.234881559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.247187703 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262797955 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.247970002 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.460311424 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914912068 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.464534388 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.247662147 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.248013011 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.228440958 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771462048 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.256456586 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172438412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.241547176 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463108013 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.478981279 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.264145338 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.691504342 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.950545202 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775015284 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.211876708 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260316659 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.243495751 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.882066535 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777649637 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.853918073 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.706387829 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.898201812 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247380878 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515430625 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.245189866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.243452531 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519015634 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.244276629 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.250530377 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.254124008 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.774910056 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945209608 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.24785099 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953017669 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.181208103 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465011623 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.859028698 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180253013 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242055162 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.408219995 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.247635578 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371800083 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.254354278 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.251217039 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249127576 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.977613181 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522666677 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.248090899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.228046901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.814446025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.243568647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.265403586 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.455287187 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247075751 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.915534666 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.591800061 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.496654985 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.252863014 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.230093511 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.248189962 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.242946808 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959481425 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212004987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.736374712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.769793286 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.254872879 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.25687289 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.246306932 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.459615373 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456643278 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.036119753 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267900175 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.241305296 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.261154026 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.147222956 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.008603613 seconds)
  done (took 1517.550523553 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.260439724 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.250827854 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.260437006 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.254196763 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.281310892 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.331569197 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.290958049 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.32179472 seconds)
  done (took 51.434676538 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.245865385 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.397173177 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.27330656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.245125015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.252992172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.254824183 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.663798445 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.247899991 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.251091389 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.251198502 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.250746407 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.242338754 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.841733025 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.255479934 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.243243863 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.233836266 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.251463989 seconds)
  done (took 63.584968169 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.252065649 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.384253998 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.319969949 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.261823373 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.814253766 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.244887066 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.372377318 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.282684962 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.241143431 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.502629306 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.892533805 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.257951211 seconds)
  done (took 82.012594324 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.246974528 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.249166278 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.249465685 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.248858632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.248476456 seconds)
  done (took 7.424123123 seconds)
done (took 1925.478987974 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.655057241 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.858892789 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.819137066 seconds)
  done (took 4.862717221 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.386048338 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.438835021 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.555232598 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.561470836 seconds)
  done (took 7.121474033 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.519641224 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.611655726 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.437666163 seconds)
  done (took 5.751345153 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.523173111 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.243855653 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.3591915 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.240814436 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.24123353 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.246343322 seconds)
  done (took 19.907911678 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.243166117 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.247116528 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.244560063 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.248060868 seconds)
  done (took 6.166688691 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.224572567 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.933146034 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.227888455 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.243906141 seconds)
  done (took 17.807650772 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.991785867 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.003894147 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.987702666 seconds)
  done (took 7.162606375 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.241885136 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.085064022 seconds)
  done (took 9.507003092 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.536734401 seconds)
  done (took 2.716354022 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.375597259 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.570349091 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.217487883 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.143602345 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.210309558 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.63061166 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.701770849 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.325420417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.131640786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.163698516 seconds)
  done (took 25.649674215 seconds)
done (took 119.61763735 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.738912676 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.481821289 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.446329095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.711602292 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.474349483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.446985736 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.661756585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.67928346 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.223652442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.214084043 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.715626836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.470849198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39626846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.483532092 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.395734923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.481215932 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.46530931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.784952295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.430402061 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.594798015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.669825117 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.347740229 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.541427609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.363938205 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465272267 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400141811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.940732088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.241156691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.600582989 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.958114608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400429692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.765428546 seconds)
  done (took 185.173504777 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.246867434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.254276229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.243454171 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.241724811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.248470281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.243911157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.244797239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.265005229 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.25153627 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.241381126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.253886891 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.253036386 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.244675452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.249105657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.243232782 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.252732853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.246184186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.243368696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.245633957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.242221307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.242657543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.245204728 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.242310467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.255121386 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.252190791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.241799989 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.257115504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.242190823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.243235361 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.242653761 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.242341498 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.269918291 seconds)
  done (took 201.113288971 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.242272184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.241613039 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242661066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.242841421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.243249368 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.243242705 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.245534267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.249023802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.246287105 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.241972591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.243204848 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.245123935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.254536221 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.243794536 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.243382319 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.256820305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.243236922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.244230075 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.244509373 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.251531061 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.244096031 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.242858346 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.252471126 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.249938406 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.246901049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.246742876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.256392602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.24503756 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.244672075 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.246895184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.243763036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.257350033 seconds)
  done (took 201.068425565 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.44841771 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.253431713 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.254008638 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.206859315 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.253082154 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.253234458 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.247215888 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.442882489 seconds)
  done (took 13.542634874 seconds)
done (took 602.079710905 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.608749102 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.335354462 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.444207868 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.274847828 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.94755265 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.274888534 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.274345716 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.427555165 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.125253257 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.426576507 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.432248333 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.271102888 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.567593589 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.271248779 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.502828131 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.365072122 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.078983455 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.181941004 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.566481034 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.720876573 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.520493161 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.628884686 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.42565383 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.140394677 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.570442024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.63125642 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.888603589 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.080058868 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.273690502 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.566036633 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.007920688 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.118046831 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.322407714 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.306782828 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.361702925 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.343089907 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.09840605 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.304911991 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.447062262 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.400585432 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.71853627 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.959611896 seconds)
  done (took 86.399783016 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.241507106 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.241543685 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.24182541 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.242181284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.244057897 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.242134286 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.24220364 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.243062937 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.24268164 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.241869469 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.242290213 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.243780775 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.242158301 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.243613987 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.242005408 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.242409828 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.243312126 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.245410523 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.243077 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.242467125 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.243371582 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.243597312 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.243773235 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.243681523 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.24322235 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.243009398 seconds)
  done (took 33.502398922 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.257707786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.492981082 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.641558079 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.262361552 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.256879063 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.261217531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.325412773 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.25717598 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.260687503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.260158358 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.399657244 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.259912795 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.292126312 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.667238561 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.259654386 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.259008965 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.259425954 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.258752038 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.500044695 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.267358538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.344883928 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.259017306 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.326270601 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.267369752 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.276834709 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.259542518 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.262032325 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.765526001 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.260568396 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.402907656 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.943311769 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.326173286 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.719057121 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.656819063 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.938906885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.262541167 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.258697577 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.406096815 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.260823069 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.259203521 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.327827078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.259535225 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.654226754 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.860572556 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.27379034 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.260323662 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.782517879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.405453018 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.479806248 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.270415952 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.673727157 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.262835072 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.261295133 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.261243443 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.474406122 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.268043064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.25895503 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.770356005 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.277907201 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.326775589 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.25997286 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.259879153 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.517627676 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.26085803 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.495952986 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.261680748 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.268247909 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.25948248 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.658995526 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.261833312 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.886103072 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.274570625 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.261803814 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.403543272 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.497665299 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.816789946 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.263994279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.52134979 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.733237562 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.326893753 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.26605502 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.757703614 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.331050198 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.265363083 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.264903553 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.264838726 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.261217207 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.308569733 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.326576059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.807885503 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.87403528 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.780350317 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.344118796 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.273864938 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.262153744 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.768848759 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.277382955 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.263140173 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.651224927 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.879921015 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.275611275 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.269822203 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.878559631 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.277985796 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.330134027 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.266682799 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.661368833 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.262873455 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.308302242 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.263770839 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.268496281 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.266833702 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.331032072 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.265439299 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.264021801 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.851853214 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.425233886 seconds)
  done (took 165.944591384 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.257982924 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.254513729 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.256749688 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.256735477 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.25689 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.263260501 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.255755204 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.257146236 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.2613107 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.255718888 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.257052281 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.256057204 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.258354218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.260613285 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.266376192 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.263647999 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.867915158 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.257274972 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.255752664 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.256838211 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.032684119 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.258119653 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.255524051 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.257629988 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.257833681 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.257642884 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.265673195 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.261466976 seconds)
  done (took 149.818573959 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.265177449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.764807307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.2662069 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.380313163 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.282687131 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.263185505 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.379405327 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.314144713 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.266939629 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.263977855 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.262625929 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.531360158 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.267200736 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.721684818 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.432018219 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.37961251 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.719618928 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.268650461 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.263557443 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.264428986 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.382739592 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.270039624 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.533407495 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.766083936 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.266677787 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.768971226 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.254260977 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.268391877 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.263890733 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.771567628 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.264952435 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.535846803 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.331899866 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.316417925 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.775193572 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.72739656 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.72595484 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.393616143 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.264778258 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.265286848 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.26492163 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.254066559 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.773497022 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.269610434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.266865923 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.769122669 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.282389808 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.268044961 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.277429086 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.26490435 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.3181096 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.319353578 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.539003015 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.780951272 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.33577911 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.286301793 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.381562926 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.630743141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.270071951 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.722950592 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.253957237 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.775358485 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.272370287 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.255312076 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.267167577 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.271915002 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.398278242 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.381342001 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.725627526 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.268373574 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.725364573 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.399660174 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.266068471 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.267176894 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.267403109 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.77495366 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.726977937 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.399652379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.386299789 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.437203434 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.2569982 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.266677678 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.257347458 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.333964453 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.267490306 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.777145342 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.728160423 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.269901797 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.270048638 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.269761452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.26972425 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.422237646 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.775834319 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.336751929 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.722714881 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.553564218 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.540367124 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.270062096 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.318749324 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.268412419 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.542380214 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.270307513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.318658096 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.692828601 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.54245418 seconds)
  done (took 150.243132365 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.491053065 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.379490144 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.350386855 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.378118573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.814465583 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.813899186 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.496100885 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.382319468 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.367706262 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.49248854 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.333984737 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.360584123 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.421285037 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.335006984 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.121442536 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.331613107 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.353705971 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.386325693 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.354460432 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.245347382 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.855064701 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.540377157 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.422332693 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.155863065 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.35457339 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.001301127 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.787858208 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.817725113 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.431568669 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.470950189 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.784369824 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.320392381 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.161580558 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.873618477 seconds)
  done (took 61.388270432 seconds)
done (took 648.480923605 seconds)
SAVING RESULT...
DONE!
