cset: moving following pidspec: 2413
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.370017517 seconds)
loading group "string"... done (took 0.508754016 seconds)
loading group "linalg"... done (took 8.39909164 seconds)
loading group "parallel"... done (took 0.170602982 seconds)
loading group "find"... done (took 1.346724556 seconds)
loading group "tuple"... done (took 1.928237426 seconds)
loading group "dates"... done (took 1.319219707 seconds)
loading group "micro"... done (took 0.212583748 seconds)
loading group "io"... done (took 0.545575316 seconds)
loading group "scalar"... done (took 40.737700464 seconds)
loading group "sparse"... done (took 12.701402849 seconds)
loading group "broadcast"... done (took 1.122697552 seconds)
loading group "union"... done (took 14.045711044 seconds)
loading group "simd"... done (took 4.873981714 seconds)
loading group "random"... done (took 9.717250463 seconds)
loading group "problem"... done (took 2.064763345 seconds)
loading group "array"... done (took 23.309497418 seconds)
loading group "misc"... done (took 1.077258029 seconds)
loading group "sort"... done (took 3.512630741 seconds)
loading group "collection"... done (took 20.746266133 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.57629935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133647098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143889185 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.172354081 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.200268071 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135301401 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153673643 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.458261736 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.027592815 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.202004309 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138139782 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.496286513 seconds)
done (took 5.589178257 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224266462 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081818062 seconds)
    (2/2) benchmarking "String"...
    done (took 0.124275835 seconds)
  done (took 0.90349054 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072427787 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170403584 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090910503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107693232 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108717489 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.090234411 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.108019351 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.106929662 seconds)
  done (took 1.481841632 seconds)
done (took 3.388318131 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.748532538 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.822796545 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.528890014 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121588793 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.152900743 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126407008 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.299258519 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.151483458 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.120114612 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.110997256 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173155665 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.392873538 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.475848999 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.988525308 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091370269 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.124721328 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.077860854 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.735198735 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078474746 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.114748925 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504915587 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.104466876 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112561793 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.125386234 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204283301 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112754347 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.180292643 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106024543 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.672501336 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.098900462 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180736871 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094210743 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158366568 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.211002924 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.091772831 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.089590342 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679130803 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.188211211 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107390749 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.095865834 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.676205181 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076591282 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190678253 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104163593 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.10780207 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185675125 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.097112444 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.09129994 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081298589 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.100845171 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.152800518 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456227559 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.103731059 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.139898976 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092061423 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694836027 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091194364 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152030291 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.121143797 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.105689249 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079759883 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.104401778 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155803306 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096415443 seconds)
  done (took 19.551545867 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114361912 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137160578 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.090723269 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136732916 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13740993 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076179925 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.096950498 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07460091 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122447738 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180082062 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136051752 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140387613 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.073203755 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.092145456 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.09813804 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245446838 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.115737789 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100738054 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093605444 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086876864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136392696 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09211531 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107221731 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107747844 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165163909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201469341 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105352836 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120234466 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.089914543 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097517012 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139181048 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158659859 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073089242 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.090217028 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177846118 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103348682 seconds)
  done (took 5.029345216 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191936332 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097609061 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.197320617 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.108513809 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.191115177 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127231095 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17596651 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097991243 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25878346 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.165591581 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160038302 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125488858 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111924317 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076261514 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.092203951 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075477476 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.70126555 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164549989 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.141949305 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118798484 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099298531 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109165391 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.094171007 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080858636 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.093605046 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081164222 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.128134461 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.321815728 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166021234 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081557893 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.213230869 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098092187 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103255998 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111189198 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.208575012 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122740247 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113883076 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098655315 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076853581 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191335757 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095951343 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084320756 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09287907 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099821181 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13143242 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129454042 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094899952 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087773904 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.2408093 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.07785904 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111211487 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.995649143 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210005069 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090930381 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.091969266 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332046975 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094177863 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097413579 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076670881 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290086633 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113601607 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.093758875 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073965401 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09956232 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076721758 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383367525 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099931692 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.990957575 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078134262 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.150184686 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095276011 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099282441 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082583877 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080779242 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114820635 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075315809 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094450197 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07491336 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093353248 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079297863 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11234678 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095187107 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075626768 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075822116 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158779154 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.11338562 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095726016 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122098172 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079997845 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092043951 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12293788 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078582812 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078549137 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138248964 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101281192 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093641871 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097067766 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139798928 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092492639 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172047573 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.091940831 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103885265 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098293581 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124742031 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.114496286 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076376255 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097412059 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074195357 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.0938581 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143563577 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.090670394 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076129101 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096376454 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088810245 seconds)
  done (took 22.900615243 seconds)
done (took 48.179310952 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.377805039 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10717676 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107822571 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106385089 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105199581 seconds)
  done (took 1.581580962 seconds)
done (took 2.335656496 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.311660242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.191189007 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083728996 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167567982 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.099784226 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.172235265 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157107708 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114010777 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183771614 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09640202 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162510806 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095798148 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08453334 seconds)
  done (took 2.69913766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088516092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113086335 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077393985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086751216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087843369 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086936648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101898522 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108429951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10281706 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081549385 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087070872 seconds)
  done (took 1.773335876 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08797999 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094446248 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093673304 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087032009 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08699567 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086671546 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103085106 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097956761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104336735 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081438198 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086982659 seconds)
  done (took 1.760372434 seconds)
done (took 6.976730817 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.14753653 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 16.39089682 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119485917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166699506 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305524314 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.216362341 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.659877499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130597672 seconds)
  done (took 20.0806416 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.124625953 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092991791 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075057569 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093952764 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076848574 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092491248 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075260144 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.091450721 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077358164 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078158185 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09342431 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077871747 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091288843 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.076190994 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093772452 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078356188 seconds)
  done (took 2.204128377 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.11096038 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110545129 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097580434 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083702423 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097409913 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07909186 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099138622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081507877 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093880957 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079225379 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.1005125 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082991653 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.098285033 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.076999419 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097497939 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084106543 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09407628 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096895423 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083045078 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.098152517 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08368883 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095135001 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081850128 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09923708 seconds)
  done (took 3.063890837 seconds)
done (took 26.098928736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160714778 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080217022 seconds)
  done (took 0.997240336 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096732677 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11361696 seconds)
  done (took 0.973275511 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102688671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.092144634 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.130392351 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092783705 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094414835 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076514481 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.125952388 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094101943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077308167 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.076129827 seconds)
  done (took 1.725815239 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080988089 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080887054 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100953551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.113827728 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087822747 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095356089 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081253732 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096407665 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082263263 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091775786 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.085530738 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110634136 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099850499 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.096438922 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.098548118 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08258536 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10303708 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097944672 seconds)
  done (took 2.450783918 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076346603 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078684074 seconds)
  done (took 0.917788941 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.0796905 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07418307 seconds)
    (3/7) benchmarking "month"...
    done (took 0.094253403 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095209243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076145514 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.074078206 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092126106 seconds)
  done (took 1.350996206 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.462420067 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.177681764 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.316769666 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109622297 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.12921674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336417153 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130042973 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.108023877 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089757924 seconds)
  done (took 2.665089031 seconds)
done (took 11.842313767 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087407804 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.127634009 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.469047534 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.096985077 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.08861309 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.140205564 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.248921234 seconds)
done (took 2.029091365 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332332627 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118146928 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082881876 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074482734 seconds)
  done (took 1.37319446 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075453502 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081681141 seconds)
  done (took 0.928277918 seconds)
done (took 3.074314578 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075244013 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073810803 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089198931 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07379461 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.070657301 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088004371 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.124802605 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074053805 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073325487 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.092001577 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.074126229 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091686206 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071443162 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071356818 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091039172 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.071060141 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087665611 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073632884 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.192002091 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087845769 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071152485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089791122 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071266379 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.070861275 seconds)
  done (took 2.85289212 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100505445 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092013178 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.080206361 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098062368 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.077469494 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09764284 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081409513 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09203811 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080503114 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093292448 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078641873 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.095438982 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.07598044 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095674216 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076660661 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.094790243 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.080206568 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091953946 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07734009 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094669498 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078908976 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091929988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.078148449 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096784671 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078771061 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095898404 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077587762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.091963323 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080568696 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.095100666 seconds)
  done (took 3.39403572 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081282851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071184876 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08899901 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08225494 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088324198 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076219335 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.087971384 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.072846022 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.075351171 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088814048 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077791019 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088884241 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.071340056 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.075549799 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093024028 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077758459 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106302702 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071938093 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088112121 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.076236211 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076877365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.08909814 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074200579 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088727326 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.071556001 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.070975588 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089944884 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.071053236 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089627796 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071477993 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076894764 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095216997 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.071256248 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100711326 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.077907934 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089503272 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.079144512 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088394763 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076970982 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070980435 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.088350903 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072305621 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088536622 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083435362 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.075263126 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091008952 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.071907722 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.093093267 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075629462 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.09564244 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07209754 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.071653805 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.093926999 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.076651932 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093836741 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.071700571 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071930336 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.088368295 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.075665332 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088923431 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.071567264 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072443274 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094384495 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0717556 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111985136 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.082048718 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.088224623 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.076868982 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093295808 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07937756 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094467232 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08990001 seconds)
  done (took 6.701675933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076557221 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099448651 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073988081 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073288696 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087207924 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072726738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0956919 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072916383 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090598674 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08970974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089431834 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073907532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074188544 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093663775 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072610349 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090875252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082768994 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087272029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.072139834 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.093651299 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072892275 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095131796 seconds)
  done (took 2.612464501 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214942676 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099882439 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135393165 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09112562 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109481774 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108626611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07878567 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098825991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079194472 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100054727 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081806342 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097139459 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10887794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082262924 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099726283 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.082924029 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096481783 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083676752 seconds)
  done (took 2.628432776 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087911778 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092548778 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.099019496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09229412 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078072775 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094207937 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081739145 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108452334 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076831323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092735662 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.086578172 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094876804 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07789256 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092867487 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077403211 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.093045558 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07837574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075633711 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102811561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099014398 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.081368628 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102959234 seconds)
  done (took 2.75132897 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09268121 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094944072 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096227328 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097253541 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074712868 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095192273 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08271957 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.092217508 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.084802704 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.095050904 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075125982 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09374047 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.082348371 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092062817 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.081837653 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092824978 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077670401 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075788093 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095214779 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.074678916 seconds)
  done (took 2.530537266 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116090161 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106784367 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.089871274 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118617628 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093006887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10739776 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118457266 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090076228 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107095368 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103008995 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107091664 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088992428 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117919333 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114656208 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090212683 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118452858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118062853 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101051361 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10738005 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0898223 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120753248 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089548874 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119028241 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10839552 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090747312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107159395 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089472777 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115162534 seconds)
  done (took 3.73156064 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075251494 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074740107 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090449216 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07197732 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.072290935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089852657 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071961536 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.090774289 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074815182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071859012 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.092137972 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074836129 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092545557 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074991153 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074851141 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092267247 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074633417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.091053289 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073043002 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073028663 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.092098137 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074852729 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.092302402 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073138035 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072096938 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092718848 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073749233 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089916481 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07485915 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072244683 seconds)
  done (took 3.193136386 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083670176 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098598878 seconds)
  done (took 0.973461712 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072748908 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109596166 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.072997127 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078648127 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09830621 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075870449 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104131906 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080849933 seconds)
  done (took 1.481444876 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098553987 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113373801 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081811627 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104716544 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094110979 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.111642503 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155360996 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08128408 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.101349045 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.076141282 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11300823 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076434509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084296809 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099291606 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.08480577 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10812444 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077336377 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103300454 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084091111 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.095488242 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081971879 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109887445 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086400391 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101457646 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.078713103 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.105274216 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.090260975 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.105321987 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080541399 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106049236 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.082875456 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087079997 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07988467 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099426675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077047436 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.111629447 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093074708 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099574011 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085286007 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100007777 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084084581 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092445751 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086047763 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101321373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088080115 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098739612 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082562452 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092706801 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.076971286 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080311481 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092242775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07903788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.08775668 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086052699 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.102485893 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094653826 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096600833 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080352065 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098565968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.079378789 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.100465095 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079961493 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103988708 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.079475313 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102643701 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08522995 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101971429 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.074279327 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.069055404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094410669 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.085740457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116829433 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105557332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.081037328 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082439571 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094509866 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081971344 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100186408 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.084505336 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104988246 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.080690183 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100284093 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085099225 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097802206 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.080035345 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099738971 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.077981859 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096228782 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076243904 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11519413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079052268 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09397778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.077206515 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.104518919 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.080999206 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.078774487 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094928215 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085587153 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.087708039 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.081956147 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099873449 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083409287 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10591331 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083260353 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100369282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085316142 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105210647 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.080511038 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.098168112 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.07272263 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099739877 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.079296269 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084523246 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.088106898 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081511544 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097832219 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.081903354 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104408863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078123391 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098852269 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08782981 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105240566 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078111279 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090284798 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081014055 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099221501 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086087519 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106058455 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.078970708 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.074719906 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092937924 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084357629 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098441757 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083039639 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099698827 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08145048 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.088125783 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.076765407 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099771001 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.086622742 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.097466074 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083075991 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10419642 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083744031 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096984137 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086462325 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.097708585 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.076946282 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103090158 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080423286 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.074299771 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106056015 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.080292657 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098143651 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081131329 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104507102 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08217473 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100653427 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079590248 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099139444 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081764947 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.094346855 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081400695 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.078742657 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10732635 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098124134 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075616892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072985516 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100647294 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.077441815 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.09903233 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075911973 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.098667439 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082213001 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077273991 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097247959 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079902677 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112586094 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090022066 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100404003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.083323259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106368089 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080610954 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101645392 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080488873 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100727663 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.082260782 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.102734196 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.083482326 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100800627 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.080273111 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.090832918 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082395872 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104434396 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0768163 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077185053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095168924 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081165542 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106245341 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081336334 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09999508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07840026 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101346872 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086572816 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.099420613 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080672791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.094639661 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.081467321 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.08510212 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100564468 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083226741 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.105952969 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081646256 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093067078 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086104899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095959998 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085364279 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.093744796 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077477734 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096319135 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.082707242 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079848707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.097861237 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070999454 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103921993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087942748 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.099896296 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076796604 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100236619 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089704013 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.097757951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085097703 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.099394592 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.083896624 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11252722 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.077364617 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.099039802 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088609202 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099594416 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.070253781 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.102728769 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.078755888 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075669466 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106523979 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078307842 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100174985 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083980497 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.101053813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.071464311 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.098340726 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078436937 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.07705201 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093255835 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086797975 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10037041 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08105195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108212971 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08310262 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100907185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082497002 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099823972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082915947 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100872444 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082157509 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100717009 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.080138416 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.095791913 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082332401 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.094403284 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.077603001 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079618764 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099852352 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081935085 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101539901 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080274134 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104916401 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081188217 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100844177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116820169 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.078498467 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076610735 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100107339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083656434 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099478619 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.080346537 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094202166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086771571 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098960037 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087591932 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099442164 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073800798 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100748717 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081288787 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100672307 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.082580109 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.083251927 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.097727934 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.080265405 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.100048229 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089691666 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.096306381 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087642364 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101739242 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08283984 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.100068413 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082216459 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.09851143 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076827339 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099280796 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.082642057 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099981892 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079992873 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101941937 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081389508 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080620303 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09803646 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.082670281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100275745 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083412617 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.090034588 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076799714 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095632341 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082899358 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103567347 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082861184 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.079582625 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098465696 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083402755 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098468192 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073886702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103820803 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084059128 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101158528 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090127988 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09657604 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081480129 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110342041 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.070838025 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097690106 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07848121 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.077891527 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106723133 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083220082 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.105736633 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082124318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095724585 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074536345 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102043415 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.079391055 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071159887 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097584651 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084416886 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098601614 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07998913 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100548394 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.084048321 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102521856 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085966604 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098182648 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.081823405 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100638834 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074017208 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.077987789 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0951459 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.081108712 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10166111 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077455082 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.092352962 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.080887237 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100094626 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082469918 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.079877393 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098095203 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086400891 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100081977 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.081371558 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105942441 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.071517146 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.099816261 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.080625387 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.09898608 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.077150897 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.100254365 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083027326 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102461847 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.086554638 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081623999 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102451295 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081924809 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096244146 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08167642 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099643894 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08234154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.095647327 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.08417172 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106087451 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.078315218 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.100629394 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08213794 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078883383 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.102147607 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.082830688 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100918094 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084565738 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101178406 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081688417 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.103896961 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081173241 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10235971 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.082981935 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098779172 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085099822 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095965611 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.088353829 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10188365 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083870864 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099449748 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078773787 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081178719 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.1001252 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080354603 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106337903 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.083731717 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.096769805 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.077506175 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097126667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.08227517 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105481143 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087717772 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.101087534 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082769187 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.075400544 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093924076 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083963159 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09649823 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.080325137 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102790603 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085257169 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100651442 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.079780634 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098057564 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.087697385 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104747344 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.083942544 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096655706 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085152774 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101728775 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.082439506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.079794232 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100244782 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083824366 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10373833 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080452814 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.097346036 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091821677 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106334228 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084400721 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.099547667 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084843822 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100143485 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.076698389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.101916491 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084175505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103220914 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.082336524 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100296588 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092147504 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.095943134 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.080662358 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106244938 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081325038 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106059564 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076770671 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.082412017 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102462972 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083921518 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095706236 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077722667 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097431795 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08320129 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.096236869 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.076270592 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111067973 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087132077 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10056385 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08087972 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.079838525 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.095031941 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.076082352 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.096842605 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083820442 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100477406 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.089884245 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.096655788 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.07815155 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.075549593 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100496838 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082702988 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102817242 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.074544042 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.094888477 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.077754189 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101759259 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088837022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098850994 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0823642 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101565299 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.082041028 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.078440984 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106270089 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.074185589 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.102488522 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092750532 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102919185 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08372113 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.104181887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0873672 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101849603 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.075419912 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101688805 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.082394163 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101365692 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.083394349 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102559238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097571908 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102080388 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.077411479 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10003763 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.082095804 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.096891483 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089393712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103615462 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084809725 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102620123 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.081485544 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084369117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107644597 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104212227 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.082888336 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100705415 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.080701481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082223357 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09949897 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080537641 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103113072 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.083452617 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100229988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084558298 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097377022 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092236504 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.107393202 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084503887 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.093132584 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.07793206 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.078843781 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.095817578 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085376488 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.095781419 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080967507 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098323993 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080451629 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084590412 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104396474 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.08272531 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103738393 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.081810555 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091770874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085949604 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102126157 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086210285 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093230512 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082076924 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.082582015 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105358525 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10696492 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081232076 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.081777806 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.100675558 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084531409 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.095631094 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.08515201 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099897999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080483935 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.097374914 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082794335 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103355992 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084345367 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083345578 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104361575 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.082055495 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106626705 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084317877 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094447301 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.074804345 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.104148188 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.079664576 seconds)
  done (took 54.825594175 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121959789 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102721382 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073001847 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093560379 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119235365 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078228212 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072727054 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097171323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077694823 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105148189 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072986476 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092359638 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113666471 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102254039 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117845442 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106364775 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073322136 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096736352 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073798961 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096518329 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094532123 seconds)
  done (took 2.82430639 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.097253062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11035681 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089160972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114943127 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103606985 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090806167 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110310388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110000133 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09486983 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105532519 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114491083 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093426811 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105067484 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.105556483 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086294536 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107097081 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095318014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103054557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111766043 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090057223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107988824 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108533204 seconds)
  done (took 3.097668672 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085765671 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081216278 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106144706 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.07320536 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099665651 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.073209517 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.106203503 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.07479684 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084519799 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.101859469 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.07934177 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.101334246 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086178679 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.091940654 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080209731 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093361124 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.085999039 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081133229 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101930665 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.075183805 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.119230609 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094684674 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076534515 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.079870903 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11062499 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.081905447 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101224559 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.081136327 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.097817926 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082423565 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.074367951 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102802075 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.084615467 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.098409473 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.078631538 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101080698 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082208456 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.095103847 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079951711 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084208502 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096236245 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.082835604 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109446183 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078436414 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095173641 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084078379 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101542723 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.073402754 seconds)
  done (took 5.132608273 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112611314 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129884395 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.101657545 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140352848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117757738 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092289779 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.103478784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.140076159 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076074602 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.079894818 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.119554271 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.115648025 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081884706 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107904945 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104719539 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081819898 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103010985 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077087622 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.106922446 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078014659 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107324032 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085602845 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.116427464 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113089989 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087117262 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099762608 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078359018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106444489 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11273577 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089195229 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10756353 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089866041 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.116591139 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10021661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.07831405 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104304085 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099479635 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10201589 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085048065 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.095742627 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085240844 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107585237 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.08542323 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119534695 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10177199 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.083545113 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101811869 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075281011 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113531018 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.084717491 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112234331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.114843971 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087501172 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102175125 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088370184 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117583954 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10150228 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080266164 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105580781 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.095076148 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096247029 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088090328 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115564525 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102669353 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092086787 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11460975 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.083993663 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10798221 seconds)
  done (took 7.798149696 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111042046 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107995593 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098236342 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119060885 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107481111 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087431243 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106510521 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.087683269 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107811197 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114547931 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088397672 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155382462 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08300497 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113821329 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106489892 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088315532 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107109715 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087842585 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107258014 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087708154 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107698163 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.118872031 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087352723 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119794023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11953065 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.0845054 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108240063 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086843683 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119035699 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107268966 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101159916 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.107569194 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087046653 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120512516 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119640377 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108120037 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082168722 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087365005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108044136 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10762121 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085678075 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118696481 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08781102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104197926 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087358286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108029302 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119147313 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.100422298 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114761394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114152425 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.087766641 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120476058 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106589723 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.088706357 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118919604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128558158 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099676489 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119233622 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107607018 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099027292 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119608324 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128928704 seconds)
  done (took 7.379366805 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111014011 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114904024 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119062543 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074367625 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097287054 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088091058 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096038 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.077021357 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.112889277 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093249912 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116254647 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106022147 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090009656 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116444408 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086184396 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111168348 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106212827 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086241413 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112973763 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106262323 seconds)
  done (took 2.874656432 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088119579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120007535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080374039 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106133286 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082880454 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106919765 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081508199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101983633 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08075206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102071349 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09265483 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11116719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079993833 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107171055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111363538 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087151082 seconds)
  done (took 2.39391247 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100343857 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120284179 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124872635 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084213039 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.076655197 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104264939 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081547348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.094865651 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075568017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107012264 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085578382 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105367435 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082752345 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.076630642 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100784912 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.085312261 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.096134938 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082585309 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102931475 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104163489 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105438093 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.081496162 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.103901113 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.081327177 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10336284 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.083783099 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107315055 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076637852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098273264 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.082008017 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101641125 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.087595694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096152996 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084025742 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097225485 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077648692 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101851627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.082998116 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.105012769 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082372393 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.076514043 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102962102 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082299679 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101342171 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.074873187 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102561129 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075093467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106189217 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.081687561 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.101932273 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082609375 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10821687 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087469435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110892921 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089701294 seconds)
  done (took 5.97677534 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094551943 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103535816 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084846399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09748366 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083926482 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086802318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104888813 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.081611866 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.1022087 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.077162986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102448279 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085214788 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1015958 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083932403 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10256595 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083970053 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09470831 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081162057 seconds)
  done (took 2.516097726 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08501007 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078852641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107889258 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080103834 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.099716353 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081605982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095485663 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078287589 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076939937 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100320349 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079600714 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101376218 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078039775 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.101498907 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079743408 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100133675 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081974261 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077981448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100291757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075163602 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101505873 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078644363 seconds)
  done (took 2.805158035 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097641174 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.131205524 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.093900667 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.141508067 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.082657432 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.104858957 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.092842073 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.106738411 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.121176215 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.083540084 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.082522081 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104545052 seconds)
  done (took 2.109596114 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10404357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13779453 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080606951 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102631268 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09435398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106086346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083989163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105083526 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117926957 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097064235 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107721805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119867881 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09787929 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116746801 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113071442 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09346696 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104536995 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084315089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102282349 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126853172 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085289736 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119595538 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105678319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084984834 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104759369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095475893 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118470233 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117997623 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084999894 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119438849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112983646 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085346442 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119179742 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118179495 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082020048 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119627162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104953602 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108379118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11442398 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11694329 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082102434 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114508794 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119561321 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092176031 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119185782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084326983 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113104378 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105246923 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085509701 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134385444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113673412 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117614967 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094178149 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118753474 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118834602 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134371762 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098215234 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116998152 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113963909 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09752386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117525741 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114089205 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117393369 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098897166 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113927457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117424822 seconds)
  done (took 7.936539434 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118301865 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102840702 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085124015 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120681819 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117625587 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085695551 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105020512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084097939 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105707551 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081156056 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15159059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105564356 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117109058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09665403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10541887 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104707019 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086200781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116097132 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082372954 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133791628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105351053 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095522534 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118425824 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117978918 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118448014 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09411869 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106069188 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084757871 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1055867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084429252 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112837275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10594239 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096263884 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102843084 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115768263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085702676 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105440046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092719974 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105573528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114447874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097487935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127596392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105722913 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086371571 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119553101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084333577 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106828122 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080651591 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10618299 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081061795 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118972517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119633014 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118513123 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11680977 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085823558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104601078 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08528982 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105800663 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085755443 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114682637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117504879 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085337902 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134101122 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106044898 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086768154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117783085 seconds)
  done (took 7.744814693 seconds)
done (took 149.036943344 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098679154 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135773612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094846772 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164058839 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08100163 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135177055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114731756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.116908024 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080974956 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079741741 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.101139537 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083839905 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.167345509 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080969106 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.100031705 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084518175 seconds)
  done (took 2.588425612 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.177898849 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.280792043 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100065013 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106996548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087154672 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103720593 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085690656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107166062 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.082397716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11222244 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082959215 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104357641 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.092841459 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103199327 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.082388594 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081252871 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113298528 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101840019 seconds)
  done (took 2.884294822 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110555598 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144830968 seconds)
  done (took 1.132657526 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116904625 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180546817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293304194 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.372373811 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.130282733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.123441582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155692772 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09949825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197190987 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125613899 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125085918 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.085389286 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.13361008 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.112523425 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.089790913 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.106822787 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.112831894 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109378044 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.086900237 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109534609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.131687097 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.088325835 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.111867672 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.088708475 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181310899 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123591977 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086852075 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108590648 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.087312232 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109143984 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112314154 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100694188 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122161621 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.163106626 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.112687842 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160958902 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.114960259 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085353479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108410656 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085740883 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.112890298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.091304416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.121931649 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106954682 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087242704 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.114733267 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088074861 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.107888689 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094722888 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.116122548 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115341211 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091730014 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.158316042 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.115760703 seconds)
  done (took 7.549521332 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.781530473 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147752611 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084901636 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.886320507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111085505 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121745311 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.79084106 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107559979 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23054305 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.803272314 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.098846119 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12257387 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225450029 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248898476 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.137997079 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308712577 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665565274 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123337867 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135904384 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.123440508 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11705005 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133063272 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102817832 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.446804147 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109217478 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085068905 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11392925 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117064648 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157581908 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085607597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110364868 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176013902 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.262508885 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.178183998 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109341253 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083550179 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106910466 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.1652114 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264835402 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190935866 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.170971975 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103763625 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084994809 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.118227084 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104287512 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103062453 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161770763 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170756508 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169279659 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11093154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096782287 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116777768 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118555799 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159754742 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083141295 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.334913156 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.338569758 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084601196 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1160579 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101261318 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261705102 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084925296 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224459219 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133842797 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188337483 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107096149 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760023727 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184945338 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084736727 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.114025355 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092694369 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112086798 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.094655646 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164754155 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388135506 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120989308 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.089625183 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105858032 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204633153 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084653857 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106777001 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160950562 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108127652 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093335045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121430781 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097348489 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189751204 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245539379 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.097926815 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117202991 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0890434 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120370179 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10842965 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.207652518 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194561997 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176350115 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210274032 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097132656 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.182050977 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.164779611 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095869942 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.167232771 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.115759608 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123683669 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097534377 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214765157 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.13902991 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086709677 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112455237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091778462 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14114455 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110808463 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093265473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165429374 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504504919 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.163864368 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08155423 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111218104 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094100977 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159057699 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115014051 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259981531 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094877153 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164439728 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114551907 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081825953 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117496528 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161510966 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120727346 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09419736 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119926037 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093073122 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.268520635 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195628706 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121164916 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215015015 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176215272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117071775 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170310163 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115307497 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165766311 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095416857 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117362295 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086806679 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77600884 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120355152 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093381686 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112109434 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.191770457 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085351187 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085960437 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108066131 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081850396 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802969417 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08764424 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105764166 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086886271 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.116126154 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09362793 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113814038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095382408 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158833629 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230523325 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119520325 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.091624987 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108286013 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160019543 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.08691958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.108817757 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08537713 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108299263 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.094237413 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112180143 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087397812 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168814097 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.178920417 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196992759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.576779638 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085300824 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.107296224 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205560146 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107413971 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282105422 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116246033 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226085269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164317245 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082872663 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335325109 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165454809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191123226 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111602903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169955486 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0831566 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114634912 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.158610638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084655232 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114968399 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156628445 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123108507 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099461722 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140152222 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084735921 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247379988 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.083063433 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166413695 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110026428 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09619285 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.306694413 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085139475 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127708896 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.159073044 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113038711 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086093663 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.75090604 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085590819 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117552359 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093701109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221109889 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163147606 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116047078 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094168996 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119020695 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160050786 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209812778 seconds)
  done (took 42.913165445 seconds)
done (took 57.940239565 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29988058 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.252046555 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252249611 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18589092 seconds)
  done (took 1.968680111 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175380372 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123697646 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.141902441 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104216244 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125618668 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104532608 seconds)
  done (took 1.681799986 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.410968774 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.332650048 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.278571277 seconds)
  done (took 1.927378388 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.241641226 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240615028 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.340791976 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.394065723 seconds)
  done (took 2.223628181 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.199177912 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095998448 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119307101 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110243567 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165875551 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.204227232 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137668661 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.146805524 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103566726 seconds)
  done (took 2.233076651 seconds)
done (took 10.943403257 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.219945766 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.253032268 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.137090568 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123112554 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.136955894 seconds)
    (6/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.275789832 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115167129 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.181330084 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.103624397 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.122027785 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098731277 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118899531 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.091686555 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.104627345 seconds)
    (15/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.247828476 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098833551 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.212470179 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134249889 seconds)
    (19/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.244169596 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089715967 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.224652884 seconds)
    (22/286) benchmarking ("sort", Int64, true)...
    done (took 0.225819296 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186315938 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116340412 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.096536834 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.153689567 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.20277581 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.20511513 seconds)
    (29/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.191800746 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.115986823 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.238017414 seconds)
    (32/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.191372876 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091241837 seconds)
    (34/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168348517 seconds)
    (35/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.12099453 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.143818241 seconds)
    (37/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.175736294 seconds)
    (38/286) benchmarking ("sort", Int8, false)...
    done (took 0.201004368 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116159135 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086290804 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.119517352 seconds)
    (42/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09422052 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111264636 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.087397447 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.121381449 seconds)
    (46/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.19545619 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.109325789 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.142082762 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.085200007 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.190328185 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114969527 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093500136 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111083233 seconds)
    (54/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.176181501 seconds)
    (55/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208676774 seconds)
    (56/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223347556 seconds)
    (57/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.1040671 seconds)
    (58/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170149878 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089293142 seconds)
    (60/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.160343491 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075796416 seconds)
    (62/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121575086 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087484404 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113073957 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166618572 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.096723674 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.075554451 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.240123531 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138810825 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114317663 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088686046 seconds)
    (72/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.112059149 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.111170285 seconds)
    (74/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.122093685 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.166657791 seconds)
    (76/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.214999776 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.106170049 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11296501 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.133758548 seconds)
    (80/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.215062849 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.155420098 seconds)
    (82/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.084698182 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.10889076 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.227580715 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.190932036 seconds)
    (86/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183203607 seconds)
    (87/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.119396351 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.178188706 seconds)
    (89/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.160473615 seconds)
    (90/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.110663799 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.102107839 seconds)
    (92/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.119114788 seconds)
    (93/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.133115271 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111876001 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107601203 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121752158 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.087897343 seconds)
    (98/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.15812743 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089286074 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.116933049 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089683581 seconds)
    (102/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.182666645 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089541127 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.140018031 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.101092061 seconds)
    (106/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.135124558 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119302695 seconds)
    (108/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152766232 seconds)
    (109/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.095698317 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102060906 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.156319202 seconds)
    (112/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073573657 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.121994781 seconds)
    (114/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091437722 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.156261443 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121689454 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075092169 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.088698684 seconds)
    (119/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.153960624 seconds)
    (120/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07133802 seconds)
    (121/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.118668839 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172309171 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.179948517 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096683729 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.180689903 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095571311 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113315342 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088765959 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.095044985 seconds)
    (130/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.073760889 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118474615 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19317768 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239214898 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083426563 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088901856 seconds)
    (136/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097829454 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094541256 seconds)
    (138/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112139087 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085152603 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.111346776 seconds)
    (141/286) benchmarking ("sort", Float64, true)...
    done (took 0.234654834 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088916557 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112720457 seconds)
    (144/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.10894481 seconds)
    (145/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155605685 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.084200085 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116155439 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.074339597 seconds)
    (149/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.195203603 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.086604327 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.109169478 seconds)
    (152/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179378257 seconds)
    (153/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07147012 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072511311 seconds)
    (155/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096251566 seconds)
    (156/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.112022812 seconds)
    (157/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094530517 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09001887 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119257437 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15778464 seconds)
    (161/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.179297078 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.188698328 seconds)
    (163/286) benchmarking ("sort", Float32, false)...
    done (took 0.170592106 seconds)
    (164/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14113704 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115164739 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077742956 seconds)
    (167/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09994903 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.158859471 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123826864 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073765124 seconds)
    (171/286) benchmarking ("sort", Int8, true)...
    done (took 0.226193872 seconds)
    (172/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.095435597 seconds)
    (173/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09944709 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138784853 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.092767884 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.169944513 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.073888701 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.114281998 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073072664 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.120181184 seconds)
    (181/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079734491 seconds)
    (182/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.096923927 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070832038 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.0831633 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114165565 seconds)
    (186/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071702402 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.18225374 seconds)
    (188/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.073167577 seconds)
    (189/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.09418315 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098046286 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.121119473 seconds)
    (192/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.13183895 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131539555 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.112375698 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088396315 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.112677302 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073376757 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075957156 seconds)
    (199/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.094383936 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 0.225713998 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097802743 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110550702 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072314117 seconds)
    (204/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115387563 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.13801641 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.18070597 seconds)
    (207/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.097651804 seconds)
    (208/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.097291192 seconds)
    (209/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07387246 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120205942 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099192188 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120785775 seconds)
    (213/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.072559906 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072012878 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.09862356 seconds)
    (216/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.071662417 seconds)
    (217/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.146285654 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090273819 seconds)
    (219/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112788307 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088201597 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.107625673 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.072502079 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108237686 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.108703273 seconds)
    (225/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120638894 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090371576 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.117992253 seconds)
    (228/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086169 seconds)
    (229/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080317059 seconds)
    (230/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.114783645 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084035128 seconds)
    (232/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.10295036 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168375927 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.072640766 seconds)
    (235/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.08642773 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.102384229 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072878522 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.098949118 seconds)
    (239/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087515163 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107385027 seconds)
    (241/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089598398 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116298266 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071951906 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091239974 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115536505 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09705036 seconds)
    (247/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11421088 seconds)
    (248/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087247344 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114722149 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.072316603 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095660295 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.072781714 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.075045418 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107820145 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088616517 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.115076877 seconds)
    (257/286) benchmarking ("sort", Float64, false)...
    done (took 0.169086463 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 0.23625427 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089204869 seconds)
    (260/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.071718545 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117503385 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.073769277 seconds)
    (263/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116313741 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.102380454 seconds)
    (265/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.107874346 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084289878 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.115761774 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.073221418 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109039818 seconds)
    (270/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07331259 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097596419 seconds)
    (272/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112343809 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.110256173 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.072155191 seconds)
    (275/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.074965919 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130735673 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.112148503 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111399335 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.121485474 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.090270338 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186747708 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.08771876 seconds)
    (283/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.095632041 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086372746 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110753191 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239057696 seconds)
  done (took 36.356954461 seconds)
done (took 37.271473621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097235915 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149825804 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094368043 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136944751 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097631494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124180903 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093561445 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.120657903 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096651076 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122908877 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095666849 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102391643 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.093993838 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118150885 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09514486 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138865069 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097246196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.114301336 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.086245111 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110094728 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.086771931 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110890005 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088311524 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102519891 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094458678 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116639615 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.090222416 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118220589 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087373331 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107850939 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.085745554 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090492499 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109035791 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.098134743 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.112853074 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086262241 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.118672588 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093129989 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112378723 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088293533 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115569508 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087755217 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114089971 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092029088 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.086635883 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.108969797 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.086512918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.12149585 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139605763 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08758428 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091856155 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.118571181 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.094101748 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11575508 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.086018338 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.110203614 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087736623 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139823348 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.086768435 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111844185 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.091708505 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.114628216 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.085983627 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.110750492 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.086841665 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117626195 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094874068 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086039577 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117517543 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.089306439 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107779858 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.086602044 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109030662 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08482118 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117114041 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094193972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106156057 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.087666534 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.090892205 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113033711 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086709123 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109774326 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0888266 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111644508 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085583942 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102495943 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085180415 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.088522547 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111069476 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.085909732 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11373951 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.089828745 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112185498 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09570008 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109774371 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.087994497 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111594175 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08749035 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113816852 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.085797778 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.107465318 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085506469 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.091483446 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.10832641 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.087684903 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.120650702 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.084937479 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.114097856 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08651666 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110010379 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100342738 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117523547 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087440614 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111782608 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08374302 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.114053421 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085127394 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084734093 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.108605775 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08664573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.111962207 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088173906 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109504069 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090672698 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.121421151 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.100619322 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.108994721 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085636904 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087694441 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114401615 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087593917 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108815129 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.086564815 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106106413 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085388199 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108905833 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.089987424 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084869459 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.111223797 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0871508 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11096635 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.088652998 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112391595 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.08736989 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108742223 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080812856 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114560484 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0857368 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088208477 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110813648 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.087042696 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107908373 seconds)
done (took 16.320730187 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093835874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185281569 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146116336 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147313112 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12092792 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129803784 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122948807 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118363913 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119716667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140983667 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113848899 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133765358 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148144191 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.094618441 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.13059498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.118213721 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.093260387 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.128311937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127237558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138164887 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143565124 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094938614 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.139535575 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137817762 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093026639 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149319408 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.122891925 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093117978 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121959787 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102771848 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135021838 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097657433 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.120488071 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131067203 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101087268 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117970763 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104259975 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114382068 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094526222 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.118999592 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132624924 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.10676726 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116898353 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.101416858 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118414142 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122432373 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093102551 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.116466364 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094622482 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.1136555 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.098845413 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139276156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092275189 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121597943 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118763674 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09399524 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120333073 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097560821 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120817872 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.09779637 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119421019 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097214088 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.123627347 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.135779834 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093683186 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120708131 seconds)
  done (took 8.753653865 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108806868 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.147991638 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.127595915 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102122461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.12317538 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083156324 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082975945 seconds)
  done (took 1.746381415 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084675296 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138335552 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118255274 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142061005 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108633474 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.144358293 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125688961 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08494039 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132491814 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.094944403 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137377295 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162677441 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.085762003 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121901984 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119592985 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.109516862 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119295649 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109090585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092912621 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.142188371 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091955192 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.131543255 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122297269 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.085407561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.130481845 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.086167138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17506329 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09556765 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108498851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090565019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114185106 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.179200787 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107089276 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121006686 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082786305 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137598894 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130030041 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089558108 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133599325 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.089080809 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130555147 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090551629 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116214588 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090688127 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117516875 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09989776 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120920974 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.093254555 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116284432 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113242845 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.120953578 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106705426 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111384925 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089090933 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.119873413 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091536563 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124539419 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089845449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.137910124 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091620386 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136336564 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136050964 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106591463 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136800892 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101583659 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.131289469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105324821 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114965683 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092605667 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117561989 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136157091 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088422845 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120015727 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100116962 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118033865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112515764 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137232573 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089431918 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12352245 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089540464 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112883075 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086292031 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137716199 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089044924 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111385673 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103249843 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123032292 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090268027 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113870634 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.106781036 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114153623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096751933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120766413 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088834041 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126270421 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.139389169 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095721145 seconds)
  done (took 11.977971275 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087503334 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087611348 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.117959619 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087904405 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112305389 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087338426 seconds)
  done (took 1.566422888 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11505339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114881383 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.101260582 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118447616 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128434011 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135680631 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.135645701 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095615154 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13116453 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.100118551 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.1351218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111049408 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.141521491 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118205713 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.110087932 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118839199 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110587612 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115563481 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.099982477 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115111717 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.102983909 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119062238 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.090109964 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134887465 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.093813397 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118937546 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092869587 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126655165 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.099792763 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121549667 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093140595 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118811016 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093311396 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120657119 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.134986849 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.093543482 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114425999 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.095164636 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119324183 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095148148 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137794101 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.089480805 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124133719 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096159091 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122530535 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.093411222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.12205163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.092209089 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135242797 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095752504 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121274003 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.093815168 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11945524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096291855 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119086334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096308281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121968452 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110266515 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.119025569 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.093002616 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11572993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094182974 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122133136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119451843 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095025058 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120972188 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09330803 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.115208934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090636656 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092064578 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121243714 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.090304218 seconds)
  done (took 8.989327078 seconds)
done (took 33.998480132 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669610874 seconds)
  done (took 1.64988472 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816830906 seconds)
  done (took 1.799073939 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.543214811 seconds)
  done (took 18.551715466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.464353414 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554869602 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.965728346 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15992143 seconds)
  done (took 3.125866802 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.949799312 seconds)
  done (took 1.951557554 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289426614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233320281 seconds)
  done (took 1.510908177 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.80730873 seconds)
  done (took 1.80530027 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.499537615 seconds)
  done (took 2.494925535 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334789756 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.169287765 seconds)
  done (took 1.510482268 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.558444943 seconds)
  done (took 1.561583243 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.115972554 seconds)
  done (took 16.11744355 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.2396089 seconds)
  done (took 1.25615633 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291057057 seconds)
  done (took 1.295983317 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.58663778 seconds)
  done (took 4.588381424 seconds)
done (took 60.21169192 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.095262903 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099749265 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.125438235 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096406146 seconds)
  done (took 1.416762389 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101202274 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119157092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098260463 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.118992994 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101036668 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120051642 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.092642473 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164688804 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092765728 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.120889311 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093853341 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119151743 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.094661361 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119978998 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091188308 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.120819845 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.095724038 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12131596 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.094868953 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119579285 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09046099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120863561 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.095633256 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119114582 seconds)
  done (took 3.639027351 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09599355 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090651973 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119181356 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088914695 seconds)
  done (took 1.400804195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099554952 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131509082 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105786603 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12557726 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106438345 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.132197111 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088086667 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114472629 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.090752629 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12552159 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090319584 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1366007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.105544107 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.110851943 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.100777822 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113717439 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085072477 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.133291883 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099103962 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12780738 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088858658 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124978379 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.097000402 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130422874 seconds)
  done (took 3.675687516 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169653775 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12783868 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137911988 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095313783 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162903059 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115149753 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114219023 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139173625 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088635809 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126118855 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.091988058 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.165455773 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.097150823 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.11871948 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.088985102 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12167739 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.09692785 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123851362 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090528922 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128147146 seconds)
  done (took 3.410649426 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095788103 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.089504593 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.112238659 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087629834 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122423389 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090835473 seconds)
  done (took 1.610744832 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085939484 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084196998 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111239806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085087655 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.114642521 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085084482 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083595942 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11117761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084851921 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.084570676 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110603356 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083237702 seconds)
  done (took 2.141400345 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.374217728 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.113776189 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.090950165 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.112623839 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093145707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.114530557 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100933802 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.11530131 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117377577 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.115420367 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087666031 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11756613 seconds)
  done (took 2.571436386 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203338806 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094195938 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259886485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346663251 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154248071 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162441292 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275770743 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160203522 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18062559 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134833939 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189187777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126727261 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1502369 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175985337 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136500344 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.173271002 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171198674 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196290527 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118176819 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226109942 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159469435 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136424799 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174118053 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148707599 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134505203 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153943842 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09035347 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12482231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168489397 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165145717 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169750058 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145123419 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109726082 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195027068 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228447866 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175378177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299140152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128856392 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.18373065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180084743 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224513354 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137720962 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191968541 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15244194 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099390949 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178482381 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154222012 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17835932 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129643478 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110818569 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207721131 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171972394 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176129196 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107545706 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323907902 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118998743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144203752 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179717824 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182541235 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187141187 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165307859 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09152898 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208458239 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177657903 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176356826 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115819502 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163883609 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123380856 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171727661 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19162225 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174717878 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162059547 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181391412 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132228713 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161694418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166846159 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149556883 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147139416 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156947677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118995811 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120313014 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133877387 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126284096 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157406149 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12101325 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199998102 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133027017 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.185576595 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200128069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154002947 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130277069 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160329204 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161790353 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144319395 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.089875104 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142472892 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158337835 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15388006 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101947195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153110687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139788977 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.097283604 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148578301 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121657822 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129111357 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.131960781 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163957748 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161898583 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.098617582 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161039032 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147612367 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.155320615 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167858877 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182119818 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101542531 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129554819 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18987262 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154205617 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103790911 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171657293 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182176139 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.161998162 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136081367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165172388 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189654567 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138058096 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183229014 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109526574 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131897964 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.147346438 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156084888 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125235264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153676204 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127468171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122004451 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214843096 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097312851 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134527752 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170164986 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096644949 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127040163 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111797083 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133288577 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139579565 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.115988185 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1336208 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153649707 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156448289 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123054817 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155584867 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138460205 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186577457 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131374214 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.157183216 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11662158 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11687187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.175438116 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182015635 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098011063 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221155416 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.164934971 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192989547 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162554077 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100446959 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173012736 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12714381 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088659192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161734203 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159289732 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160173352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178627244 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189737663 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162428288 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150748449 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146852895 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16425965 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16945938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151918073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114450756 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159661001 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155735913 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09289145 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122855558 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.096578428 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139095848 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12755554 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101827386 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17718911 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162189043 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210689464 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130321838 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139910177 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177836008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122936579 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131856745 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.167989404 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135489936 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179861704 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176946047 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164814799 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139876888 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170149202 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089377506 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120715437 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.102111653 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162144254 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129824013 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102731412 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142128348 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176968143 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170353087 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148369873 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198848281 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16138966 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187226705 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120283386 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134620673 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166838673 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156094578 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180472953 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105179591 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156971596 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173635372 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139261598 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184790403 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158107259 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13684446 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22335058 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153009828 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099978269 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146757854 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164075085 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137481938 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133180905 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143559093 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1325222 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122406494 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131703994 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123617701 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176866715 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112916739 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204295411 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125272012 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168515501 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124310395 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141046804 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15561612 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113990555 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114870632 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165502845 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182761903 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140725531 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126474116 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170093431 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128591302 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307567583 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183128841 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180856604 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135074588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110635011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157404035 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157619668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160261959 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175073058 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140118514 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175726358 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12657516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142829349 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13228655 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11550697 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148335095 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.149646626 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100730462 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150093613 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140320689 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17897276 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140352767 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126758738 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161217721 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14589235 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146529684 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112044099 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196392331 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155776105 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173879228 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153332481 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1618136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195703303 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092931055 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126707872 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096224125 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175567376 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130967819 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158863648 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.182764277 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193045589 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154572781 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161878485 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135513925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089686372 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156096073 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146369241 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192519711 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138778197 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104751604 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184083011 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148099712 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126530566 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131681916 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306037773 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114706115 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171133686 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.113927185 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.272920554 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094778036 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128248392 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128093479 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166486882 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136214808 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.17734717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134538597 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14176752 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157248295 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135521521 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184786913 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199722517 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165986176 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171574411 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141116866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154007195 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130345887 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171500288 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140769778 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141452246 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159088769 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176389918 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.182818924 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.101585052 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160028598 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16116775 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157207437 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169890188 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102077187 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223187364 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099920793 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161163467 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137764986 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09287022 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155295099 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182916845 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129378071 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171617919 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153827039 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100607576 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124064229 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147131606 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126484595 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138840135 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.125958756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174614838 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093922832 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160515638 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176888904 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099343941 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152446028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144215628 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10619845 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140018122 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143368784 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104229847 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167130751 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176540984 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12837165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172975181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170705336 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15975486 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127341722 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141702646 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664139743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.09683872 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178322069 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144695424 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181834969 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145194424 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134166979 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158830685 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147136234 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1642521 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146860214 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189789571 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160677632 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155372149 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128626921 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142109441 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112556057 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129204542 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148400049 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130638757 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137982646 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133507923 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.125485694 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141617927 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142599156 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106022417 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179445446 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143257613 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177452558 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178128486 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13542861 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162462246 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170869957 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09931984 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157561956 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168543608 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139964428 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146905526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100556202 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132231451 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175396389 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09370058 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157993585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158329826 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128523609 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159820788 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132072196 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157107593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110800302 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158260777 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127811865 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151320195 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125693525 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130575149 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125163322 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123706624 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154967959 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.155715441 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094097652 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.168304442 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176848607 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093272098 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130471809 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284955056 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154287435 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188522127 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.150016948 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102133135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141373003 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142985615 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.121023341 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157016532 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127087923 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100618913 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.128814383 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.175626441 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.123113869 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153180791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18139768 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156747737 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196339075 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133265391 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.261571113 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10672144 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152545748 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09876673 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128669226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14051915 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103342538 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14210877 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187351712 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176764208 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150091436 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1123783 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124388182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095579701 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131253071 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159310666 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150812334 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125998277 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140029135 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11568526 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112126655 seconds)
  done (took 74.009336707 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.142898315 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129189566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145600451 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192807891 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163563067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23941274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202215356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223840346 seconds)
  done (took 2.543151765 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.09725541 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15487222 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.136392305 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121751361 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.088349222 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.329009557 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.134843734 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.119629224 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116243588 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.132966365 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114789138 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.525498504 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120884693 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.093218816 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.109434367 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11330244 seconds)
  done (took 3.600564518 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.283587647 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532222651 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.108577335 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.226235909 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.22042475 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.170244279 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.726790577 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178740281 seconds)
  done (took 12.544805145 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118527203 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.109643611 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.160991138 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.159979155 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116023209 seconds)
  done (took 1.77032597 seconds)
done (took 115.335164104 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093444476 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.094506254 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121462702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.095943038 seconds)
  done (took 1.496862783 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107108141 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077633014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109211019 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076232106 seconds)
  done (took 1.476583071 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.416543616 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.076535187 seconds)
  done (took 1.630811992 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113173206 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.130865316 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103507857 seconds)
  done (took 1.460367331 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100240983 seconds)
  done (took 1.209816747 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094448607 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096445168 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137588145 seconds)
  done (took 1.437464748 seconds)
done (took 9.81858512 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108932254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430653502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383698242 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134830923 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69183408 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4053888 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006151439 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15348049 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164721213 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087454694 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133968482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667737378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020821301 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340716579 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.005732091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.335886842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702283698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088577865 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12227259 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089354449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011193299 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086979599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117273569 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090997552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669655557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420014381 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.087129967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.382634708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.086947566 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123178285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.373660425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117151231 seconds)
  done (took 16.737883516 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093692751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176067537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095281503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118036744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.091905192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.117117732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098967671 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.13006348 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178806508 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087950245 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134692745 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088002079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092860983 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118025794 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107333018 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117084876 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.091244479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118381218 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094607237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118488846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108151592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115756427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089946838 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090452817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116532716 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100669253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117808137 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100746387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116374696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093903857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119785517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088412648 seconds)
  done (took 4.635145643 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.137958505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185252377 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096547694 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151613557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166536047 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090680369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201440258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.156003761 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181092516 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087807269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135821757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.088285359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152875003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088545961 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137335886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088179907 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120309246 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.090011794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124062862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09058591 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136541211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088116574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118293609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089918297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088275565 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130539128 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088058753 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129571708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087998718 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123338727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090960116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117833737 seconds)
  done (took 4.975287726 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09521327 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.097853987 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132800359 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133818334 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090933947 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.095487378 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.125730918 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09014273 seconds)
  done (took 1.97379759 seconds)
done (took 29.430226336 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104960443 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093467473 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130532212 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099443562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127173437 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101303177 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.115171856 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098397431 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099161737 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.125001512 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103200046 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115739459 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.08923277 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11580447 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.100426302 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.091698833 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132068564 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096595387 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136724758 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102857156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.117701328 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098639512 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127077171 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.106936438 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.136588179 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108574182 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133030449 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.094001937 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118111674 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.088061784 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131192833 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109982945 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119059747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103913803 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122017961 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.091472221 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.089183537 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118699082 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.10214699 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.128771583 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.093016866 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128800809 seconds)
  done (took 5.750080124 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.115771279 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.161040519 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.088478821 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.11872482 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.088763296 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.156307979 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.123368506 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.11776914 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089466427 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.143519586 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.114234403 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.119011576 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.089214585 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.118383596 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088989491 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.089481011 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.141454921 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.14293546 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.118851293 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.148908258 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.132464997 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.119370081 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.153334474 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.112791975 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.159304227 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.154000148 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.110418651 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155548595 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115861177 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.117331896 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.117910489 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.149465476 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.088422804 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.118286082 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.157577028 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.123196833 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.145306484 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.159117673 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119715359 seconds)
  done (took 6.032924163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096846843 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102195998 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.138594144 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182478717 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133912633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.126006401 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098636357 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135891281 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105129979 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118451424 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090283006 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148002853 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107463673 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125650119 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089478939 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131932598 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108404974 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.119569391 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093387311 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106841412 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135510873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101012544 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130244291 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.098946 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117998446 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096169069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122223345 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.103522238 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123345737 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.09536878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122193987 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093088031 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120295764 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.100455592 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.091952787 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125470938 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139907808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097731294 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.09732889 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120652092 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100994849 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123577241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.110102524 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157844062 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.088945218 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125038008 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094703577 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.127669949 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0875994 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136559592 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098344938 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.118278036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103467541 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117777353 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.086948827 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102236 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.119416447 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.091120242 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126240325 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095937825 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138119226 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.09283236 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132387654 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089414511 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124182932 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088557521 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.087777356 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123403574 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10941272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121225072 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.157103962 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088587754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.093664565 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.127134717 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094419408 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128846694 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.088249682 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130755495 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099456535 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122469037 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.098247563 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091812467 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122497217 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105911468 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1334536 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095932067 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124174681 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094964054 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122280814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089673696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132711856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091265973 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123177748 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104433203 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11981951 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093079492 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.094747217 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123547063 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.088118231 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131465016 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.093606615 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118183809 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.098303599 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1183485 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092869492 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.09758242 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12279665 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.089126559 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123180151 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.09494526 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117612715 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.091671922 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.121752348 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091125804 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130668429 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095874405 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091050272 seconds)
  done (took 14.147269621 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.231777256 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215127232 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.189127155 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297770307 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.108517312 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146075865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211374705 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.164150391 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089458474 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158335885 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17785981 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184530322 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.174797408 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187213447 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172776744 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089955858 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.138585003 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140607003 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212603885 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293813135 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108227248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133799297 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161514738 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160227934 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107448758 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135983876 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.146814474 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.110975183 seconds)
  done (took 5.790988722 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106173453 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155175025 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096918261 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145629445 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.145961569 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090851564 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093846931 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120458871 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102563041 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135796962 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.090917515 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126533462 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.095085481 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129496952 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.089085651 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129656354 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.098971861 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.129644839 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091840392 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.122671937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103269685 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137907722 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094867375 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121659083 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.105752345 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122623493 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091165301 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140721732 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128887129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115181138 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086492719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128539119 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.103924952 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.120314744 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.092084826 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123508719 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091272856 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.121790169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091491964 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087082555 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119434054 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.080554779 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121410354 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.104533476 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.126933001 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087985824 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125217784 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.093499553 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126659291 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086363299 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091093079 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123214948 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09388869 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13091892 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.09279195 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126661163 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093809494 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09200118 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.128487223 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092323813 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117052655 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09101717 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126308181 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09440605 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12856295 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095402719 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.120834389 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092116985 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.094374425 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127188326 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092352247 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128999597 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.086418308 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121919899 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099601065 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12870458 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093530256 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091637604 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123071417 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.088665235 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109108204 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088633933 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077000873 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124689757 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089595859 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122090539 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092486865 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125254315 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106243004 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12852891 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096487088 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120346325 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.091674433 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12422756 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087412529 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093719031 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138081283 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13995326 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088716261 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.08685684 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135258602 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091513295 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118292878 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081693857 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130014752 seconds)
  done (took 12.626101641 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130915808 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.17076593 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121572684 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109058747 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.154725033 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.13022757 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128613079 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.096852714 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.121663594 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.10847358 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123768137 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.0984768 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093235884 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133967479 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161127717 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099525079 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121810198 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103835686 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125054605 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143191679 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.139576698 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159668089 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.129139812 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123779536 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096067195 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156707609 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164609858 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103260172 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.132673691 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131665202 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133867742 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164458795 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.132652424 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125620346 seconds)
  done (took 5.52107972 seconds)
done (took 50.98645 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.222977308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.430898579 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.208659656 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.207670374 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.264840259 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.234168199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.22788361 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.402320371 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.992380491 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.209286391 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.206708596 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.205801748 seconds)
done (took 27.955829911 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.297374328 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.367711108 seconds)
    (2/2) benchmarking "String"...
    done (took 1.540954117 seconds)
  done (took 4.046905143 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.208641069 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.207776431 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452358756 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.208559081 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.225897992 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.225472165 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.221245777 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215573453 seconds)
  done (took 15.895229971 seconds)
done (took 25.587933216 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.266757136 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.405000651 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.489606575 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.23642899 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.210296329 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.217042963 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.211825181 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.258864315 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.211744444 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.210179954 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.210159855 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.490013888 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.227680157 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.613495723 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.215772053 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.220767643 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228316575 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.444313425 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.222247403 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.259718366 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.197533741 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.219225865 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.235369917 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.23029139 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.218852985 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.22486006 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.238443478 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.212844181 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.40115263 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.233214619 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.25490638 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.215252642 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.245841422 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.219222088 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.323889917 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.237802344 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.397353232 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.221524563 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.206915967 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.212084017 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.407925777 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.621356038 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.21279042 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.213282681 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.213093973 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.279098104 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.205965776 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.934645431 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.217092775 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.220175175 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.278486336 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.601696497 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.212523896 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.225275393 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.221935974 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.454946261 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.245525994 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.24886072 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.242393749 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.226007891 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.213965413 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212234255 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.264174486 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.21240465 seconds)
  done (took 144.325159709 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.213369746 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.215508294 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.216504472 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.217915423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.215508051 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.217304935 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.213965668 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.21339782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.2178962 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.220078439 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.216368292 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.214070302 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.217127208 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.192086779 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215930293 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.237330834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.218206489 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.230985156 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.23420336 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.215173757 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.221680108 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.217572998 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.213686705 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.215144891 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.216726083 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.289993225 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.246382382 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.222767245 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.217359747 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.216689021 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.26047556 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.222039437 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.847410802 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071432552 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.231587728 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.244046187 seconds)
  done (took 80.651331256 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.214780048 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.216045978 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214193552 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.216070789 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.249479343 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216563722 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.806281541 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808538245 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.924887587 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.380523414 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.63249855 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.490887978 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.215725694 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310442626 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.231935632 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.216772891 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.232515984 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243133098 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217743013 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216842681 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.807402142 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.219732591 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.228313755 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.393239815 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.231030738 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250205695 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.614777259 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.232357348 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216567421 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250365802 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.55597744 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26645771 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21792138 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.629443698 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.912140519 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.331966341 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218974454 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249235125 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.218136729 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.501471122 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.216719059 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217052181 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.218042754 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221497434 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9321258 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.220832366 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.81039608 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.221040408 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.208946566 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.218976052 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.218566026 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.291955789 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.936812905 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.220342798 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218180637 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.221440086 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.219635676 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218544725 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251228523 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.316145421 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316062073 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221341917 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.222941726 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251976965 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2193856 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.449051511 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.218744209 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.8050189 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.279112598 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32637421 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809938922 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222380248 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316649251 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339990857 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219855317 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.218400211 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219956125 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.220109948 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.331903391 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.218381002 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.645175539 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397499679 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236354581 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.219815661 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.640183899 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.321395539 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219827255 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.632995231 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.224086278 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220337937 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974394992 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319144424 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220850222 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.221103943 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221795877 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.647966895 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814040057 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.494517625 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223894091 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.595952705 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228032568 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656401311 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.788031044 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94214003 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.223647968 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336832259 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.399139311 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238526613 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.221592616 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.647373916 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224924006 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.279264504 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.224371859 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.620577031 seconds)
  done (took 368.502666563 seconds)
done (took 594.61940135 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.863418996 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.85735663 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.97491695 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850365161 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.809414444 seconds)
  done (took 10.507077813 seconds)
done (took 11.658251193 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.908299276 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.413039309 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28474175 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414695401 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255571923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43335079 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.399827639 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242596443 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32763789 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.305738264 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.328111127 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276054901 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256892206 seconds)
  done (took 18.997148519 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555605578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.22362953 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288797169 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553121856 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262720137 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570699915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433460665 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.248585771 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427210174 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238217924 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236786812 seconds)
  done (took 18.192496832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557967537 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.224548321 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289806774 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.580634652 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263699065 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.573960637 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433115502 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247869 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443365022 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.24000724 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238229074 seconds)
  done (took 18.246976428 seconds)
done (took 56.587340618 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268664658 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394342258 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.251855879 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.239353473 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235306168 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.238183902 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.239994289 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.235119395 seconds)
  done (took 11.259080402 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.234657516 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231660157 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.232246535 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.232362696 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.233732651 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.231986093 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.231458067 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.231186276 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.234496279 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.235434039 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.234477591 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.235223892 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.233891477 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.232821512 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.236019524 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.235358994 seconds)
  done (took 20.893469841 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234942924 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.233336278 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231456862 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232828904 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.232515704 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.233006023 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.235187413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.233403442 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232907675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232125883 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.23442793 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.233634987 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.233854541 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.233417954 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.234347927 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.235535218 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.234637004 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.23510192 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.238045599 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.234860052 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.233317083 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.234549347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234425634 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.235145944 seconds)
  done (took 30.776492717 seconds)
done (took 64.08349655 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.230740347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.248420937 seconds)
  done (took 5.636335168 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.296710285 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296135709 seconds)
  done (took 3.751909142 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.236281998 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.237698162 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.23596585 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.237412612 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237398605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236556363 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236901064 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.237094414 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.237775247 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.237840724 seconds)
  done (took 13.529881685 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.236832226 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.235839634 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234493478 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.237481124 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236574242 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.235972133 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.237691495 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.238669561 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237952874 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.235493474 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.238688671 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.234689768 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.239035564 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234662765 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.238278024 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.235910355 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.235403196 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.235447951 seconds)
  done (took 23.418487841 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251255123 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.259531595 seconds)
  done (took 3.669879095 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.365167227 seconds)
    (2/7) benchmarking "second"...
    done (took 1.278570694 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345651634 seconds)
    (4/7) benchmarking "year"...
    done (took 1.33456552 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.27790636 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.2561275 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27740686 seconds)
  done (took 10.294275388 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238850648 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.44306375 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.549669396 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.815223538 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241825163 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24328085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.056717663 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.242441285 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.244928365 seconds)
  done (took 14.236450515 seconds)
done (took 75.69509075 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.233618619 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.249376574 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.240530097 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.244965373 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.577495666 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.260194204 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.231390335 seconds)
done (took 16.196983702 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.226804797 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.229681117 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.234389293 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237138518 seconds)
  done (took 10.088923742 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23712568 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551993722 seconds)
  done (took 4.951414712 seconds)
done (took 16.20153364 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240629116 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.241711358 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.237579662 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240174041 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.237378885 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.238245339 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.240693288 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.24016576 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.241270107 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.240405405 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.240904628 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241470993 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239263113 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238097268 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240290114 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.238875643 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237724931 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.242299283 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.239807175 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23863445 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.238698275 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241057948 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238976221 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.239126322 seconds)
  done (took 30.91575974 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.24228179 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.239184607 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241886709 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.241985073 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.240274658 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.24266244 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241156586 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.240134366 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.241321509 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.242627602 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239859397 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.240248033 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.242838393 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.240485635 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242570618 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239662525 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.243263077 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23883755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241690174 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.240354429 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242461754 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24053857 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.240421598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.24252392 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239896072 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240548657 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242677164 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.240481929 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242148684 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2407327 seconds)
  done (took 38.398508041 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.249478575 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250391916 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.244165372 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243563814 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24349982 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.244075268 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.243149672 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.245107704 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.244494104 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.24446265 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.244572719 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.244292777 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.244388132 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.244579066 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244162497 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.244601381 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2451294 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24622718 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.245069541 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.245112971 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.245266446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.245506657 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244466503 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244809451 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.245861112 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.245469954 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243569591 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.245146977 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.246026488 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244905324 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.244989215 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244691637 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243937957 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.246861617 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244897116 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244604175 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251202852 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.253186177 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245942587 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.246245721 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.246677368 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246070905 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.246211347 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24696783 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.24814082 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245937453 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246780935 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.245664985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.24560364 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.246315796 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245856408 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24575233 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.246201967 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2467684 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.247170462 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.246713202 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.247174676 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247980152 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.247603794 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247714558 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.247412333 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245790106 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24797349 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246125886 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246830001 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24715479 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.247513254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246720762 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.247725668 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.247286984 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247771711 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247155597 seconds)
  done (took 90.884369862 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247815146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244714036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244801815 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.244210868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245327116 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248028571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245851713 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248200251 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24543631 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.248956442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248491575 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24614917 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246670533 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248969294 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247883165 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246465206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248484164 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246692466 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.248709462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250170345 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248944488 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247129257 seconds)
  done (took 28.606823077 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248340245 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251141223 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247765748 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250722492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24902598 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250813119 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250508192 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251051601 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249588707 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24686106 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24647093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24928297 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248763819 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247520641 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2483233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249331176 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250099974 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249616563 seconds)
  done (took 23.655495771 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.249105412 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.24786425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.250625208 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247679364 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.247921137 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251135984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248158966 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249853063 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251234498 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.247274623 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250542319 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251163643 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.250080553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247808763 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250348971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249711795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.25014436 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248351425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250571554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24987752 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248179561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252377725 seconds)
  done (took 28.662157528 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251208378 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252451168 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.247877187 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248799836 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24871443 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.252043209 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.251463317 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248970534 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.252870186 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.252189416 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249688092 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250464922 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.251525536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24936044 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.250023773 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249235789 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.252494975 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249531579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252508064 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250224582 seconds)
  done (took 26.184323729 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253800654 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254632646 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.253842615 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2539711 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253626805 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253940653 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254315025 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.254029946 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254016783 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255043182 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254104259 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.254556118 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255683251 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254450072 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.255537733 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255062642 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256527472 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256803285 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254078395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255497864 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.255197116 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25638401 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.254713639 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255821092 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.254784489 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255754888 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254735697 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256745684 seconds)
  done (took 36.311258163 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255799083 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255218762 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.253361799 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253471307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252834491 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.252986976 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252903752 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.252773338 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.25603176 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252980001 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.255173216 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255534691 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255969764 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253757739 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256887674 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2559355 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255674314 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253146716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253235861 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253277783 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255359375 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25682921 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256108267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253754553 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254692858 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255919668 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25455187 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254280411 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256571783 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254192364 seconds)
  done (took 38.815967031 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.295225953 seconds)
    (2/2) benchmarking "in"...
    done (took 1.300535519 seconds)
  done (took 3.77280874 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255833122 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256170901 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255634127 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254222223 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.254514608 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256379799 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256524858 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254446026 seconds)
  done (took 11.220525813 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.257755987 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257488618 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.258202126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.258363186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.258181203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.25871351 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265891948 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278136169 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.258305148 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.259683946 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.266754814 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267253346 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.261067926 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.259623143 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.259691763 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262055008 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.259202166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.259297755 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258773604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260536355 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259047479 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260557027 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261302041 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.259033652 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.26015477 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.270063504 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.264699493 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.261024147 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.260116632 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.263794118 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.260905661 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257014569 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.260620207 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260136301 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.261266271 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.260289819 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268363768 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282081802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.267320276 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26184667 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261545546 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.257980238 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.261825434 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.262854855 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261854709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261514463 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260984616 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.259296074 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.260114895 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.265538718 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.266986606 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260445773 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260232938 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262893476 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262571392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267110876 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.280888647 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264112538 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.270350957 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.272749706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.274494022 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.271189471 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264845889 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261768248 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272969329 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.286845566 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26999857 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279680718 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.260007106 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.262452289 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267911853 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27465284 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.288432018 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261763909 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263131382 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.263260809 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263530757 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.263655565 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269204451 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.28607394 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26378034 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263427026 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274359026 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287406484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.264029814 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.264656383 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.263620895 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263584146 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.264807786 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273214702 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282904673 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.265140155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263174852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264445046 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.264241521 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264425977 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.262570352 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264268418 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.262189462 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.266201073 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263554556 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267495433 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.273780766 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264730599 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265612205 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.270083181 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266045711 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265531851 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.269920954 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.264705576 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265344981 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.266083461 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.271912621 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.262950748 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269852914 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.273103927 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264906602 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.266532774 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265461359 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.267069373 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276024529 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.292269384 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.267432068 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.265159162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.271042812 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277162047 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266378975 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.268647025 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265834234 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.263392533 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.263448856 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.267511026 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26725861 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.267136265 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267278276 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267638175 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.264776443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.26704202 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.266880397 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.268105133 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.267785052 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.266614355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.267715236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.269187465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2675606 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.269707653 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.273199031 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.267651167 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269852259 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.269340118 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.26505329 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267844942 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.26870108 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.267870345 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.26885942 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268006665 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267560149 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26838104 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268447525 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268932246 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268226612 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.269140318 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272444702 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.269087873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.272039902 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.269419311 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.266674316 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.267402783 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26914019 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.268592506 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269002069 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.267861032 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.272978017 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.278412973 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.269210322 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.269839028 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.273219835 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270115873 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269728654 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269790675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.27382826 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27870006 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.27031655 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.276287078 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271106806 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270109176 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.270513699 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.271658329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.269986982 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.271942953 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.274011431 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.27830832 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282754159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.296681223 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.272000785 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274259416 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.271444242 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.275276989 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.276078193 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.271672219 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.271662089 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272939565 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271646786 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.27144017 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.272660476 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270607832 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.27128702 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.271689505 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.273007912 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.272880024 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272239621 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272631269 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.274417672 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.270002192 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272598348 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271322457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.27160939 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.269121146 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271870913 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.271723021 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.272367757 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272348349 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278766904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.269920573 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273510905 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274638733 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273253845 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270882705 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272691192 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274866016 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.273528741 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278746558 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.292180617 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.273763222 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280399794 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292031413 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272637111 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.276346765 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.274180262 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270117973 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.277216643 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.281950739 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273438928 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.274577914 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.274639736 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274840817 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274026582 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.281107646 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.271657707 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.273577941 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.275697882 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275436033 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.271658483 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.276748711 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275752773 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.274506469 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.276155394 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.274636125 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.275314197 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278241856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273942229 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.275604642 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27558783 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278129366 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282895092 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279157146 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.273586069 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.277152809 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.2758404 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.28075971 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.275619343 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.277161934 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.276425051 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288194295 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.301118155 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282879018 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.276678425 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276155024 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282056897 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.277623847 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279991957 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.277767232 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277815707 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.27866443 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.277372037 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.273370429 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276498793 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.278486198 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.277700877 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.279251302 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280110812 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.278061057 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276778532 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.277787933 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.277824246 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.277709689 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275286484 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.277649842 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27989844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278886482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.276614529 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.277742876 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284354257 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.297978654 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27931938 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.278536661 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27742659 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.277624877 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.277685927 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.278167032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.281512601 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.287273248 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.282271686 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.287397444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.281535789 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288609147 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.278323793 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.282633797 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.287306747 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.277315178 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.277873519 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.27817486 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.279851292 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285892371 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298001582 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.281386038 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.282386997 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278785407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.280043753 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27881011 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.279860545 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280201788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278914801 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.287153274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.302543759 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.284188663 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.282066241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.276666428 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.280251332 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.281824187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278887336 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282907585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.280585391 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.281922239 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.281871655 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.28032653 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.28118664 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.280705134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.281538191 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.278288315 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.280781562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2869759 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.303307656 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286115594 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.282133092 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.287815549 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.280418105 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286832802 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.300838694 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.281942115 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.280319261 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.28083181 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.281634783 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279957001 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.282150727 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.282455747 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281977406 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.286454675 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.281251726 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.285404119 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.284098934 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.281242674 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281562692 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293260533 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305628779 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.28388642 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.287051124 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278974158 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.283819836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.287608364 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.282954605 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.280925069 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.285900178 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.292512994 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.291974987 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283240349 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281653936 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.282855964 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283843455 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282974607 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.28310812 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.283441231 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.283112443 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.283874748 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.284058852 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285258929 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.284000787 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.284058226 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28541587 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.284342676 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.294409336 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284900261 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.284258482 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284358474 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.284886792 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.28453876 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.285224702 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.284165554 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285650655 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.284875076 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.285194727 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291366789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.292332665 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.296867439 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.284516308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.284925538 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.284607007 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.286807682 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284629937 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.28544102 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28576723 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.285049681 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.284230011 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284360615 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.283237077 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.285447754 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.284018902 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.285491128 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288398567 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289556887 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282965605 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279570646 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281319789 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282562379 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.280549137 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283218659 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290642382 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285805641 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293008485 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290862654 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287342915 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283680381 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287096083 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291782196 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282212659 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283494718 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283855071 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283375044 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285498904 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.286813237 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284608194 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.291161279 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.282856292 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282965404 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290430226 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30648328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283614429 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283873894 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288964465 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.28379093 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.28017587 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282950937 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282771822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289597687 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302858117 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283683982 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284611827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283453111 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.284185478 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287135648 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28335231 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284829281 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281875503 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284801239 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283601806 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284189745 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279997928 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282592288 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282890545 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.287720974 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.289373857 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281331333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284817989 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287360511 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.283272213 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283111959 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284497727 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281223917 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280575867 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.283857823 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284506918 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283004537 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286179115 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.28122529 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285183768 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285044871 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283814085 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287722797 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.295264645 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.290481119 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.278871249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.283348116 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283802574 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.286036183 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283797103 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28322808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283272088 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.283604471 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28338822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.283329663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28428495 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287526351 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.298552265 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306540792 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284391257 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28361352 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286667319 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.283210333 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283048522 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284469455 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.28580884 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.287917906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.292474658 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.284360315 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289939737 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.302829286 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286278969 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.288948359 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.286968295 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.292901254 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286677882 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284923206 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.284340284 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.289931897 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.300378692 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285375999 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295094438 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315911035 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.304292387 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285224986 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.285850083 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28528522 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285684532 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28742088 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287418956 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286328582 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286677417 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.286518782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.287998845 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29204929 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288255028 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28777507 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286878713 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.28562487 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.286551998 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28370247 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286635445 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.286479952 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287050183 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.286479516 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287397924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.286846506 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.299471776 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.315370869 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288285616 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28790283 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.284779941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29118868 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.291624978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298397553 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.295763492 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.287885692 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288959044 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28888035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287759396 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.287699832 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288593633 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.287190243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.289255111 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286418674 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.300905023 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298011069 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.293402465 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289039525 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289564813 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.288015587 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289788945 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289111064 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287918994 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.28985997 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292922513 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294308327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.288085998 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.287513301 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.292608826 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.297597218 seconds)
  done (took 763.022946745 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287552284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286743251 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286797325 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28659075 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286491812 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286253822 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286442409 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286554205 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287235533 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.286882255 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287687465 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287220874 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288653346 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288230102 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288067875 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286428503 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287646161 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287380474 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288501173 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287750256 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287684607 seconds)
  done (took 28.238904173 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.289906467 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.287645183 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287786229 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291357136 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287764335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290388328 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.288802988 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290427676 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290877609 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288329498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291403429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291578992 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.289061999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.288591981 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28924169 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290955894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291143014 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289996139 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.291000066 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.290800641 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291473882 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289584285 seconds)
  done (took 29.586016591 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.291500952 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.291992322 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.291452011 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.290237934 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.293567638 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.290680393 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292162672 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.29392519 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294064176 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.293319116 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.293045481 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.29371016 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300317399 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.29738013 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.296495572 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.291314021 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293755253 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.294351081 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293919991 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.291096982 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299402642 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.290419287 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.290484353 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.292087913 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29374473 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.295060496 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.293269057 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.294005252 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.295119871 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297683767 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.292543293 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.293716471 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.295381686 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.293140697 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.295457513 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.298316094 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.294372119 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.291627996 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.293515273 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.304532639 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.315224277 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.295612689 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.30122956 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.294600851 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.294465014 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298620142 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301410647 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.291274005 seconds)
  done (took 63.365168681 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.29432203 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.295548633 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294105186 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293761037 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.292370687 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.294324563 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293759752 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294109088 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.290873318 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291291612 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.293939306 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.29102929 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291806328 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.294567851 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.292859373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290696947 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290820427 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292426819 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.290951939 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.291436095 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.290934147 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.293508245 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29360513 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.292589224 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294462685 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292003576 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.291042367 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.293746835 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.290729938 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.291647164 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.294254343 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294886253 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.295999242 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.291903069 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.291836593 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.294780337 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.294380682 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291406409 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.2944248 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.291515648 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.294936146 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294808204 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.294300181 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296193945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.292226902 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.292671588 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293191297 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.293405694 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291949831 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.294833498 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.294945551 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292958054 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294523666 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293088299 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294345892 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.296040172 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.292439867 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.293147439 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.295492998 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294969059 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.292326824 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295192923 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.292661812 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.295164705 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294877294 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292688289 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.293429599 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.296149959 seconds)
  done (took 89.160169841 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296242189 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.296704584 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300865363 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.297820426 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295423119 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.296216231 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.297349971 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.296059481 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295565343 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.297358231 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296146852 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295775123 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.296174206 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296146155 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296469115 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.295605446 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295316538 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296755932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295642945 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295159999 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.295907664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29608488 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.296947366 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296623976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29628578 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.2966588 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297037914 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296407717 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296462841 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296593145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.296446046 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.296064102 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295619129 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.296667134 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.296082614 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.296885006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29508196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296412462 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.297571917 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295932323 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.297290421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296378946 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.296269761 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295878183 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297090955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296355859 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296352209 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.297079601 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297405517 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.295391695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.296334159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297376054 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297032687 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296547521 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297406746 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.298158265 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2966018 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.296615093 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296580124 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296023611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298203652 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.296825363 seconds)
  done (took 81.59984605 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297256122 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297939298 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294462578 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.293870742 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294538302 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293493222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295748309 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296133152 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296928289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296453888 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296250957 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294382021 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295015941 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297846469 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294260202 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295294624 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294606226 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294154892 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295503172 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293692622 seconds)
  done (took 27.12121206 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.29428921 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297455215 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.294889742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294706815 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296962183 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295190442 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297026963 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296597296 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295128756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297147407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296424067 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296862578 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294253444 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29502678 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297567967 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294705153 seconds)
  done (took 21.947164003 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.295538284 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29879647 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298338938 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296506677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295522391 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29542792 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298049777 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.295864014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295204817 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297998885 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298228546 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.298872597 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.29909412 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.297548714 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295692593 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.298846453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.296810652 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29615874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.298370709 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.299278865 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297298541 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.295718217 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.2983082 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298540751 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.29753439 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298093365 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.295909252 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296985605 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.296408215 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.29891934 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.2977449 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297248425 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296383545 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296961333 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299665319 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296730894 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299404337 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297881347 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299947714 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299661666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.29954415 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.297979173 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299999707 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299328815 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296528235 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.300005499 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299008774 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.298656681 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296833448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297606709 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299896678 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.301220944 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.30058273 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.299709664 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299151439 seconds)
  done (took 72.603275802 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300452513 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299345858 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298800112 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.300209684 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.299848237 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298826054 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.300287959 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299605624 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297142332 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299942984 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.298282556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302459913 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.298476293 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301842336 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298804229 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301737354 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.299902686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298933313 seconds)
  done (took 24.611065366 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.298895962 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.299062386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299726701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.300889228 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.298752549 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30067364 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298246693 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300099648 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302056671 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299608607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300484305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.302666174 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300672331 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301252309 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298898821 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299382036 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.301635004 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300598009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.298026599 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299790649 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300828801 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302230428 seconds)
  done (took 29.820796314 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.300548999 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.300163901 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.300105036 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.318806813 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.318925988 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.299357646 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.299647693 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.299142867 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.32414347 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.353158177 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.346183284 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.319450474 seconds)
  done (took 16.995537917 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298072156 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300806181 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2995886 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301108699 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300637853 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298379126 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297993876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29725208 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300508624 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299132896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298772146 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299310383 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300007298 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298631138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299377253 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300047116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299108878 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297978814 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298097683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300917194 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298229587 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302672095 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297538948 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297635269 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2984445 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299007823 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299741272 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299000509 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298849699 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302432679 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300644329 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297959537 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300585234 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298984963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30032631 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302178845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298122753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30095701 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299635009 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298764489 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299419742 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301314088 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30042794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298339859 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301070181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298698756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297968742 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298258655 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297587708 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300580499 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300232003 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297971604 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30261443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298873553 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300887392 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300992552 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299102666 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297627371 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300671019 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298274328 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298665002 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301097278 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297610057 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299143392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300042243 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298142085 seconds)
  done (took 86.979999501 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300153826 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2979452 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299072899 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299010641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299021409 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299044812 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299176537 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299105842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299277997 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298519709 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301128976 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298938572 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299678584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297625281 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297800995 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298754377 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298310035 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298568565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298503476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300570311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300094116 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298541806 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298407314 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29917067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300717275 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301190862 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298719485 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298379029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297937692 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298953591 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298626118 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299345045 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298296251 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.29614524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29886836 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298372248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301091771 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298341015 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298783814 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302652606 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298871134 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303762331 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29807544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299922288 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299102227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298552386 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299331001 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298979474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299584511 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298920789 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298446443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299184987 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298504224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298362923 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299731669 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298369895 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298550537 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299374209 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298430504 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300419689 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297892724 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298855052 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301891548 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299050191 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299950812 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299320359 seconds)
  done (took 86.961630775 seconds)
done (took 1780.603557696 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462622226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.418009597 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.301280516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.304878647 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300535655 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.325576825 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.312617695 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.301106424 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300589305 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.300015484 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.299363002 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.488405954 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.295270883 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301381756 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.300178863 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.395674315 seconds)
  done (took 26.625450345 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.328451952 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.307302884 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409328241 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321230962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32755578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.481053304 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.355007512 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30636178 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.46596548 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.344251614 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.305725893 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327087937 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.305175646 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.304644287 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322697438 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.48029867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.532671795 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.304523991 seconds)
  done (took 28.747027754 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.720728475 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.323838058 seconds)
  done (took 5.26301107 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.324268376 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.306325937 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.307640251 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304676923 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.295307097 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.297087924 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.304497286 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.301955133 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.296703767 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.420886707 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305888429 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315652996 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.323345253 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.306420928 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303318968 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341471519 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491207108 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.303275365 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.302096112 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.31120092 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.305364888 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395966433 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343648172 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.303852459 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.421715652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.297659394 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307315816 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313341841 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.438012556 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.30618043 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306072085 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.307167793 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.307819362 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.182067638 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813460086 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.298708589 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330186962 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3148684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303831278 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.445392585 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.30774745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31366029 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.298583929 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.785825812 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.437013663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.414829828 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.314833105 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.30782819 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.30776721 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.368092707 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307219823 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.309227567 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.351630556 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.053187031 seconds)
  done (took 83.605261046 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.309855729 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.300088652 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.473760319 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323769365 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299599048 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.299286629 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301219279 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.568709669 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.308841124 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310581613 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.617876182 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.828838964 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323340798 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.332524468 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.141372893 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.346492386 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302268411 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300573814 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315966795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.302111844 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835034821 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.302421185 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.303098173 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.554202584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33878314 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.7785281 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302001243 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.317892241 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305057233 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.303068265 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.787703652 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.332978009 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.363595269 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.304757613 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.555449626 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658298523 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626185603 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.305688522 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327303891 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.304436254 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.321775714 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780208665 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646182651 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.305807137 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319738752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783268371 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.305941307 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.3113465 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.311718296 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.546301097 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303314297 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.305792597 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.303993886 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.305060936 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.304535583 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.370599596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367189084 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.783755407 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305736666 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.303793925 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.329249598 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.306169581 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.305250818 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308189883 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.311629948 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643937861 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.489803953 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312519689 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640402826 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783386017 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.318884767 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851809994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.321845729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.341792494 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.315876807 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303373619 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304288667 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.780612822 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.336352262 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.304130872 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625563794 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.307600694 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.614644486 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.320236942 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332429191 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849680233 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.317794749 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.306559196 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.305458602 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.307859126 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.305082922 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.308116308 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566166739 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.360616669 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305616842 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.304989226 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.307621707 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30989061 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.308328585 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.308564548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851846179 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.335444472 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307223729 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.310063245 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305667416 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.309627228 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.305857948 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306723091 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563947562 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.309602916 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.314866085 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.306841721 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.306208448 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.318147595 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.557497487 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.312094713 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.59351378 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.30856088 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.305834069 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.316281536 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.306903917 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368374972 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307557179 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.318262818 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.20607751 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.601543129 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.322321531 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.307926807 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309494941 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30799111 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.309965609 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313278013 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.329505849 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.31215555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.03231187 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342798626 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.332553614 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306525369 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308943577 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.30717191 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317831563 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.309120522 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.594258176 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.564748468 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.456288691 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.310316736 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.307581874 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.009095768 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.375668934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.486180189 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.325610145 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.309220147 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.548404835 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500342222 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.30981747 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.308818791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.31182717 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566261761 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.310429149 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607796497 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.821967961 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.327590745 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.317336187 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.033986277 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.032153882 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.316698752 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.316386434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.622964794 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.324760964 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.308991942 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.30964509 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.31012639 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.311282307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.313334565 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.312884322 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.310718691 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.31049189 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.442411191 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.497708513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326980451 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31381424 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783296805 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.396070404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309850954 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.31499128 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.314173351 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.311062601 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.380519931 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.31044476 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.357735426 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.310836974 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32127028 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.851513579 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.313167444 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.316658129 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.499698522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.96010309 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.329805349 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.312675804 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.313107178 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.185760086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812557215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.337530707 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.602130179 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.324993728 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.350155835 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316950837 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.40385405 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.815443349 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.314913733 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311109719 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.926117431 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.331213284 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.836124696 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.311842632 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.31391808 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.866545663 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.331256442 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.314480194 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.313926059 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321877951 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.601709548 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.315802256 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.338317262 seconds)
  done (took 491.728119253 seconds)
done (took 637.184609248 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.312636717 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.313557805 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.306553951 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318671814 seconds)
  done (took 10.486651582 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.324392382 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.320119342 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320558611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.320373482 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.322054726 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.320227568 seconds)
  done (took 9.160965963 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.313398996 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.316140436 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.319702076 seconds)
  done (took 8.184036564 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.517702976 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.339187209 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.639322549 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337332007 seconds)
  done (took 9.06813299 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321766297 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.320265434 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321690029 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.323290888 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.325110538 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.32554826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.323619556 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.324247405 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.326871876 seconds)
  done (took 13.146637577 seconds)
done (took 51.279955236 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438002726 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.656971281 seconds)
    (3/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048020812 seconds)
    (4/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341421556 seconds)
    (5/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.426014459 seconds)
    (6/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.302804316 seconds)
    (7/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.418325172 seconds)
    (8/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.15819617 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570503044 seconds)
    (10/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.463538501 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350907531 seconds)
    (12/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.311982126 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.344482574 seconds)
    (14/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.020179173 seconds)
    (15/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299765817 seconds)
    (16/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.305227905 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.297877871 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353850697 seconds)
    (19/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.809758739 seconds)
    (20/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.111052245 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.285638251 seconds)
    (22/286) benchmarking ("sort", Int64, true)...
    done (took 2.300821784 seconds)
    (23/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.408691647 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427914311 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.303638917 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.182989723 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.295425936 seconds)
    (28/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.280086626 seconds)
    (29/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.651678832 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.691171668 seconds)
    (31/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.293118332 seconds)
    (32/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.273557226 seconds)
    (33/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.312341893 seconds)
    (34/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.385084024 seconds)
    (35/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29612069 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.284929109 seconds)
    (37/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.25504482 seconds)
    (38/286) benchmarking ("sort", Int8, false)...
    done (took 2.2821858 seconds)
    (39/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.392565876 seconds)
    (40/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.270196856 seconds)
    (41/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.562954562 seconds)
    (42/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.366449534 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.345849571 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.297722962 seconds)
    (45/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.300042953 seconds)
    (46/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.868296247 seconds)
    (47/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.285639258 seconds)
    (48/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.2815351 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.344054081 seconds)
    (50/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.267238517 seconds)
    (51/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306803588 seconds)
    (52/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.281685976 seconds)
    (53/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.529378171 seconds)
    (54/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.878399143 seconds)
    (55/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.274720451 seconds)
    (56/286) benchmarking ("sort", BigInt, false)...
    done (took 2.281666893 seconds)
    (57/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.03147711 seconds)
    (58/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.268663566 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.154084951 seconds)
    (60/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.281070419 seconds)
    (61/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.276436937 seconds)
    (62/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.291512408 seconds)
    (63/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.302588781 seconds)
    (64/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.018267609 seconds)
    (65/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.280668654 seconds)
    (66/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.268199198 seconds)
    (67/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.265249338 seconds)
    (68/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.268947045 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.905025002 seconds)
    (70/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.304362135 seconds)
    (71/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.314516611 seconds)
    (72/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.288318953 seconds)
    (73/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.280995905 seconds)
    (74/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.363904369 seconds)
    (75/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.263880039 seconds)
    (76/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.294355046 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 2.281016087 seconds)
    (78/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.318905594 seconds)
    (79/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.285379902 seconds)
    (80/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.268583838 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.291694482 seconds)
    (82/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.362209848 seconds)
    (83/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.290973408 seconds)
    (84/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.790730628 seconds)
    (85/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.212600079 seconds)
    (86/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.282596823 seconds)
    (87/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.400474867 seconds)
    (88/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.071668412 seconds)
    (89/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.096304659 seconds)
    (90/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.268418783 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.267688626 seconds)
    (92/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507478412 seconds)
    (93/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.615604695 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.830555997 seconds)
    (95/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.287792523 seconds)
    (96/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.297188759 seconds)
    (97/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.356534294 seconds)
    (98/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.256632279 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.745285535 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.258949049 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.277479641 seconds)
    (102/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.259155669 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.357717007 seconds)
    (104/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.150746045 seconds)
    (105/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.260699102 seconds)
    (106/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.451470781 seconds)
    (107/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.494112712 seconds)
    (108/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.255692937 seconds)
    (109/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.258954474 seconds)
    (110/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.272423615 seconds)
    (111/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.982338816 seconds)
    (112/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.255808599 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.294015214 seconds)
    (114/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.296101354 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.256785453 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.282624544 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.256860497 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.668631031 seconds)
    (119/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.672934006 seconds)
    (120/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.511076689 seconds)
    (121/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.359783789 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.257072677 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.802576422 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.298668304 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.265790257 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.548362767 seconds)
    (127/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.888614443 seconds)
    (128/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.987994997 seconds)
    (129/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.263500662 seconds)
    (130/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.257249362 seconds)
    (131/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.554458281 seconds)
    (132/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.258023729 seconds)
    (133/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.289783949 seconds)
    (134/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.695724212 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.097512017 seconds)
    (136/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.259088362 seconds)
    (137/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.37881159 seconds)
    (138/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.278908759 seconds)
    (139/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.265581876 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.274260089 seconds)
    (141/286) benchmarking ("sort", Float64, true)...
    done (took 2.273406581 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.334641798 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.612224559 seconds)
    (144/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.284944567 seconds)
    (145/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.294738925 seconds)
    (146/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.987167937 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.296235585 seconds)
    (148/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.269045555 seconds)
    (149/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.379889314 seconds)
    (150/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.335901797 seconds)
    (151/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.377061524 seconds)
    (152/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.258616072 seconds)
    (153/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.164517334 seconds)
    (154/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.838243022 seconds)
    (155/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.269050731 seconds)
    (156/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.286856547 seconds)
    (157/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.756939078 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.677580804 seconds)
    (159/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.314801867 seconds)
    (160/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.259966659 seconds)
    (161/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.278111356 seconds)
    (162/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.260296833 seconds)
    (163/286) benchmarking ("sort", Float32, false)...
    done (took 2.276400295 seconds)
    (164/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.25975819 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.284969874 seconds)
    (166/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.267406519 seconds)
    (167/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.286111463 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.26049904 seconds)
    (169/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.377695866 seconds)
    (170/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.26427864 seconds)
    (171/286) benchmarking ("sort", Int8, true)...
    done (took 2.280587809 seconds)
    (172/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.631667889 seconds)
    (173/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.349265876 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.284632289 seconds)
    (175/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.354865992 seconds)
    (176/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.300112431 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.260880432 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.767631375 seconds)
    (179/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.281186476 seconds)
    (180/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.301414171 seconds)
    (181/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.625321149 seconds)
    (182/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.266604185 seconds)
    (183/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.262919101 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.523581987 seconds)
    (185/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.321392005 seconds)
    (186/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.274979037 seconds)
    (187/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.266820373 seconds)
    (188/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.269599146 seconds)
    (189/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.457259437 seconds)
    (190/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.318283326 seconds)
    (191/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.278112258 seconds)
    (192/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.269017335 seconds)
    (193/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.293919132 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.108943949 seconds)
    (195/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.400677553 seconds)
    (196/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.397042879 seconds)
    (197/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.203407037 seconds)
    (198/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.280573721 seconds)
    (199/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.878261912 seconds)
    (200/286) benchmarking ("sort", Bool, true)...
    done (took 2.27567775 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.357628088 seconds)
    (202/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.328194736 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.260235252 seconds)
    (204/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.303223485 seconds)
    (205/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.258651324 seconds)
    (206/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.25555611 seconds)
    (207/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.983254013 seconds)
    (208/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.310440781 seconds)
    (209/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.27753768 seconds)
    (210/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.373787054 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.194919113 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.479680373 seconds)
    (213/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.262131096 seconds)
    (214/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.131541986 seconds)
    (215/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.25668711 seconds)
    (216/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.869552126 seconds)
    (217/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.450823639 seconds)
    (218/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.266666579 seconds)
    (219/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.312069599 seconds)
    (220/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.286808331 seconds)
    (221/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.068113746 seconds)
    (222/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.14608151 seconds)
    (223/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.286982161 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.105138096 seconds)
    (225/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.992920037 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.390129456 seconds)
    (227/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.359904587 seconds)
    (228/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.303191795 seconds)
    (229/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.253437114 seconds)
    (230/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.292407829 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.359606865 seconds)
    (232/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.622532892 seconds)
    (233/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.256307997 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.499943881 seconds)
    (235/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.289448763 seconds)
    (236/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.281500154 seconds)
    (237/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.255319698 seconds)
    (238/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.260721871 seconds)
    (239/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.264369881 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.466018435 seconds)
    (241/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.281984196 seconds)
    (242/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.264822579 seconds)
    (243/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.300086436 seconds)
    (244/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.289223085 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.289575803 seconds)
    (246/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.644899587 seconds)
    (247/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.337388623 seconds)
    (248/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.329712741 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.322787085 seconds)
    (250/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.250796728 seconds)
    (251/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.251088205 seconds)
    (252/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.767070639 seconds)
    (253/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.256478158 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.114147729 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.273669564 seconds)
    (256/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.272859577 seconds)
    (257/286) benchmarking ("sort", Float64, false)...
    done (took 2.265261668 seconds)
    (258/286) benchmarking ("sort", Float32, true)...
    done (took 2.264334168 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.148378057 seconds)
    (260/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.068957442 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.347199258 seconds)
    (262/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.262589563 seconds)
    (263/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.289691631 seconds)
    (264/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.263975236 seconds)
    (265/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.276916184 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.347861004 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.301308684 seconds)
    (268/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.256556627 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.382191295 seconds)
    (270/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.253331361 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.27837386 seconds)
    (272/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.271535733 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.309023238 seconds)
    (274/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.253911248 seconds)
    (275/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.255786439 seconds)
    (276/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.278906577 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.279935963 seconds)
    (278/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.268162929 seconds)
    (279/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.266911549 seconds)
    (280/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.28713764 seconds)
    (281/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.290860048 seconds)
    (282/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.390475784 seconds)
    (283/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.475468371 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.289921946 seconds)
    (285/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.382711719 seconds)
    (286/286) benchmarking ("sort", BigInt, true)...
    done (took 2.265663839 seconds)
  done (took 549.466851287 seconds)
done (took 550.702837862 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.299839599 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295134249 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.277159852 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.299985115 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.389063736 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.454256276 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.288679331 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.279468619 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.325561434 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.327972165 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.276403792 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.454942257 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.278549339 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.278377678 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.278759639 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291505988 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.273766813 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.277706779 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.295745981 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.288349263 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.296361057 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.277699413 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.327606038 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.453896638 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.281358489 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.281905511 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.280853391 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.298253604 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.389691312 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.281893133 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.281853602 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.289963301 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.271596123 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.276882021 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.274643393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.298375825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.289547231 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.289669476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.283476621 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.310448521 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283184516 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.277748505 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.280609131 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.281170068 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.281795379 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.283313961 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.280691976 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.286018127 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.293477853 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295064988 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.271565026 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.297341606 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.282598575 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.282126353 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.291038979 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.280173699 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.283720209 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.298635022 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.300459756 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.298491748 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.260429101 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.285950569 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.284006423 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.297979159 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.288425863 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.283106549 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.277854945 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.285570831 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283113498 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.285917388 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.274080643 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.292102024 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.284418699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.295406599 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.31294703 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.270318859 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.276999518 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.281437243 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.289130819 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.279691652 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.290906946 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295298226 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.286326247 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.28275309 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29793063 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.457610882 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.293516828 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.283733283 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.291177004 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.301431914 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.290878201 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.292929655 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.28670773 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.278488263 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.292625337 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.285752508 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.285833073 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.28555004 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.288524082 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.294332866 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.271178121 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.304412708 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.280512956 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.279556905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.283557864 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.29752554 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273132154 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.287583584 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.30726617 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.331609474 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.286554516 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.262379589 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.286841893 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.301971729 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.294163515 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.288170924 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.280190295 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.263585145 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.280436964 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.301602851 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.2864928 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.283302617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30222004 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.287219365 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.282359553 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.278934724 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.28642015 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.299242882 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.406578363 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.297274304 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.317070399 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.284676895 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.289411728 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.320717537 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.301926164 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.316962944 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.288682042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.302691976 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.302110726 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.282267894 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.296746455 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.298219618 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.28757048 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.292780132 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.281507585 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.321016899 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.301226835 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.30022738 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.307246901 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.408032569 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.285147721 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.264038538 seconds)
done (took 214.266218509 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.344563236 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.282119036 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.36567335 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.283205241 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.380242558 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.379004128 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.280267689 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.28074982 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.280751321 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.655507184 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.281151464 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.281387148 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.28363047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.280031802 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.363787019 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.283934116 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.280895992 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.620874371 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.283539678 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.354039375 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.280166212 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.280895383 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283771721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.665043972 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.281662219 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.280042853 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.354285354 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283494272 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.630143005 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.27785329 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.280200119 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.62989488 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.373812068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.302206389 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.294465049 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.29125232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.381788929 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.302029464 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.365217828 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.363555064 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.369575807 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.323687963 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.280782236 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.283369897 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.287884408 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.285506386 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.284190385 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31252795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.286124705 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.28421563 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.62234152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.295734283 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.284373458 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.284391052 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.283379077 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.314824169 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.284056967 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.287466486 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.375171165 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.287272184 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.348264628 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.66702998 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.659899028 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.285715549 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.283114961 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.284269045 seconds)
  done (took 101.092325867 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.351233892 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.360830719 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.395173926 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.287454704 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.339385505 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.40049611 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.288543553 seconds)
  done (took 10.624476301 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.29354804 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.288798372 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.336488686 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336783151 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.286557513 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498797348 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28907221 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.298146323 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.285029474 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.364064765 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.288563634 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.289220477 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.295582325 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.286006562 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335393528 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.300018411 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.403829085 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.287845648 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.289877832 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.43922507 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286163507 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.295852573 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.361854609 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.300841497 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.289958484 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.29508037 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.201753877 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289256384 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287049812 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.29025559 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.286848535 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.388670209 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.290075866 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.288114063 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.286940295 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.44908309 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.289605306 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288627197 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.290492225 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.280811642 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.290778273 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.289422221 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.290625586 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.28842725 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.290671427 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.314529942 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289081646 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.290060011 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.290700784 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291312827 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.365201346 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.291795118 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.287902675 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.288060979 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.36943861 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298510038 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.290652481 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.289071664 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290730631 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288788709 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.44191918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339483116 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.291009109 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340677609 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.291710707 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.291933679 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.291320065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.291957801 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382212216 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.291912861 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.339450324 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289343084 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510512372 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.314889636 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.29287792 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.294715332 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.294194292 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291913108 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.2878303 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.298705161 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.289699883 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.293312813 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.299408147 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.289179714 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.29022922 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474539987 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.4478088 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.290213652 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30525517 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.299993707 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.290719918 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367094084 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29228574 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.290868435 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.345169511 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.408678772 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.36992407 seconds)
  done (took 133.835145246 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.297054147 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.301294931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.29625582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.31520113 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.294194275 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.293223467 seconds)
  done (took 9.004615864 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.295247612 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.293425809 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293829693 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.294661274 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.294487722 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.294546873 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.294862274 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.295708102 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.297779816 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.295204406 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.294336046 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.296113359 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296766985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.29500238 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.295629012 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295538893 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.29564659 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.293462673 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294835929 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294135688 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.293298337 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.294951694 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.2949834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.296250526 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.298861753 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.295957978 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.302076357 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.29640643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296212277 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.303163375 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.298397556 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297593839 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.298092517 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.300016147 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.29983292 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.295975983 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.299477821 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.298728743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.293319283 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.296984653 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.297408978 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.296556169 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296276446 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.297467633 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.298303372 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.300577255 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.302089924 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.304295814 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297546 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298504324 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.299271722 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.297213249 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.29855348 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.298383334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.300574208 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316769066 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.302177819 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.297283674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.298205377 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.298946745 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299002264 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.299449886 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.300526962 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.301113694 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.296627364 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.300283988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.299658457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.302549358 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298914868 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.298894527 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.30031334 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.296491226 seconds)
  done (took 95.653518222 seconds)
done (took 351.407481154 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.704415149 seconds)
  done (took 3.917042823 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.329708598 seconds)
  done (took 3.543790323 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.430569613 seconds)
  done (took 21.64568583 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.330791652 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.302705597 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.301850487 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.302484469 seconds)
  done (took 10.450722383 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.501160008 seconds)
  done (took 3.713904554 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.291552775 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.291561598 seconds)
  done (took 5.797810014 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.534844883 seconds)
  done (took 3.747142306 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.579260315 seconds)
  done (took 3.792463792 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.316463084 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.307807395 seconds)
  done (took 5.845776022 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.284097516 seconds)
  done (took 3.497165101 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.278684446 seconds)
  done (took 16.492120851 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.29656984 seconds)
  done (took 3.512231861 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.312148233 seconds)
  done (took 3.525243597 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.728411516 seconds)
  done (took 5.941779229 seconds)
done (took 96.635372366 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.293380594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.296982475 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.297829636 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.294948503 seconds)
  done (took 10.396411228 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.333801603 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.333724314 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.333745953 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.343517388 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.336813735 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.333107706 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325396342 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.325354101 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.344487472 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.337384917 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.336201215 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.336383133 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.334410063 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.325903129 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.335534736 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.336530529 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.345214441 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.335763948 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.326555441 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.337805167 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.302147022 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.345780692 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.337322985 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.302814956 seconds)
  done (took 33.199089471 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.819180232 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.372330711 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.454211261 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.352823959 seconds)
  done (took 7.214948198 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.353252449 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.355039963 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.368267136 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.405271519 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.430427567 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.364541649 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.327834978 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.323362261 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.309455255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.354789964 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.430923881 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.370628158 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.441197308 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.302847033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.482297608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.301783327 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.301320459 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.353854844 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.405827784 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.430387965 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303128656 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.353801262 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.358290326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.371729442 seconds)
  done (took 34.016432483 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.303485596 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.319854162 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.30195335 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.301218533 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.310326969 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.301198853 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.302121903 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.302871751 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.302298424 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.307878602 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.301433813 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.314499749 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.301363382 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.30190883 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.30937367 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.30414192 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.308429197 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.302500081 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.302875903 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.3079925 seconds)
  done (took 27.324177504 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.297247415 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.296013222 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.650401508 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.553899069 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.297609998 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.301702432 seconds)
  done (took 13.614561612 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.371264117 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.502328972 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.304979309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645114035 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.730677297 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.304860358 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305504282 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.539629563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.842103063 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.827074753 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.362564266 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.370834102 seconds)
  done (took 19.325035101 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.304792973 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.297978655 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.307784538 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.315103065 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.356640407 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.309578304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.313098529 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.299189182 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.363647843 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.361681748 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.311030985 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.35807191 seconds)
  done (took 21.118827942 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387383222 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299194336 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.300167856 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308495567 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299745535 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511060576 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305973502 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99678846 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.320608709 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576417784 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299337296 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391861229 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.554779325 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311407669 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305602913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.295190654 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526956791 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780397976 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30342146 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303910008 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327236217 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308834536 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304867404 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.511475274 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512958827 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30077551 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.56275748 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301498534 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579576455 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316129302 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313828844 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30170476 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577139579 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949423805 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416647019 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510016194 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306602831 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303597815 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.314400868 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.303435493 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309196059 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303827328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313268281 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303254311 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30251863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304898336 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014203106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.32619314 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.30067087 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.303518826 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560487458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.399948749 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.307457662 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30355689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33383262 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303756929 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.307157596 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397521933 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.87256847 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309834604 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310100656 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.309578421 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307193514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324025596 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915277078 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.310521472 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.308782154 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.308541098 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304608177 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307430974 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321899843 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304930028 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.329697712 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304050288 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986539989 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306404371 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306330467 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.845245748 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319089511 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.312961729 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532857538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304480501 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305556982 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.304810826 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304886582 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000154365 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315946248 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.303544551 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.327666233 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.00621741 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.535921099 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324618969 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330446043 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.530120174 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.292424047 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305928495 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.318497873 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30905879 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328708096 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018792665 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324623003 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.310613069 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562696573 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.519624929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316943527 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.312226424 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777438704 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32470716 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.326039684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310179095 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.524651654 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.88194731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323414755 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313836172 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331054903 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307072067 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037511101 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309662911 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.317878402 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308256477 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.568806945 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.082938281 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309031131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375963518 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312684482 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308373589 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313074448 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310503738 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307564873 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.509675098 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335310403 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.325573949 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.309358269 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308370851 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.311348034 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312153291 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.309989097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532540303 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310744274 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592719546 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308928659 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30930865 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309871273 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.532217029 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.307006353 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.315862773 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570323676 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318913116 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325880433 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326105998 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329097284 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41026504 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333010182 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.309319678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57193008 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.315438149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.314714034 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314647411 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315550061 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318570796 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315861878 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313110984 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884418661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287302858 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317379882 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200321601 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.324363453 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378435751 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318162376 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.521189041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.318806231 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31524932 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.317255261 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.308539919 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534377687 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.322206144 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.312311105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397791689 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.780346861 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902299011 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325923726 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.311844417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.310023298 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.30968972 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311596132 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312887033 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.312966241 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521682201 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.327346198 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326409935 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.891353373 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315935746 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316872516 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.322082845 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.326397625 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.319436406 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31434313 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.320817042 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322824432 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323399528 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.32848386 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459027952 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.327941433 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313914734 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.832136619 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319263616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31467192 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314840805 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34962115 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321851165 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115110135 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.57328973 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315184766 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567442039 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31694818 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.330947676 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312864018 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313663784 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322470552 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.322448965 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339889866 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.325985974 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315196872 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318695472 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881299855 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032684103 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842543184 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325273021 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.316459774 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334238263 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022178116 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332823338 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315064632 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.546853796 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022810853 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333459121 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787711118 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.332229221 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060132019 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570749642 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546424688 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325881525 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.317672781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582116445 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.530339646 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352533742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318612634 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323253864 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.303730778 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865907242 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.350055662 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.397843349 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026530158 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334561495 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.31903452 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.387174834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329655169 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.717832982 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33555087 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316617608 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322316062 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32454129 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118850711 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324031458 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318480101 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933904964 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.333175049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.791983634 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336392643 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529863294 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.32901571 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.322658901 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.315977126 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.325427815 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.572034111 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572477804 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319805338 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317520711 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851653771 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176812133 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324402353 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318691905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05105351 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320981502 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619568957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.321173621 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.338067984 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335323133 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320388597 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32060935 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.316855893 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326687665 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29540362 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799073302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.325962862 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329610244 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351753368 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167713588 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.575185524 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.334666711 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894644623 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546138807 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332434999 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344663919 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.324235421 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324372009 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.308989643 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320112242 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554935238 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357969135 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.543820022 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.330289259 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.308804756 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321733286 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532364136 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32084895 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.328143393 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559763193 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.320095884 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.330764891 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034852054 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348349996 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328357877 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323644819 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322656417 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344341267 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39280642 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534584829 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.333162832 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332925423 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723670413 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345667755 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325425225 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.337461052 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416457674 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336232866 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.324096232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.095735553 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903223384 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046694414 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.907354421 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586456761 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325993086 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326216827 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322427582 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471756176 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322337933 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597101663 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323818027 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.325913897 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364373699 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328068212 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325507346 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539009374 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598483476 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322760845 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323074002 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327676381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.324373006 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.334751072 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.535691885 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808426976 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866422174 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32588645 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324953265 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047928132 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616610505 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323873743 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325304143 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324209639 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.337998117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.36067718 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.331340859 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339490306 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473465677 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578114768 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988515386 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.353594597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.355268987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.099063927 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336184045 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.581179935 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323189987 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.557133958 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905830494 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.020794965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590070322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397078105 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.540098152 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.327254494 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475911623 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.329718133 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326834599 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328401815 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17250556 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.324416307 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.336967944 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913453764 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.59051753 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33084882 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.32872227 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351059319 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.337427464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.550449917 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03804748 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552345581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338363021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334763443 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326764983 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.913358602 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592077228 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32931792 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.33254042 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564120123 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.563986925 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.354561624 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.779989586 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.325584951 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879463597 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.300612989 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350121531 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341969249 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.027855023 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912702195 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.327404899 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815024442 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330529381 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337464593 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607149234 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334999674 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338198787 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610007741 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.334224532 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.330165776 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550538303 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.909275966 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081883456 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.341493515 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348558475 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.335972155 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329571305 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.344243773 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332097768 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.340861981 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.750777997 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350909099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331574174 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343617829 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.335905907 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340987295 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.333490268 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332314311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.337933468 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.328063986 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.322893727 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.340775922 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431766278 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88693274 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350887589 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.007419646 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.65960414 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.586490729 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.331712606 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.327116555 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336567614 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332580154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333163876 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33328013 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33242671 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.894657738 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.335193192 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.347392089 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.336822644 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.549234215 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545287767 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.343578449 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553160134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333861217 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351536566 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.319324082 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332736428 seconds)
  done (took 943.58712064 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.347834592 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.350097463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.356080317 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.372949428 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.349147729 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.383000471 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.345213582 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.357099113 seconds)
  done (took 20.113219479 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.34496806 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.343872632 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.344852158 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.345129379 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.338566713 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.793991217 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.357253207 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.343423331 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.344632498 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.335834589 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.341085764 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.972597302 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.348831631 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.336883612 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.33666587 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.344119881 seconds)
  done (took 31.825730779 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.237956156 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.459529447 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.116888653 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.353837106 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.370903947 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.339468638 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.537759922 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.350188401 seconds)
  done (took 26.02115686 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.346553267 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.345682161 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.346729529 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.346734721 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.346274195 seconds)
  done (took 7.985630535 seconds)
done (took 1196.957847864 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.339668105 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.341724613 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.340001379 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.342541764 seconds)
  done (took 6.6169727 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.323417261 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.326444666 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.324523374 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.338404086 seconds)
  done (took 9.566370396 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.034143369 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.97059805 seconds)
  done (took 5.258946753 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.337436919 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.099885359 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.074185304 seconds)
  done (took 7.76577134 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.637442267 seconds)
  done (took 2.890768604 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.750068262 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.703343077 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.521662946 seconds)
  done (took 6.230354785 seconds)
done (took 39.582010311 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.336876869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.603678248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.495427674 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.343207219 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.498231455 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.49426896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.073644634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.336005188 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.338806946 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.33719421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.342073569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.499302522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.05725014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.58738196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.056530821 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.588817807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.499786005 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.340069402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.338182695 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360365943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.075951143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.3411723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.337852174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.346987333 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.499680887 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.484059708 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.3377565 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.589067628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338422759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341408278 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.485156333 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.337920702 seconds)
  done (took 81.299030507 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.33729535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.337799714 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.338391516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.338705739 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.338239666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339331617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.340107887 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.339070834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339593064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.338406108 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.353868586 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.338467583 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.340952236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.343021875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.339063175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.344279116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.351872366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339203068 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.348310117 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.339856423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.339272568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.338626617 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.354540499 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.354159462 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.359925361 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.339626728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.356829174 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.341566387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.338925811 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.355195034 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.341036527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.356436619 seconds)
  done (took 76.259642126 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.340643178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.341537406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.342298369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.339017812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.354010855 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.357056871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.343158346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.355675617 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.339661159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.340938247 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.345343685 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.340760568 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.357747231 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.34061679 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.357869744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.340258495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.34851164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339701959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.34063573 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.352885002 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.343866757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355636696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.341202129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343030269 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.365513569 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.340631393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.340826496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.340089257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.348840919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341499073 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.343480172 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341397405 seconds)
  done (took 76.323021893 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.53664146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.348515274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.349870119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.284998804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.349037659 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.348323976 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.343580624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.539020996 seconds)
  done (took 14.35919308 seconds)
done (took 249.495361246 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.341512669 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.343230393 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.546744676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.37172416 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.341944066 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.371330276 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.369649209 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.54068487 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.283912137 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.545747091 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.344304151 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.367819398 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.343061239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.367954984 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.616480332 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.471610655 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.219285373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.326273106 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.681655505 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.361068656 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.609846652 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.344070996 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.545692665 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.280145071 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.362243547 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.344919182 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.359734272 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.216634861 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.370017157 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.690273612 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.351043716 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.33266099 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.42931312 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.412676096 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.475789059 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.469944155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.360314604 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.409167735 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.550071553 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.35678334 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.343828585 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.101116749 seconds)
  done (took 81.13483809 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.351757888 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.456140468 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.352009736 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.351752174 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.352379513 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.453388358 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.435071112 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.352132851 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.352748418 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.353619403 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.351572229 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.352413987 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.353577403 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.352846325 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.352790449 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.352381331 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.351728122 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.355088179 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.354936645 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.389047241 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.457387476 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.356167768 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.347934634 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.352949644 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.438425395 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.454260628 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.352714403 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.347891172 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.387983852 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.353166029 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.356536942 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.391640345 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.355000687 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.356256678 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.457743182 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.436454577 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.356110648 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.352912025 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.453502196 seconds)
  done (took 55.006439307 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.355094179 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.607846309 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.769641408 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.361142704 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.36004945 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.35988766 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.433226153 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.356844717 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.359911128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.360055799 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.504992374 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.35872127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.389611187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.805157822 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.359605094 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357091748 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.356286088 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.356644457 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.611441698 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.365796813 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.451514015 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.361591613 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.432328582 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366676101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.377930142 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.357683081 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.361934964 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.943324992 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360175621 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.510362565 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.119667863 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.434452066 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.881246378 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.780948425 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.126466244 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.363474344 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357413665 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.509229183 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.359506718 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.358893068 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.432331595 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.358975643 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.775714887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.032187447 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.376156114 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.358221577 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.966671519 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.511347096 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.595169582 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.367751459 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.807661169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.362632128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.35994308 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.361734561 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.595978352 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.366974726 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.359212428 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.96584037 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.381223911 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.435604672 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.359479502 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.358625886 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.616293367 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.36007374 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.606358903 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.361792253 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.367095086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.378494984 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.781578418 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.362724783 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.05510287 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.378419404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360153286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.509433266 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.608205895 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.010840701 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.364917463 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.621678995 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894622127 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.435851 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.365630207 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.934633635 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.439184454 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.36612478 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.363995543 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363585104 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361943625 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.407809814 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.436222538 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.993834504 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051932599 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.993793146 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.456010785 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.375637968 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.36117114 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.970463096 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.379994253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.362614346 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.780765699 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.057840218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.380066319 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36881118 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.052376726 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.382307937 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.440257674 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.369354994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.792155783 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.362962166 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.409111099 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.363060685 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.369434139 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.38519254 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.438426415 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.371287227 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.363864438 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.027515651 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.536921787 seconds)
  done (took 179.673080888 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.362055679 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.355993886 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.360601354 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.357018373 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.356809615 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.364036133 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.35593916 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.358361552 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.362193546 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.356022311 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.35801279 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.363533457 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.359623928 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.362961838 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.369286555 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.365079452 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.357229067 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.359984393 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.358881726 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.36247436 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.358387387 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.381605385 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.358785698 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.358215831 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.357428114 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.359115777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.362930193 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.360001998 seconds)
  done (took 63.377110078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.365555083 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.911619249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.368769073 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.49363239 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.386571526 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.363090046 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.49047799 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423122188 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.367588685 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.362932248 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.362845694 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.659514125 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.371988785 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.858235837 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.551779028 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.492149271 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.863749778 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.384010545 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.362523356 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.363044252 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.492350545 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.379823031 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656795427 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.908803994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.368288765 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.907750956 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.357607343 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.367406738 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.3644425 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.910271723 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.365738663 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.65892452 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.441196606 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.426677403 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.911748286 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.86244202 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.877682015 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.510172854 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.371123894 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.364262361 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.364978178 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.358039743 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.916351159 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.37395278 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.368911057 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.912713172 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.386611455 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.369486685 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.373321605 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.39440788 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.425117846 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426037015 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.663733373 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.918585975 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.44301675 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.384543224 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.493430501 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761020407 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.371258592 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.865057545 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.35823713 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.916836598 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.388243386 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.358820368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367935543 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.372941161 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.512536537 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.498887405 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.86935399 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.387177782 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.865153088 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.529739789 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.370960766 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.367983443 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.370828653 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.917346241 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.868190875 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.530117003 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.503695838 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.560962091 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.362157796 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.370020903 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.360206295 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.444630027 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.369707396 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.920280186 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.88600113 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.387069334 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.372264351 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.371287099 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.371624814 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.542279431 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.923155256 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.448728539 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.865431772 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.68271399 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.665965293 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.371603166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.426770234 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38621601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.667910814 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.372158009 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.426565454 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822431247 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667961824 seconds)
  done (took 162.557107362 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612792484 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.397171061 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.459416241 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.522797127 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.963836039 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.960774805 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.368159187 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.491080213 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.480038193 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.623847296 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.377051343 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.461919168 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.582407172 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.449365649 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.088702507 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440665322 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.461044942 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527089296 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.508240388 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.385474041 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.015090282 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.659746079 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.555848431 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.389887159 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474313655 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.111145002 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.935100616 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.901406464 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.540633883 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.378336576 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.912746686 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.367820423 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.303147654 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.026761104 seconds)
  done (took 64.015197893 seconds)
done (took 607.023203601 seconds)
SAVING RESULT...
DONE!
