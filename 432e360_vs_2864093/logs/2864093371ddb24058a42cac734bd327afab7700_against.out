cset: moving following pidspec: 6068
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.381229612 seconds)
loading group "string"... done (took 0.509599379 seconds)
loading group "linalg"... done (took 8.433830029 seconds)
loading group "parallel"... done (took 0.173353781 seconds)
loading group "find"... done (took 1.367220181 seconds)
loading group "tuple"... done (took 1.959990453 seconds)
loading group "dates"... done (took 1.334260653 seconds)
loading group "micro"... done (took 0.211045745 seconds)
loading group "io"... done (took 0.566048904 seconds)
loading group "scalar"... done (took 42.029416617 seconds)
loading group "sparse"... done (took 13.364655304 seconds)
loading group "broadcast"... done (took 1.10224591 seconds)
loading group "union"... done (took 14.755185807 seconds)
loading group "simd"... done (took 5.256698856 seconds)
loading group "random"... done (took 10.463877265 seconds)
loading group "problem"... done (took 2.157701289 seconds)
loading group "array"... done (took 25.407442269 seconds)
loading group "misc"... done (took 1.148013723 seconds)
loading group "sort"... done (took 3.900842366 seconds)
loading group "collection"... done (took 22.619532626 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585479229 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.135115977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145846022 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.176141768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20338409 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137656009 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156276369 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.461691159 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.009360986 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206875449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141255761 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506492463 seconds)
done (took 5.617908393 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.223248859 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081295214 seconds)
    (2/2) benchmarking "String"...
    done (took 0.126663707 seconds)
  done (took 0.90611745 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073368719 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.170495547 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092512974 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.110597656 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109617339 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.091054709 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10859993 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10859074 seconds)
  done (took 1.492290342 seconds)
done (took 3.403098779 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.770357096 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.834109659 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.558593538 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.121282971 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.156036128 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129346647 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.307246866 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.142020074 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.133599221 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.125353922 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.178003693 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.3498167 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.487009346 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.934770346 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09394398 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.126212072 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079536247 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.697374597 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078142407 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.115467613 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.515861909 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108401942 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11363154 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127343908 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.213488319 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115858184 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.192503421 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105013879 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.700406919 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099465888 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183098481 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095523817 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.162318503 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.212643608 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.093626052 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.090439255 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682135353 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186006643 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108737395 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.092939653 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.68293894 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077631553 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.199527091 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10581603 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108794957 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196902257 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103467657 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.092434937 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083525791 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103386342 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.160020587 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.483115855 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105222383 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141656272 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092287163 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701523745 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092808356 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.154929851 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122809081 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.107876421 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.079996742 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.106184348 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171927927 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.098585997 seconds)
  done (took 19.73248819 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114212243 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138232863 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092188645 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137365452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138582384 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077402175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098538482 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075314425 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125257059 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183623508 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138406194 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.143926478 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074371633 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07627306 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116838943 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.250803883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.100098962 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119873529 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095224439 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08785397 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13899214 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09257347 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108339795 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107571283 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166219789 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203951982 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107309259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12242259 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091895818 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097315067 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140602435 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.160196845 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.075003443 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091102071 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.162297705 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.119794642 seconds)
  done (took 5.086227996 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196928508 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.099643508 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.204261141 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.174668734 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146087899 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.167073034 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100920103 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263977972 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.197212373 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163258481 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128902827 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115360766 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077777912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.094065678 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07655652 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740674486 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.16814117 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148229567 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122613781 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102201161 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081791438 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369323499 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08285802 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096190681 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082670023 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086781425 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.130948428 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108466304 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.171336277 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103797991 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.219352325 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120540887 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105858449 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114653347 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.214937331 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110947207 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13358558 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083240541 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097605107 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.198161443 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105774782 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076845387 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121537556 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115292826 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134337789 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098434417 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106004146 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229535627 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097916678 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096926619 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.026715403 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078971332 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198270729 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108794313 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076980156 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335545481 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11637725 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082047928 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098793954 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282744138 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.1149383 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096346543 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075194764 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102035412 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077498998 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397594828 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103015541 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.919871378 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079824945 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152423692 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0978369 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101276176 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084380186 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081984102 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11691793 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076488516 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096286598 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077014198 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094048095 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081038995 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.115138209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098719492 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078012914 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144513761 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114918059 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096694802 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125324657 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098843182 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076934992 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128042015 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08036706 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098306235 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137055126 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085725549 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114336021 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097874969 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.125096575 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095430367 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168906086 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093453527 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.105352932 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100393374 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096212248 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124663006 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098912816 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09611833 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081605346 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093509248 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07732056 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158036746 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077755511 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076007627 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09914292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.088916622 seconds)
  done (took 23.212555754 seconds)
done (took 48.730414151 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.389781936 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.108795233 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109212451 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108778509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107942212 seconds)
  done (took 1.604160954 seconds)
done (took 2.361335389 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.321939783 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198564233 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085292899 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172767798 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.102255538 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179464863 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163278397 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115668209 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.189986944 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09801123 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.168560207 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.098013783 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085521525 seconds)
  done (took 2.759670615 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088230981 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115533378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078142389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087659595 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089520581 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088494355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103849779 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11776705 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103872117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083982761 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088489264 seconds)
  done (took 1.798107602 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087697436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095058533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095379415 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087321206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088760968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087535539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104342317 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098746463 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104678576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083428456 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088361394 seconds)
  done (took 1.772760218 seconds)
done (took 7.076475722 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.088742626 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.614684015 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.120649048 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169276452 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316091796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.217466117 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.603458298 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134174017 seconds)
  done (took 16.215611338 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107616343 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.112695338 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076346074 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.0959678 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076171451 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095385779 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.079770386 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096358233 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.079430323 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076756053 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092504846 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077298366 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094896801 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079432943 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09569204 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079436789 seconds)
  done (took 2.234361381 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112429612 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111735578 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100529721 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.084885422 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099493165 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081358606 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101659104 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.08264089 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096166487 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.080509562 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.101448423 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084452145 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099787602 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078578311 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099963678 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085438324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096289318 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100151929 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083938737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.100545395 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.084782098 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097285255 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082741395 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100789315 seconds)
  done (took 3.112810971 seconds)
done (took 22.314595328 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161312293 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081824409 seconds)
  done (took 1.002770496 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097278091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115331018 seconds)
  done (took 0.978707168 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101575351 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094832143 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133088721 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094852857 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096032676 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078179265 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.126300595 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096304805 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078496347 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078266392 seconds)
  done (took 1.743806041 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.079464616 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081821186 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10313228 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11555918 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088849271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097471926 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082788339 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099221571 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084688638 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093186272 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086406434 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113644636 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101791968 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09813171 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099698726 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083924411 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104482489 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099334475 seconds)
  done (took 2.482482996 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076868495 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079800763 seconds)
  done (took 0.920409119 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078869749 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07547334 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097423602 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096708447 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076324874 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075839556 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094092913 seconds)
  done (took 1.361259203 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.473319466 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.184730097 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326575899 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111265467 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.130601353 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.342618187 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.131124658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110102872 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091316299 seconds)
  done (took 2.710231261 seconds)
done (took 11.963811752 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087201983 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.131124545 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.479270556 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.097900231 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091121064 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.142308454 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.25136442 seconds)
done (took 2.050808324 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33077497 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120150832 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084071164 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075765758 seconds)
  done (took 1.377156104 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076022196 seconds)
    (2/2) benchmarking "read"...
    done (took 0.082227678 seconds)
  done (took 0.930613424 seconds)
done (took 3.082034103 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074644463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.075000578 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.127395207 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.073334533 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094580832 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.07298949 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093217765 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.075429135 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074340586 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09361039 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.075432329 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.091693728 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075159932 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072403847 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089890165 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074980956 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089607428 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073760482 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.194425089 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089506806 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072231838 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091592252 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072579482 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073023389 seconds)
  done (took 2.89929198 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099469385 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093422375 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081528358 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099513872 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079787732 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.099367781 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081367507 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093745191 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.081136346 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094652359 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078572557 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096768349 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077670422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09720706 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078712272 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096599533 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.081513981 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093413797 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07795932 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097700634 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081414149 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093892665 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079399632 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098233579 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079730115 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0972763 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077645706 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.094188011 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081233529 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097159489 seconds)
  done (took 3.435334498 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080280261 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071741888 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091042174 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.083967067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090955127 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077656937 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.072674527 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092377648 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077460947 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090850003 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078697852 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090388496 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.073739411 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.077516746 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09544585 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.079451645 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108703394 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.073534738 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09083383 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077810002 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.078386104 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091868151 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076874378 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.091900419 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073484266 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072799183 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090927941 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073342418 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092088879 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073506496 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.078562014 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097705128 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072111122 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.104055141 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079735472 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.090808256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.08115804 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.0904889 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07847015 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.072113275 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09101319 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07263637 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09134418 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.085001674 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077011823 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09295338 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07302827 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09610668 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.076773302 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097901597 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.072807374 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.072979058 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.096954128 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.078347223 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.09670869 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07299981 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073183306 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.090242811 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.0777222 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.090552619 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073144974 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071921274 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097134192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.074241742 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113625093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083826465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089962024 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078191569 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09514888 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081690762 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096521705 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091412592 seconds)
  done (took 6.834991204 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07740166 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101506282 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075922545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075104761 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089180309 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074076313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098503319 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074126102 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093154861 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091517132 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092031741 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075483629 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075242974 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095817447 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075254682 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093228332 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084428132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089607253 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074343953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095694152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075343352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098311977 seconds)
  done (took 2.65908697 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214940235 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102808116 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.13803374 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093408671 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111603349 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110234976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079907595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100663285 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081014926 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102852829 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084022553 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099148482 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111979855 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084367918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101695851 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086533966 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098383013 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085468031 seconds)
  done (took 2.669056125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.087508295 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095074942 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100172792 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09459878 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07872074 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096758285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083208215 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110789565 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079779147 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094967888 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.087443171 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097614938 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078626847 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094717487 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078828825 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094316033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078407711 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077375552 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104387914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100737749 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08346738 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105025424 seconds)
  done (took 2.788658722 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09236609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097056975 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098814109 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099512787 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075110322 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097164281 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084840591 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09505147 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086365138 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097079895 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078209357 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095953536 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085463589 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094638042 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08331725 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095869982 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079419291 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076643369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097548219 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07591017 seconds)
  done (took 2.570423287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116923736 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109176974 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091407506 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12189215 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095014324 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110212229 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121590455 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090774413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109688331 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104141741 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109184901 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092007425 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120832424 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11652647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09136955 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121070942 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120321825 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102581496 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110079726 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091428697 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122979641 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091912012 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121421854 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109191553 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091255427 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109311481 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09243434 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116241584 seconds)
  done (took 3.789116201 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075691961 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076746879 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092324625 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075514574 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074125702 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092758462 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074012681 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.092111953 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076447878 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073861032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.095012538 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076623088 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.094850428 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076561554 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07682821 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094264344 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076622386 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092991718 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07451913 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074068773 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094440879 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077016697 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095034369 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074378658 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074125367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094490822 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074328674 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09213488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076680879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074345593 seconds)
  done (took 3.251753593 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083736558 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101029611 seconds)
  done (took 0.976083755 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.072915216 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111776257 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074102124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079511539 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101106318 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077841024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104879559 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082889686 seconds)
  done (took 1.493591971 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099664864 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115734878 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083422787 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107433849 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096220497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114223038 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158688462 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083544701 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103372545 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.078370638 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114252019 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07728054 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.085212105 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101605729 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086570867 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110331321 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.078761181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106119443 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08680834 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098717859 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084051894 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111883336 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088733379 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104854297 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080797097 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107950168 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091781904 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108065613 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082670918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107927549 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085474133 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090100902 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082331262 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101603114 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079286243 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114544352 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09497517 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101332928 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088437746 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102488608 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086932536 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09508201 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08840048 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103046762 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089762295 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101431451 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084153136 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094259996 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.079080085 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081302217 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094709469 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08217787 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.091592615 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087647368 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105538025 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096783809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098734598 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.083774185 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.101100487 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.082051741 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.103581219 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.082643322 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10743481 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081200018 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10516717 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08694751 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105482554 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076246087 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.071527766 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09737187 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08774412 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121774452 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.10790628 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084356577 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084986715 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097971185 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084148286 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103726369 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086047684 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107113088 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083390416 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105232878 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08761416 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100730873 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082106928 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103315377 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079986409 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100218496 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078630062 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117479467 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080181012 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096824892 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079517644 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107138624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082570561 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081698022 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098102443 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088804762 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09028948 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084033607 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10318646 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084780585 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109175058 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083470905 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10275633 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.087115993 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.107853787 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083744763 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10148929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074378943 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102924139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.080351192 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.085833797 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090791288 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084041415 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101154609 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08407963 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107796492 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080359246 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102194319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089286036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108824151 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080510175 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092448917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.082414449 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10119344 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087866622 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108309982 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08079723 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076458314 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095337957 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086314841 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101230628 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084592422 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101557168 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083636923 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091528982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.079111704 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.101472222 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.089459757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100037962 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085007031 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106833015 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085300679 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100137176 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088612391 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100914107 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.078801319 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106947643 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082250512 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07730761 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108149536 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.08296524 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10022621 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083401262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10785131 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082621737 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102721831 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081414355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102539311 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085628502 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096551557 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083705986 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080746364 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110729337 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101424623 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076994011 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075470099 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103835188 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0796746 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102126789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07886942 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101718326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084878236 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079611936 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100781873 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08211084 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115721598 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092075344 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104769194 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086275119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110344327 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083227022 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10510078 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082793908 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10350723 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084702338 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106921003 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085823031 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103533216 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082727519 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094675409 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08521398 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108276884 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.07864548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078823081 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097648954 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.082800504 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108873124 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083292921 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102591858 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081060297 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104828728 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089031483 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101438001 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083334816 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098199431 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083922739 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.087203996 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103958172 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085840855 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108930286 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083878516 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096299218 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08796058 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099208916 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086926937 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095610147 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079848024 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099417902 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08585768 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08194778 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101574386 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.073392157 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107120759 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089270324 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103966254 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079821052 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102449625 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092585137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101290768 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087000885 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102752044 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.086541883 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11657389 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.079231412 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.102574822 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.091630712 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102895961 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072522882 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105748613 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.0817167 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.077905959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100863677 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08070999 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113288574 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086361098 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103673942 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072853673 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10123028 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081881367 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079911522 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097799629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088565735 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103254278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08367922 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11170883 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085502682 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105474957 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085542993 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102421909 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085097934 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104323325 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084508046 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103685091 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082889 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098059469 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.084047842 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.098058135 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07988067 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081380231 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102660935 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083450435 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104582254 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082647379 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107535738 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084503468 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103426363 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121211697 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.0811513 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.079749316 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104043189 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086670924 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102803684 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.083348351 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096408208 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088784619 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103124141 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089604735 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102531771 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.075873907 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102999742 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083096642 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104260716 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085872698 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.085655779 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101726283 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.082924136 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102887492 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093483114 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099722879 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091123954 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105529926 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085628212 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103403592 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085295858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101569589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079488083 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102715207 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08597001 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103860438 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.082588896 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106282017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085098019 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082577249 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102373448 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085334862 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.10377748 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085502968 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092514641 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079521043 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098816549 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084682246 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10715873 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085582909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08132503 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101179368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085650191 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101814949 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.076031949 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10698537 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086336815 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104744139 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09250483 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0997915 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083528706 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112790348 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074063679 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100967718 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080134603 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08002467 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110103724 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085662126 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109502827 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085102449 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.099422888 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076824403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105385957 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082732482 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.073503322 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100235464 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086939384 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101699531 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082065453 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104132261 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087428809 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105360852 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088573067 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102122001 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083761162 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103872394 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.076504534 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079894212 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.099477263 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084089204 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104855211 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081497052 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095903799 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083726181 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103250569 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084859629 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082914836 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102625773 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089503274 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103229613 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08401548 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108933417 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075020348 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.10349177 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083515075 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102706675 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080118412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104853156 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085110876 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105572233 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089145241 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083822656 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106783008 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083852781 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100528889 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083926128 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103820216 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084780674 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.099032152 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086179424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109674574 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.080555567 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103459038 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085035084 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080402612 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105378647 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084857834 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104425488 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086535103 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104791086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084353458 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.106733502 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0844255 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104759706 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086754205 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102514982 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088681778 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099814356 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091713849 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.104820913 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086283444 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102408865 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081127713 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083418023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102962204 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082911737 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108908106 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086139764 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099717663 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080994426 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10025881 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084474557 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110165546 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091161946 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104854971 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085633549 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.077428169 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097388618 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085981533 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.100499365 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.083488886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106128059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089538545 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105261242 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.081125669 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101908151 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.089017824 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108427133 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087330721 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100351285 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086948872 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105492307 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084785468 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081459348 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103928883 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086021327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106140466 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083928103 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100703196 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093753438 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108995477 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086719456 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103493235 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.088125129 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103874653 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079156888 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106380909 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087093063 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106885372 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084945717 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104360683 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095083915 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.099469624 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.084356111 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110632159 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083928285 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10940526 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079229988 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084967375 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107063773 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087310886 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098884721 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081072801 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100328953 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.08446259 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100080244 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078537236 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113879415 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090194454 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105007033 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082978024 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082937481 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09874499 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078578251 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100023275 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086542205 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102884371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093183697 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.099938139 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.080830292 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079290365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104956167 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085514525 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107695118 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077001348 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.09923663 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082075793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105604691 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091791684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103341374 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0850894 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106227531 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085286187 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081244576 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110450072 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.077065553 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105985265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097030999 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106492012 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087373296 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106924987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090751311 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.10637104 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.07912453 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106519361 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085267362 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105880713 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087003271 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107126205 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099714213 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105846685 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081066143 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103996084 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.083970086 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100576505 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093707737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106708903 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087117697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107472751 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08415604 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087452771 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111947757 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107060803 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085903891 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104708901 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083742036 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084656116 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102435632 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08292898 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106557366 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087473526 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104235763 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.088128604 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099982371 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095623673 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110989017 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086908763 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096245354 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081657531 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081067948 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099467698 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087666286 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.097660986 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082613454 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102105062 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.084682926 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087448969 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10741584 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085122344 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10752137 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084793839 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0942279 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.08993514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105001621 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087465597 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097012169 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086657404 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087237272 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110459967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111265771 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083461391 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085000615 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104366459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088133038 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099510168 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088857957 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103314403 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084660388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.101559197 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085741163 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.105909722 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086958578 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085595992 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108388653 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085114038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.108773322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089209382 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.09826579 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078068719 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107460961 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082653753 seconds)
  done (took 56.535188865 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124437438 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106874909 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07563247 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095751027 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121660493 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081054877 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075201657 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100803883 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080211973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109829262 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076162777 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096014103 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117756441 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104592443 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121002867 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110233483 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076104879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100210221 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076566983 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100824457 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097340836 seconds)
  done (took 2.891617618 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.099112739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11447667 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092591534 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119925231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106835651 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094506605 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112382508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114186066 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098852411 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109119872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117726287 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094826351 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108915344 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108776723 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089422515 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111659482 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097653232 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108045964 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115084596 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093531263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111207418 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112444993 seconds)
  done (took 3.174191661 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087449683 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.084262185 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.109065756 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.075728531 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.104449291 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.075944288 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110035694 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.078192225 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089251226 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.105448546 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.081709556 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.105087209 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089605309 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.095708554 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.083173006 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097825961 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090610157 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084093136 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106344015 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.078598675 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.123902092 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098894306 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.07898322 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.081974663 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.114559923 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085632987 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.104588452 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084450397 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101442625 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085217288 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.07756364 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106570392 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.087913926 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.103896885 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.081922819 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105696336 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085249025 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098758295 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.082017096 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087196154 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101302945 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085298335 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.112139704 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.081497704 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.098296237 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086912577 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105158075 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.076987859 seconds)
  done (took 5.297999934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112787285 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.132848188 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105018066 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143630302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120634104 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093894429 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106481716 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144264109 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078635821 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082522938 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123988864 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119440693 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.084640354 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.1115585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108233946 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08595539 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106317365 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080479717 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109222921 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080801066 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111319014 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.088149796 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119624543 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116543136 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.088930294 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104609967 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.080156836 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110661404 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117408233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092021963 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110843115 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092141486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119569376 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106656982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.081637297 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106647321 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101891836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105076804 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086908699 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099566224 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087565651 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110965909 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.087444396 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121727008 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105868264 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.086960871 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105622946 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079037044 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116650606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088129903 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116223415 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119475438 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090288847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10679426 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090350211 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121127881 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105366893 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083238638 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109825857 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097658321 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.09890888 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089475173 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118359855 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106811428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.09456823 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118378571 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106342636 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089641623 seconds)
  done (took 8.02137573 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110259485 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111703535 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100573594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12314574 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110644044 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.089812816 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110561924 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090704175 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110157362 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117479524 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090690029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.159518575 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087219228 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11840304 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109950261 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09047979 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110938644 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090618593 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110877881 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090324687 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109844171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121775498 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092120475 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122064545 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123088345 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087926534 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110127417 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09012641 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122594874 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110577933 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103298829 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11032805 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089868017 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.123859706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123771997 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.110597112 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084471713 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089583209 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111109234 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109947317 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0875073 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122114641 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090540424 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107939906 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090392365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1112844 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122304869 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.101655582 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117262349 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117334719 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.090246034 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123067497 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109963093 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09055972 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121463247 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.130970017 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101458953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123476491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110785077 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101580663 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123154331 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131159074 seconds)
  done (took 7.562659548 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111111077 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.118726163 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123234666 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077270545 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100737933 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090643818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.100059408 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.080048748 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116744493 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096046311 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119804579 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110103404 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094137858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120308402 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090038263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114542869 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110126762 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089560361 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117767747 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110597353 seconds)
  done (took 2.945756578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.087964833 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12335135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082867173 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110466601 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085266796 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109847691 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.084654883 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106094094 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082770237 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105544369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096227114 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115730908 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082946914 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110013194 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114815697 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.089836324 seconds)
  done (took 2.443124455 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099929155 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124142491 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128380876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086823595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.079232699 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108278153 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084633959 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099356996 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077739569 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.11066573 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088755538 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107881506 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085241202 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078982784 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10405134 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088136764 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098254941 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085896295 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105881063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.106825635 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10888189 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084265807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10677721 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.084301763 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106356902 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.087071811 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110057466 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079658066 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10139763 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085939495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105199102 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.089665362 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100113181 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087265102 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101098047 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080037608 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10580376 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085169764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10893515 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085090956 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079136778 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105980506 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085442653 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105406819 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.078497745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106429477 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.078806197 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109013517 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084228055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105994572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.085259357 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111290448 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08949779 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114568013 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093270409 seconds)
  done (took 6.146273067 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094371291 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107407258 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087010919 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100815074 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086298539 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089707296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108841649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086194453 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105549334 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079599496 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105668468 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087283027 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105287432 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087370567 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105260723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086992065 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098154253 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084946996 seconds)
  done (took 2.570414105 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085350654 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081543721 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110870354 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08193138 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104087772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084274022 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098893906 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.080724893 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079766205 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104405119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081982841 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.105414234 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080959186 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104985258 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082716653 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103499778 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.085455161 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080515246 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103518561 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077835328 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105790892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081170104 seconds)
  done (took 2.870845375 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.095721956 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.135290749 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.097034043 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146271162 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.086220455 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.109917418 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.095767802 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.108608368 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.125645018 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.086390178 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.085674811 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.107542617 seconds)
  done (took 2.145833135 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103103339 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14113479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083849696 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106754079 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096793272 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109956162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087131095 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109876349 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121412537 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099919158 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110806862 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122373594 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101850613 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120396844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117873599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097736623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109285807 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086728013 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105435092 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131287392 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087754562 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122358317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10849897 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088237387 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108211529 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098400885 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12294711 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122743982 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087921162 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122363097 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117937824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088259891 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122760037 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121300419 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085168895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123394071 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108072617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110004635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118649077 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120065487 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085972257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117445204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122334884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095282152 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122749246 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087635414 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116349235 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108458889 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088525552 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138551425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117300112 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120638114 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097571967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122774376 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122149505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137836629 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100866915 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121434537 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118303216 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100768714 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121705249 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11892615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121087181 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101459466 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118477329 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120193686 seconds)
  done (took 8.160960886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119073349 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107343108 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088158105 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126093866 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120423799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088596038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110407258 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087152165 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110847615 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084439355 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155134177 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110095612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120665266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099222725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110245157 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108899825 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088998887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119818886 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085372651 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137786007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108841511 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099072249 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122473209 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12035122 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122029434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096706265 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109574624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088096418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109974751 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087982718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118542783 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110611457 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100266334 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106868084 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120714028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088486785 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109614604 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095159032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109340721 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118686725 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100226294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132436122 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10913524 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088473378 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123770813 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088705932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111330337 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083629553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111759416 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08468201 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12368354 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123897747 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123254074 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121475452 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089061485 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109904735 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089023271 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109829213 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088956476 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117952419 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121368328 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088361497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138739696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110051576 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089217546 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121500947 seconds)
  done (took 7.992429475 seconds)
done (took 152.898965122 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097655956 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.139764776 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098167317 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169174243 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08027301 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.14100243 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114013309 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11733247 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083445232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.083431944 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106133418 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086408489 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172834521 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080565935 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.104477545 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.088066026 seconds)
  done (took 2.629365262 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176654949 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.288964227 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104225363 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.11179108 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090384555 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108328823 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089207311 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111569405 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.085902651 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.117080552 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086076667 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10707138 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.09596402 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107873513 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086196655 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08544055 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.118412951 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107369249 seconds)
  done (took 2.956105926 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.110317009 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150867612 seconds)
  done (took 1.134183709 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116668045 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.186556439 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298274655 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.374509692 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132793252 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128623939 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.161879915 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.105308093 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.203793091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130778795 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12940667 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090573791 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138787697 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11776934 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095008234 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.112235141 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118158431 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11505101 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091675275 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114685863 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138463158 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.091870806 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117543773 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092275497 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.187198852 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127660246 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.091000863 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.113489504 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.091415849 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113933029 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.096040923 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127685633 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.127822242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.168424868 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.117613253 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166419263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119887786 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089910723 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11350907 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090187075 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115788893 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.094559047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127845811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.089005392 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114449902 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118638764 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091424803 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.11309673 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100078171 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121533086 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.097623556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.118188258 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162991663 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121270228 seconds)
  done (took 7.802764743 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789699442 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153351253 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089445107 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.900876594 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11645118 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127196728 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.804502991 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112189975 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234942923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.815983041 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104680712 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127100744 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233047867 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.253835923 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.141219294 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316895902 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.678530795 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128639518 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.140968618 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.127601779 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121880309 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13933257 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108257869 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45453662 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.11443658 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089103221 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118910542 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099757061 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185354542 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090913904 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115219926 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181635268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268262996 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.17795481 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114636504 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087136895 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112287826 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170006588 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271888677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198126917 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.177059351 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085273912 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112905194 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122575791 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.109082911 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10957032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165337037 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177225405 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.173972511 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115434216 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100335018 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122338424 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099324723 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187301268 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.088864189 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.339374876 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.343300763 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089601798 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121138272 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107399422 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26808653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089681143 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231145538 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138625099 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194698038 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111136878 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770624261 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167468142 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112558547 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096301725 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120107154 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116975978 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101263387 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169590561 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391954193 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126274116 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094048454 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087738284 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233149388 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089347372 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111269996 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166858454 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090865296 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121400638 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126772978 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.102650538 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172827306 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250613613 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126873553 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120998337 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094209474 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124851778 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.090459001 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213496903 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223717774 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160836439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212151557 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125758797 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16506089 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168757616 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122950937 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173672069 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119892842 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105449571 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125862461 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219805022 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.142864237 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091703825 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093738957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121548921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146138028 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.093205486 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.122352464 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17059148 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483806423 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.192457196 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.086551833 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093143863 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123129805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165248234 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119439332 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.246030973 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123140721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171688859 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120003788 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.086831984 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122630542 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165754208 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102575577 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122588524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124397232 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098656209 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251455828 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224913194 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126594548 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222563543 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.181357831 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097911422 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199666756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098645717 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169208336 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122490636 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100036322 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116501762 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.783746325 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.104601145 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120230359 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094001724 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196456475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11297396 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09182104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088747776 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110381468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786528096 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.117552394 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.087510094 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.114708401 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099066387 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120634289 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095434665 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.118797078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164889565 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23795848 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100163057 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120936736 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.088022532 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.186785056 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092362117 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089382607 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.114477182 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090166761 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123123626 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09374915 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.116211657 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.175762321 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162758063 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.226551449 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.558007883 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113976662 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091349688 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235728344 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089205184 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.310815665 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122072128 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.209349488 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167737483 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112104949 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341301921 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.172008525 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195274518 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094366484 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173851842 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110692805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096582557 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163646089 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113223149 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096024741 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.184292858 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105067182 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.126693181 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.126558587 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114251201 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230041949 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086147792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.196997816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093119841 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123658581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289059478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113670245 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131784846 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164257981 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094565499 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112992086 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.724416556 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09037507 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124456668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120853686 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209851737 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189972028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098047039 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12013193 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101465134 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164156852 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.236477988 seconds)
  done (took 44.112990823 seconds)
done (took 59.50809025 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311968836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266376364 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264613894 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.223360355 seconds)
  done (took 2.045261337 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175944403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.128726961 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.148517427 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109516053 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.131685516 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11037889 seconds)
  done (took 1.706954611 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.433982636 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.367225772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.338960975 seconds)
  done (took 2.044585015 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250760668 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.275122159 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325572244 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407005829 seconds)
  done (took 2.269008048 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206545663 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.10235232 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125198751 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.115454073 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.172302988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.200674368 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.120886352 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152609104 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131351221 seconds)
  done (took 2.276607943 seconds)
done (took 11.250417213 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147815539 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.281731483 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.230692068 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.265042564 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.180426071 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.161314015 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09874575 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.129374613 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.093473044 seconds)
    (10/286) benchmarking ("sort", Int8, false)...
    done (took 0.209251564 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127636526 seconds)
    (12/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.20224906 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.095759959 seconds)
    (14/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.128736701 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.248298595 seconds)
    (16/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.274719425 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.251133528 seconds)
    (18/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.123745039 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174094906 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140838691 seconds)
    (21/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.123610015 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102183105 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 0.232910853 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12223293 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.228739231 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094501464 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.20367272 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098799781 seconds)
    (29/286) benchmarking ("sort", Float32, true)...
    done (took 0.239812494 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175269744 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.197985477 seconds)
    (32/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.215162148 seconds)
    (33/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096567894 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.1009827 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.236307951 seconds)
    (36/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.188757593 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.120273198 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.102573254 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125005934 seconds)
    (40/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.221951791 seconds)
    (41/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.09901221 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.129134556 seconds)
    (43/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.112641805 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095442517 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.162466347 seconds)
    (46/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.175223807 seconds)
    (47/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11818733 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.099598266 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090163485 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118504719 seconds)
    (51/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.214050919 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092466177 seconds)
    (53/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.225782842 seconds)
    (54/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.187063572 seconds)
    (55/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077063516 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.252737262 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134933328 seconds)
    (58/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.247137934 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.097596231 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.203247042 seconds)
    (61/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.244703063 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090013006 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.100365739 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11356191 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128472135 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.145421374 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094315615 seconds)
    (68/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.122935817 seconds)
    (69/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.105417829 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.200148876 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117047973 seconds)
    (72/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093378273 seconds)
    (73/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.206490513 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.079075265 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.117220622 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.12558208 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.200705456 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.111532719 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.176510205 seconds)
    (80/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.119063939 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.092714302 seconds)
    (82/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099995702 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.204368313 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094461685 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.089713976 seconds)
    (86/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.114560828 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091343511 seconds)
    (88/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.168455087 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093288658 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.197548529 seconds)
    (91/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.105226953 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.177469448 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139398016 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137927101 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.097497311 seconds)
    (96/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.098310616 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095870567 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082356344 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120209831 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101855558 seconds)
    (101/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.120257308 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096075506 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.127009965 seconds)
    (104/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230380626 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.075945268 seconds)
    (106/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.11701989 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139672055 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.152998509 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.190738458 seconds)
    (110/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078856581 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.119006342 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104198637 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.143360529 seconds)
    (114/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.11829658 seconds)
    (115/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.118855584 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158505316 seconds)
    (117/286) benchmarking ("sort", Float32, false)...
    done (took 0.176985584 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.089168909 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119273044 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.102578709 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.12965273 seconds)
    (122/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077175217 seconds)
    (123/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.161896338 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.177575475 seconds)
    (125/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.102883509 seconds)
    (126/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.128618437 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.186905372 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.125138214 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.142604803 seconds)
    (130/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.10216521 seconds)
    (131/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117216095 seconds)
    (132/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.173367159 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.119742496 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.191442022 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.149724723 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.126785255 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077128431 seconds)
    (138/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.221386507 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.134962729 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.118201751 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.153979019 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100622854 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.102084148 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077326971 seconds)
    (145/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.108924478 seconds)
    (146/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077628695 seconds)
    (147/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076428195 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.15930689 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098781987 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.10441556 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 0.232987482 seconds)
    (152/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.092096904 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112890156 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.09697664 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12061754 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079934373 seconds)
    (157/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.126092177 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112649815 seconds)
    (159/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167547457 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.101265453 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.129248439 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095752983 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126605581 seconds)
    (164/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103730276 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.127579218 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094912888 seconds)
    (167/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191823765 seconds)
    (168/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104346046 seconds)
    (169/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.086555946 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084360202 seconds)
    (171/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.112650847 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.078673358 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.193176636 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106570084 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118205666 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117326988 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.164887551 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.119430208 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080329599 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.120600685 seconds)
    (181/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.084317299 seconds)
    (182/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.09164027 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11788055 seconds)
    (184/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.090677469 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.10440498 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.126655267 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.121304308 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094145727 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.112735614 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.092255222 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.119663316 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.076191961 seconds)
    (193/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.119459791 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.100013397 seconds)
    (195/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.100755264 seconds)
    (196/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102495608 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.07744217 seconds)
    (198/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117774595 seconds)
    (199/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128324209 seconds)
    (200/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092444566 seconds)
    (201/286) benchmarking ("sort", Float64, true)...
    done (took 0.241800393 seconds)
    (202/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.118391742 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079488035 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.188698492 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.077751559 seconds)
    (206/286) benchmarking ("sort", Bool, true)...
    done (took 0.233927365 seconds)
    (207/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.116620666 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.080666414 seconds)
    (209/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168430867 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102758616 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.153312033 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.092029807 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120307551 seconds)
    (214/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.093716895 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14021914 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115352025 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129592184 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.105082979 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128555365 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089244987 seconds)
    (221/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118795601 seconds)
    (222/286) benchmarking ("sort", BigInt, true)...
    done (took 0.251812733 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078508471 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.129089629 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.086712557 seconds)
    (226/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115462579 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093345709 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.118881337 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092306065 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.185144511 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.116130871 seconds)
    (232/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100615911 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096206221 seconds)
    (234/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.166627276 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078428103 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.161185395 seconds)
    (237/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.189932685 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.131822217 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.102809748 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09457589 seconds)
    (241/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076837588 seconds)
    (242/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.103436761 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105799827 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113454187 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095722142 seconds)
    (246/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.14162509 seconds)
    (247/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.13923283 seconds)
    (248/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.103417197 seconds)
    (249/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080506174 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.121351309 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079342921 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.077790766 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12959364 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.088700544 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.114026843 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.076211569 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.11382091 seconds)
    (258/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077802249 seconds)
    (259/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.084659148 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118588106 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.083259596 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127818326 seconds)
    (263/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.077078542 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.107439721 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.152470211 seconds)
    (266/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119709806 seconds)
    (267/286) benchmarking ("sort", Float64, false)...
    done (took 0.176454512 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.099559368 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.119766659 seconds)
    (270/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078399122 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.088812251 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.110629565 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090653095 seconds)
    (274/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.121655645 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.103611667 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122396238 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092002964 seconds)
    (278/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.103596575 seconds)
    (279/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093554318 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.104637192 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.097857385 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115690969 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089336419 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078694753 seconds)
    (285/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.154495683 seconds)
    (286/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.10958345 seconds)
  done (took 38.132693324 seconds)
done (took 39.045481186 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096351737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155515416 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100247152 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143011114 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103106259 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.130315967 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.098374222 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.12652469 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102837357 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.128821808 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.101412332 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.109754074 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100459247 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.124506737 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100599024 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.146710079 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10286085 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.121598565 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.091695013 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.11597044 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.091557162 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.117649849 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.093550255 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.108997781 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100588258 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.123314677 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095449638 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.124877935 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.09306993 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.114907334 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090783229 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.095191284 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.115615907 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102233171 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119287447 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.091769976 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.124904804 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098701558 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.119471404 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092583367 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12265789 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092986181 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119954273 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.097837595 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092351191 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116247051 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091459698 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127918812 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.147986185 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093486213 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096825556 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124916175 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.099519143 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.122099943 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089863393 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117202807 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093424626 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146901343 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.09117099 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119436447 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097350233 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.121739891 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.090453548 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117661193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092432134 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124435593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101105308 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.09111821 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.124249037 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.095099045 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113125503 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092692673 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.116303295 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.090967441 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.123536732 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100070351 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.112088898 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093322247 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095551223 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.119490754 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092092484 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116573749 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.093812434 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.117803862 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091820866 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.108754028 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090734912 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094419537 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117564137 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09224547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120232171 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095441293 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118987581 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101113738 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.117751632 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092941986 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.117777916 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092435596 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.119258077 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090796192 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112995271 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091810969 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.096062335 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.115097712 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093305252 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12730722 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090560534 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.120258779 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.09155714 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.116659175 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.104791434 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124185884 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093570865 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119735686 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089092355 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120034957 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089952459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090690779 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.11662207 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093230025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119554628 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09351548 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116410217 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096034844 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.128700779 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088840553 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115685789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091652052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110892081 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.120925092 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.092069392 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.11559865 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.091328773 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.112410959 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092032389 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.115202934 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.095325962 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092001506 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.117721405 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.092849466 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.117562534 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094314028 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117813123 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094283091 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.115106753 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.085394465 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121835119 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091920343 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.092989019 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.118685355 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092377617 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113812556 seconds)
done (took 17.228157905 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.094226603 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187803325 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152250935 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.154472371 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.125513873 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.137963087 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130914086 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124230669 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.128343006 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.148562754 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.120430485 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141482104 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.155629241 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.101104627 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137714756 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.126342284 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.100131801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.135960832 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.160400495 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.119943806 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152094675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.101470607 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146702744 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.146152387 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.099233226 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.146517216 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.129044579 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.100603879 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129536392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.118447627 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143264273 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129654497 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.102938329 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.138710806 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.108334526 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.125645567 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11009696 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.122204586 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.101015146 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.127240506 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14084428 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112798202 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.123762847 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.133976779 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.100386397 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129360672 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.099384824 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12369943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1015509 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.121313412 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105856303 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.146674348 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.099019731 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.128052141 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127243634 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.10033519 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.129206638 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.104593867 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129101068 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.103089945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.127493614 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.129176311 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105836798 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144353941 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099636538 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129278652 seconds)
  done (took 9.216457686 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109541021 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.155764154 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.134822234 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107669391 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.130786268 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089127702 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088568155 seconds)
  done (took 1.788978513 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085082246 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.145096998 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124302439 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.148825297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.115928687 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.154055661 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13288158 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091248061 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.141201923 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.101243468 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144725609 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171707568 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092021098 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12840311 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.125696167 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.117178559 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.126287182 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.117167336 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098326761 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150475929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09535392 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.139541981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.129210645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.093752681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139475879 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093195607 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182246674 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.102104568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115974445 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.096865004 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121365549 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.188792682 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.112406812 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.127830591 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08786403 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145618909 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.136845997 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095775999 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.14113231 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.096160987 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.138535212 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097731071 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.123915126 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.097106632 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12491088 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105593479 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12847296 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.099226199 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.122795032 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.120045368 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.128102454 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11266728 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.118808228 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095443922 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.127334133 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098676263 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131837501 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095941565 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.145237444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.098189897 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.144792811 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.144263603 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.111854431 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144248036 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108383387 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.141590718 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.112400584 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12529264 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099111653 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.124264491 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.14449855 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094594957 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.128035198 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106524357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126196062 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119547761 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144629262 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095480679 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.131554383 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096122721 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121221221 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.09254182 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.14616797 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095442708 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119473756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109223171 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129544296 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.096901062 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.121563158 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.114139076 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123017246 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.102686502 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.12952582 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.094891692 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134228058 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.147064057 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.101811673 seconds)
  done (took 12.667802198 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087162199 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.090219251 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.124713942 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093889238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.120055986 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093830244 seconds)
  done (took 1.597743603 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114788226 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117908408 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.108763788 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125617583 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.136691242 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.143062573 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.14300011 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101685193 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.139661387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.107577969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.143704658 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.117302555 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.149203777 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124929023 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.116414264 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.127462697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.11793916 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.122507679 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107354421 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123530636 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110701128 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125748803 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09622353 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.142112649 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.100760413 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.126594944 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100262696 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.135569137 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107265204 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.129762999 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.099782121 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127894565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09950512 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128331356 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.144208266 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09946501 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121125401 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.102552843 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128233308 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100722471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144887256 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096616703 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132804994 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.103412673 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.129076905 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.100054973 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.129656962 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099705896 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.143774318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.102162815 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129566118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.100058868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127202723 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.102711321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.127384712 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102602438 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.129223034 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.118040229 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.127477558 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.100070907 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124339533 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101279485 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.129748958 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126478948 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102294722 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.129432863 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100574812 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124160568 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097030972 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.099437053 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.129893848 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096655424 seconds)
  done (took 9.515591221 seconds)
done (took 35.750331808 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673255159 seconds)
  done (took 1.655629247 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.828517353 seconds)
  done (took 1.812027049 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.359237122 seconds)
  done (took 18.366352054 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.474149565 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.572987982 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.992048749 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16944077 seconds)
  done (took 3.191650534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950947842 seconds)
  done (took 1.953363443 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.293575961 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243601409 seconds)
  done (took 1.525740002 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809077402 seconds)
  done (took 1.80681018 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.554312086 seconds)
  done (took 2.546349102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.344447291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.177827336 seconds)
  done (took 1.526090161 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.568341123 seconds)
  done (took 1.571591313 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.811951249 seconds)
  done (took 16.814263043 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239465024 seconds)
  done (took 1.252584239 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.291772512 seconds)
  done (took 1.291125775 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.557741598 seconds)
  done (took 4.559626679 seconds)
done (took 60.868842481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096244972 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098779663 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.129139043 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.102717056 seconds)
  done (took 1.421289561 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101034719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.126431383 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103501108 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126302353 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.10820343 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.127159324 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099163315 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.171694819 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.099813961 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.129265084 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.099200241 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.126550715 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101341115 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.126621544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.097717739 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128538479 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102367314 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.128111529 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.100720087 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.127989188 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.097014027 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.128464043 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10283316 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126695343 seconds)
  done (took 3.79620125 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09587326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089802269 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119822406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.096218154 seconds)
  done (took 1.407179789 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100197178 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132590552 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113121491 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132779999 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.113495806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.140259216 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.095283946 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121787092 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096614147 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132828811 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097115372 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.143366809 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112660637 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.11953358 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107715626 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.121261635 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091868144 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.14176584 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.105554629 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.134762191 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094873623 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.13295008 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.10261416 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136982373 seconds)
  done (took 3.833370444 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169921658 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129982391 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146582254 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.102137001 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.173941094 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121695844 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.1219535 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148045545 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.094346192 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.134399564 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099756331 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.174717049 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.104676212 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.125934669 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.094825668 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.12897234 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103659126 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132375797 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09733573 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.137064112 seconds)
  done (took 3.551515504 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096465854 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.093448953 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.118944407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.093285855 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.130425049 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.099245908 seconds)
  done (took 1.643647448 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.085650177 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.088337847 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.118789926 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091133577 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.123302351 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091215613 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089135733 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118665284 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090765388 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.090452486 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.117875571 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088987084 seconds)
  done (took 2.21057792 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.380048155 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.122995623 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094077511 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.120554626 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.099764732 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.121797793 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.107744924 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.123389447 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.125729052 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.123080443 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093886156 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.125688862 seconds)
  done (took 2.655725477 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206679802 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100476891 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262463216 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364012151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161669806 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171013253 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.287924854 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169313314 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.188343842 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114405386 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227559821 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133577832 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159056932 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183399161 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145486558 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182887321 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179698577 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203376349 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124713449 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238292007 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167535166 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14407386 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184464106 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157289973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143090366 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163245594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097034673 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132769806 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177245248 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172675797 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177814533 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125276488 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145248972 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203583715 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245704101 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183762673 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.313970569 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137069369 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.193284793 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.190421326 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233693978 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146458158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200506319 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160997002 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106093086 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18764821 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162694996 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186624625 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136602819 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117300584 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21798403 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182007174 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.185258468 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113397527 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337795131 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120415747 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.153072752 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189634031 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191720414 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196954428 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174452012 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098158728 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219296554 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186499388 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185762515 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.122135151 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170494117 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131349843 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180485119 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202582996 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185497507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169253737 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.19159487 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140197522 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170562852 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175297234 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158742137 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183922168 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137922823 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12738576 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155158417 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113873169 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133896108 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164482117 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128803729 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209186612 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141563762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.196361237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20938722 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163738962 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136289562 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140611538 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170078803 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153828709 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125745633 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122792771 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.167897091 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163377459 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108392793 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163090626 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149017219 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132353855 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129453315 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.130024194 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165121785 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.111488879 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171641968 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170938547 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.132478882 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135117249 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151217354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.163496817 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175605366 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190356662 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109918364 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138182405 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199838369 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163607303 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.11115985 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17880741 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190088897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.170153267 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144900658 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175855197 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199011997 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149045256 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194976326 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11796613 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140630091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.157061755 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164988531 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161116909 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.133538159 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136252027 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158057252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197878353 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.103729064 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144321974 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180448411 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10369651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135356684 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147454478 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112964257 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.149425977 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152304047 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.113099355 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163746062 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165679721 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159002149 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134347092 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147377891 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197164514 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138436487 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.166646989 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.124239752 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.125584528 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.184597307 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190939393 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135891969 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203071387 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.175168597 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204226705 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171131838 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136990846 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154000123 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134097515 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096288716 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171470559 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166782929 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169083798 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.188721934 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201541456 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.171384458 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15779114 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155957845 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172880601 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181222627 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162524092 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120968061 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167421816 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172970259 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.128675973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100811682 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134646684 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118170698 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136756728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13782999 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185464123 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16934177 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195152923 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166384798 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118248448 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18753481 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131302286 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170533128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17902823 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114694813 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217167615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157119927 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172486275 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149168656 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181803936 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125070082 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100182576 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.139209239 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169941889 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109085902 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14002006 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119403077 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187735881 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179036612 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15571712 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235357855 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171784212 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197118673 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.098502051 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169749289 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176389565 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133309544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.190905567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138988681 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.136341979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183006925 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148706861 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19362958 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168259814 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175716897 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204016006 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163688128 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135523241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126229191 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171022163 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147106435 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172134261 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122103507 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141204114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158541426 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109815494 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131155459 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184257529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149919504 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184777494 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.164084877 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179515559 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102439573 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149142941 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167313969 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15245685 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094002367 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175464156 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19236545 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150709658 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165046099 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179441174 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105871648 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.320331486 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191754487 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218408378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112267507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149241693 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167235249 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135134069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168735328 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184136725 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151902429 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186831448 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164659036 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.119597634 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142094565 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152310983 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125717064 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.157970323 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138705745 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.159621395 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.118675437 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189782518 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147901615 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164911514 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170818645 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.125193216 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.155092827 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149115515 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206548722 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163410331 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18202855 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.131782129 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.172746394 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203065215 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131498761 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104401829 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133256839 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185230651 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108296477 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168240539 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.19448236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232354637 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164543254 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141122853 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146112862 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.097504971 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165772607 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156442786 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206651564 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146920532 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142992619 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196576078 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.156358594 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107834986 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170404447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297246006 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148943196 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178186332 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.094417195 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.287910371 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128246342 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108139155 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166831279 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176325921 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.142123869 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.159679428 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170823644 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150476932 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135994463 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143298328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198090883 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211630855 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206413851 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179999371 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1201357 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165706947 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169066002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182082176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150638792 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.119929817 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169950176 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188259796 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195138611 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139646366 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168608723 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139312028 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165844625 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17908434 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141223731 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203460281 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137563897 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171578545 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115633333 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131113431 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16273649 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192819287 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110844019 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179092995 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164116975 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140445652 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103156675 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158747822 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164961434 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148368421 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.10619238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183421578 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.131786518 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138754375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184295324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13720922 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159399807 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122290504 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144359235 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149561707 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122015002 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142264852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152424109 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209063844 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.106620014 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182575466 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182739888 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170247196 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167151419 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149928777 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642316106 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135069559 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187605714 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12265047 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189930283 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154265112 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174008164 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168271245 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155380955 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17372533 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125115456 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226494158 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172246419 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165736976 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107025732 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150953322 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150404488 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.106068291 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156922063 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168746194 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146586403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.112512856 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.163382896 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150458636 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.120287939 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145854842 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190811788 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152866451 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18984304 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186609463 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113858783 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173275183 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179120536 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137101612 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16637182 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178451374 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117739324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158275343 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138110103 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109657673 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186734247 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130800992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135969812 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166549085 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167496883 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170654471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140627708 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135849127 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149602962 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168051166 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137419037 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.130989979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164144081 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140286456 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103648906 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161665814 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166285525 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163976806 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101742142 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177371786 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187159872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101836658 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138664526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29229774 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16116654 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195206714 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.127634911 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141960255 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149946225 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129956949 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.160479644 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166354356 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134237384 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10837141 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137509716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.185300988 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.131685053 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165066431 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19337524 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16767124 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205946404 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.142249018 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.242029151 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14610532 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160677536 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.106714195 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136542303 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119388573 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140020391 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148767423 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198261377 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184200789 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.158877928 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120417755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133505951 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.103739685 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14084986 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167428647 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130314494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164630774 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151928393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.093905647 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152215988 seconds)
  done (took 78.305042071 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.143399717 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129536399 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.144429728 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192628832 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163109578 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2376982 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.201695356 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222703736 seconds)
  done (took 2.534560992 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.096521723 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.15647179 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146433578 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.131498573 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.095842592 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.342454146 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.143479319 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.129618123 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.124044687 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.143320697 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.123217756 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.550844444 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129978235 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.128558551 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.093655835 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115678544 seconds)
  done (took 3.742028517 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.260320134 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534044609 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.037707936 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.22614589 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.222496571 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.173137937 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.731216735 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.178264991 seconds)
  done (took 12.464139682 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.120325595 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.116198151 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.171254859 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.169524264 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.124473398 seconds)
  done (took 1.80759287 seconds)
done (took 120.36659952 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091632139 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.098098882 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130083202 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.104931959 seconds)
  done (took 1.516626138 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107033645 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.084949769 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.119100184 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083663182 seconds)
  done (took 1.503199417 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.436500098 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.083915717 seconds)
  done (took 1.659095383 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112787994 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132221095 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111192682 seconds)
  done (took 1.469575713 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099192083 seconds)
  done (took 1.211112769 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09344502 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09812991 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.14302488 seconds)
  done (took 1.444346589 seconds)
done (took 9.912171341 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111419516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.440027843 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.393537058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144228673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70114675 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.414686802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.003454706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.164765134 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17468031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095245538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14354943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677423577 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.020062445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346673555 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.993801657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345725126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.711995658 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09677299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.132103532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096928412 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.025478897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094277682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.127110274 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.097378026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.675261606 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.437659848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095627164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.38863394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094855675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131574014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.381890383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124662894 seconds)
  done (took 16.97866211 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093443386 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185930713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.102865459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126909584 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.0998703 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.127154026 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.106077964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.139200004 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188905025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096136059 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.143706717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09489904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100109028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.126660816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117030219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.126169999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098711376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.129523474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.103726645 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.127438317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116656567 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.125910047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098311529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098197852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.126668547 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108602832 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126677508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.109522995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.125001114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101672568 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128984082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096395325 seconds)
  done (took 4.907194326 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140166771 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.195825973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104861529 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.161932687 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177916002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098147686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.212419839 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166647305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.192511022 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096241159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14610695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095816099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.162393664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096781921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.148314301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.128708455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098575699 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.133111362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098358703 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.145819526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095121387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.128461506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099290489 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096373177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140559368 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096371535 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.140017503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095899114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132826169 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099667288 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.127497986 seconds)
  done (took 5.266462742 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095534142 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.102244704 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.143674851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.143074592 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098822824 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.102481534 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.135014458 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09895601 seconds)
  done (took 2.033826824 seconds)
done (took 30.295114991 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105355796 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.098292274 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.140566599 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10770855 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.13613481 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109012508 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125562382 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106859097 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138501682 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104457412 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.111089433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125258867 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.096585144 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.124866566 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.108603161 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.100222468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142524289 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104167563 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147320085 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.111778919 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.127954617 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.107234205 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.136175532 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.116220379 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.147150414 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.116264077 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.141644369 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102061212 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126627369 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096918193 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140550534 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118946206 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128575644 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112456565 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129820005 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.100458478 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096044406 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128693428 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.111383375 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13670172 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100846781 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.137316907 seconds)
  done (took 6.110591076 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.113832536 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.171623191 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.09613065 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.12751926 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.097451951 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.165959382 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.131440815 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.125978695 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.097100631 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.152680365 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.121874211 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.127761005 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.097419874 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.128001576 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.097388535 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.096503932 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.150611409 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.151456792 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.127184144 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.157656163 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.141972614 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.160034844 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.16376803 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.119890663 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.170103833 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.16209853 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.117809672 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.166423091 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.123602036 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.126088572 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.127068895 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.159494278 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.095456814 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.127921108 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.168208165 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.132752341 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.155174255 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.168685271 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.127139237 seconds)
  done (took 6.369948112 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096073561 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.108494679 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.147373714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.192716176 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.132965623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.136353428 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106858088 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.144797238 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112801561 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.126822817 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098287334 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.157726785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115490283 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136224843 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.096429883 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.1113055 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.148205726 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.098524708 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.132480054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115139466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.145599413 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.109589395 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140483235 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.107563748 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.126863074 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105517896 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.130298459 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111509892 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132594844 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104375073 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.130331223 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.101497893 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099923383 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.139121442 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.099924459 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.134881539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.119779618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136042669 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105856797 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.129069973 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.108773465 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.13139755 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118132141 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.177617386 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09651801 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134997711 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103936515 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136627794 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095151959 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.144100232 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106379066 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.128044604 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.111995109 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.127113629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096019628 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110532564 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.129694764 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099588617 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135740305 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103377387 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.147174274 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.101439701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141949731 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097142732 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.133028874 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.096343959 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.095337026 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.132074208 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118195641 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129645653 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.167973952 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09707296 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.102772986 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.136149333 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102118711 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137734631 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096706558 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141604297 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107155387 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.13180005 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.107356004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100712337 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131593371 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114314858 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.142549577 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.104843453 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.132815653 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103609769 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.131489857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097993852 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142958426 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099156306 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.131689707 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113171712 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.128600215 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100905996 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.104201901 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.133312813 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096382189 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142959888 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101673242 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.127769339 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107381562 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.128533029 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100846855 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106554931 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.132429785 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.096516439 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.132522728 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103639374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12708951 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.10041299 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.130969862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.099316568 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.140366215 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104905802 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.09968516 seconds)
  done (took 15.16975574 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234861337 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.225750314 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203600154 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313143933 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.118912748 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.157735232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221119278 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.173011267 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.096483024 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.170370992 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.190152371 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.198169989 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.186680288 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.20077664 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.184512676 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097659389 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14768439 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.150980271 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.224792811 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.311265558 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.116588591 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.144159037 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17263458 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.171762592 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.117060542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.144857745 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.124732071 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149599415 seconds)
  done (took 6.089741349 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105519449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.164917056 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.104566886 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.154299024 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.155615754 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098600873 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102421389 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.130018645 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110606714 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143464088 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.099055927 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.137009021 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.104027358 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.139533095 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.09762874 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.137651183 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.108583388 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.140300455 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.100334694 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.132836673 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.111449819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.147259138 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103637469 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.130860577 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.114435474 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.131813115 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.099855291 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.149272218 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.137568823 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124026963 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.094631683 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.138274304 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.112254455 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.128962314 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.100954285 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.132125116 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.100578157 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.131039231 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.099945571 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.09511142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.128527165 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.089411488 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.131117468 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.112599491 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135477519 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.096484788 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133998454 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10190627 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135530033 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.09567964 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099163507 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.132963483 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102142382 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.139726432 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.101762934 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.136353278 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.101685397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099847833 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.138778442 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.10079494 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.127058079 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.099419351 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135655156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.101000645 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.137711713 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.103719316 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130435385 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.100541525 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103188449 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.136438949 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.101113168 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139252634 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.095026206 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.130899626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.108337227 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.138383961 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.10225025 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.099229488 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.132122209 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.096842155 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.117900135 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.097270378 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085079814 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.133811766 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.097536825 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130836938 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.101152585 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.134415959 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.113420324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.138555246 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105225398 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12913602 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.100577798 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.133821457 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096314156 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.102333963 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.147723851 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.149798738 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.096653612 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095694053 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.145198566 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099059579 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.128066147 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.090660553 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.14001192 seconds)
  done (took 13.544172871 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129826009 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.181635232 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131138541 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.117484553 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.164855957 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.140564064 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.137881397 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105203204 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.130995456 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116530355 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.133369505 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107898888 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.102333475 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143144383 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.17122176 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.107811251 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.13024273 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.113006653 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134501011 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.152700412 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.150142197 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.170040608 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.14033555 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133914457 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.103405349 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.167195896 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.175530638 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112497258 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.142510472 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141470948 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.143597131 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.175571214 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141711936 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.135641529 seconds)
  done (took 5.836619218 seconds)
done (took 54.241125426 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.238107145 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.436560053 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.210427399 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.206865937 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.243223128 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.231920157 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.232494933 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.40296251 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.946788106 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.213161407 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.205438448 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.209607232 seconds)
done (took 27.915809608 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.283829552 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365598341 seconds)
    (2/2) benchmarking "String"...
    done (took 1.541804075 seconds)
  done (took 4.047283202 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.207174606 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.206973498 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457040254 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.207548844 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.230598771 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.223966483 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212419298 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.215279553 seconds)
  done (took 15.892117537 seconds)
done (took 25.568996689 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.293377831 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.423999538 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.479836714 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.229433082 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.208228147 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.207648658 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.212108024 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.260650881 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.221651002 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.214287704 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.208781435 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.478426907 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231337576 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.598176414 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.213024899 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.221488406 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.225110501 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.459097652 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.222010563 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.196804236 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.211012856 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.200778292 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.233710262 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.228661377 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.217442295 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.221883721 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.255278496 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.209394425 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.411737434 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.234478938 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258483836 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.209611665 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.2637129 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.215058312 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.318862903 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.240079802 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.403066135 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.216673392 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.200003296 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.21717559 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.426625407 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.630601235 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.215831877 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.212512968 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.216084367 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.29467292 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204662332 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.937960446 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.217141279 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.215897103 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.261424815 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.606590282 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.217426953 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.221579318 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.220119363 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.471455478 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.24464663 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.247853421 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.251205225 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.219891266 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.211937666 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.212039304 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.27804903 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.216464321 seconds)
  done (took 144.365023912 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.213059975 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.210770484 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.210984519 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.220329298 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.212934151 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.211862742 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212655292 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212355392 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.213505744 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.216043222 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.216765169 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.211278357 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.217436047 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.232109049 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.217499 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.231797997 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.217802262 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.228614705 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236429672 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.212227429 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.217681133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.218254011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.213359561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.213840846 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.217428072 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.299443378 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.251109014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.219462231 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.216023037 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.212815416 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.216295253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.222506304 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.833341954 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.070153108 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.229088677 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.238308067 seconds)
  done (took 80.588679481 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.213463054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213185846 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213598359 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.245430052 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214644186 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797492646 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804160431 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.925763174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.587855415 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.617354411 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.524778944 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.218845087 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30984138 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.228671217 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.214723016 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.229117638 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.243656347 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216262959 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214554874 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.783720944 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227260205 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.372744966 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.396077733 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.229839897 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246909184 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611977982 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213588092 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.214629565 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214933205 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248207987 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.551072701 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26465253 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215419099 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624675334 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.007211869 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335536373 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217864198 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.247773209 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216048721 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.500691424 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.218045209 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.218555137 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.222046346 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930590116 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225582372 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.804957594 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222673579 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.205475378 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222116022 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215859815 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.729290963 seconds)
    (52/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.229235815 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.877177475 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215278792 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216417032 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21991231 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215323323 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216341349 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.248632418 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.059716868 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323104674 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.218443597 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.220127738 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249306281 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217616091 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.711076693 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.222800116 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.291083536 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282106894 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.342231818 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788782102 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218688832 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316136147 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33984515 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.218989465 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219677188 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218121385 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.21840613 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.329865567 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.219534957 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.645610464 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.395842191 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236303637 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.617560874 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.315501802 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219606216 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642407439 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.223555145 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220542805 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.986813442 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317794759 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.219164412 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.220118753 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220615566 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646297194 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806258089 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.538926363 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.224002828 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.307532014 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.225876941 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661108115 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.786859255 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220695856 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.890714619 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220968365 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334015773 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398221223 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.236809843 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.220832834 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.621223552 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.227601014 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278053921 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225379197 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619032077 seconds)
  done (took 369.375020885 seconds)
done (took 595.467639918 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.857907057 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857646001 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.9668022 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.849011844 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.808835247 seconds)
  done (took 10.489598738 seconds)
done (took 11.639076609 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416986624 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.422283627 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.785958553 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422908307 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26033723 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.440557709 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40025612 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.245837247 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.328333986 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.310536691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.331883687 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28424266 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263724294 seconds)
  done (took 19.064298781 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.617464171 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.221938666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285264328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.560678102 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259947286 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.597370645 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.43196659 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241897662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450599971 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240356537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238487425 seconds)
  done (took 18.29782181 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568791016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225422763 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291170549 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.575994509 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26506334 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556895174 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.441560026 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.249875877 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430202301 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241568478 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238473875 seconds)
  done (took 18.23728022 seconds)
done (took 56.749581452 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268682367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.393046493 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.256645084 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237387439 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.234000163 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.237127653 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.240072275 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.234327784 seconds)
  done (took 11.255247311 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.231892052 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.234806717 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.232514288 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.231476821 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.231557499 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232474101 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.232536347 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233747186 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.233054847 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230069172 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.231388155 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.23271209 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.234907826 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.235740428 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233554439 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.234637954 seconds)
  done (took 20.882769517 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.232659735 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.231450574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22987923 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.23119821 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.230837145 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.230137995 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.232146305 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.232189378 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232191159 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231113604 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232196316 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.233857383 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232709944 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232834481 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232113752 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.233216613 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232458059 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.231922741 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237562148 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230952349 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.231717403 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.23192398 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.232253732 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.231921085 seconds)
  done (took 30.729132827 seconds)
done (took 64.020337127 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.226896566 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.233490543 seconds)
  done (took 5.61584197 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.294516189 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296198901 seconds)
  done (took 3.747911672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.234986271 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23733243 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.236467609 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.237313387 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.237620182 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.238545679 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.238488899 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.239396279 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.235615859 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.236586538 seconds)
  done (took 13.528841967 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234899846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.237318317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234775813 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.236850322 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.2380598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.236131173 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.240703719 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.240721336 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24029281 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.236681382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23966094 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235422448 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.238250496 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.233251422 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237253575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234756429 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.236446106 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.234744394 seconds)
  done (took 23.423247341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.248592769 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.260189601 seconds)
  done (took 3.664554295 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.364354269 seconds)
    (2/7) benchmarking "second"...
    done (took 1.2772801 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345164115 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332114767 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.280143605 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.25681993 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.27739461 seconds)
  done (took 10.289975663 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.236108101 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.43077377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.541000339 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811545864 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241386055 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.24383721 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.125887988 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.244342397 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.249375883 seconds)
  done (took 14.281682589 seconds)
done (took 75.706474618 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.229625178 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.252955606 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.24424314 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.260571411 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575641632 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.255289462 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.237021562 seconds)
done (took 16.213211019 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.221278602 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.222938166 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.241250914 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.236275108 seconds)
  done (took 10.081738675 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243561918 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554085436 seconds)
  done (took 4.955917824 seconds)
done (took 16.196454043 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238998742 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23865527 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.239523631 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.23585955 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240903694 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.236369894 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.238328968 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.239829273 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239252972 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239150908 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.23901763 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.237953285 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239910016 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236466368 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238110999 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240997354 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.238260917 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.237364582 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237911626 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236554133 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2374493 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240343431 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238666544 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.241087389 seconds)
  done (took 30.887113136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.24234247 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.240776916 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241434101 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.241787633 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.238365702 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.242332737 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241347668 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238814211 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.242211239 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.244642187 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240740138 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.242492721 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.243365794 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239502081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243679445 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.240481528 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.242235043 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240614512 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240527878 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238146519 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241227254 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238118091 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23934472 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241863753 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.239753193 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239451146 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244593349 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239415942 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241979654 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.240395098 seconds)
  done (took 38.394825711 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.245992991 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.252958207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.244523331 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.243828411 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.244792878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242982521 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.245532573 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242571882 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.243886066 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245629077 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.243476453 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243887631 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.241985025 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241368348 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.24211225 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.241908621 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.24319193 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.243189063 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243633645 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.242639349 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.242312552 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.244319733 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243998473 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.244184899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.242446972 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24319503 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243627937 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243616819 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.242839495 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.243663343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243694425 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.244263185 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243691386 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.243865273 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244121914 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244281688 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.248186261 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.25158953 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24723955 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245357842 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.243268905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.243940145 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.245151037 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244489039 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245323185 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244650838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.243717506 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.244817564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.2444989 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244800331 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24519691 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244489129 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245070665 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.24581101 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.243858723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244869907 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.244731306 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.244318717 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.244960769 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.244700896 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245095489 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.245238193 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.245505094 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.246144043 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245502196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.244272926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245604537 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.246282425 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.244840552 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.246778078 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246456924 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247290469 seconds)
  done (took 90.776607978 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245867342 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243887725 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243175292 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242650912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242139316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247035313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243666178 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245946109 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242235735 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.246192367 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247854646 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.244921523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24469592 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24784292 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246533471 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244189616 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.246263397 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.245701599 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.24880931 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248459694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247730167 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246134098 seconds)
  done (took 28.569523277 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247503378 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249819542 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.24510578 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250963475 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247789646 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249166418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248621829 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250629614 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249908484 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247595176 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24566662 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248980414 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248101441 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247009976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247243325 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248811357 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251267678 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248909908 seconds)
  done (took 23.642278243 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246999676 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246774814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249661364 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.245882069 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246207739 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.249610664 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246815852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249681201 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251016515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.249624519 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.250057087 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249816486 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24963537 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247557475 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248552183 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248466653 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.248950686 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248725744 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250196945 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249179363 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248732917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250420417 seconds)
  done (took 28.64319308 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250037178 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.250982478 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24925549 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.246987337 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.247227819 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250499982 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250269935 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.246589464 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.252775762 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249240036 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246505461 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.25086096 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.249283498 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.247236763 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.247714602 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248915907 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.250895702 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249098436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251364457 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.248235939 seconds)
  done (took 26.152640371 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251403203 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252160491 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252556611 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25274556 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251686054 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.251849947 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.251848877 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251474924 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.252584854 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.251696291 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251313369 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253740641 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252297146 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.2523306 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.252876238 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253604028 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25363003 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257944743 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254953632 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25445671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256036764 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256248363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258566133 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.257887708 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255941087 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253849432 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.254648183 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.253457787 seconds)
  done (took 36.276062658 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.252713112 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25299073 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250746266 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251310579 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.252727058 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249189804 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.25161002 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.251040033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253045526 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.251592389 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254521911 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252675099 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254480452 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.253364532 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253358873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.253196749 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255012839 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252737881 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252429942 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253229599 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255741262 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255678533 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256075582 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253257617 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252941162 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.255810785 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252356037 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253357516 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255967458 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253034385 seconds)
  done (took 38.770078178 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.29976918 seconds)
    (2/2) benchmarking "in"...
    done (took 1.29997804 seconds)
  done (took 3.773804855 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253355463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256340872 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255168916 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.25379366 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253636891 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.257107623 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255841803 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254400417 seconds)
  done (took 11.21375032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.254748778 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257227654 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.255696725 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.254838907 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256121704 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255771936 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26260789 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276597689 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256578873 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.257458081 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.26401076 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264153548 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.259968094 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256417556 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256020452 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257635999 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.255257408 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254568601 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.255317329 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.256523469 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255898991 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257233517 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258553212 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.25464472 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.257315626 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.267199379 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.263905508 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258247835 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257280058 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.26188955 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.259003949 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254522358 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258375234 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.257984328 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257061488 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.257396262 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265094798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279932144 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.263186179 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259666976 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259578656 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256551661 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259220205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.261285942 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.260653619 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.258857767 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260059177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258003236 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257825323 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262521778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264838404 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259409868 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25795198 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263397548 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.260876402 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266375096 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279040204 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.263713804 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268182121 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.268470634 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.271464919 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.268512937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263314162 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261566095 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269938479 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28363286 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266541836 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.276878701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257489112 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25945387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.266240227 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27169819 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285158425 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.260372984 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260244391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260464519 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260406122 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261959022 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265661601 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282566795 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.260305454 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261966899 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270594703 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283278583 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259730149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261815823 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260121043 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261513094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.261704512 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269572876 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.28119299 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261506075 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.259714597 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.259936665 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.261866487 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262135632 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259741019 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262119901 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.2586688 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262075796 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262685662 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.265839275 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271117672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.261122165 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26249561 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267715961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26136369 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260940569 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26786876 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262757416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262342062 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264512231 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.267548538 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26012292 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264715717 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270159919 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.262129597 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.26373745 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262890974 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263461754 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272834266 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.28746913 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263260584 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262033283 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.266118903 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275670105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262314545 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.264789979 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.263473874 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262171807 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.260277844 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.264770846 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.26431949 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264554598 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26430026 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264769103 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.262158736 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264436481 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264390929 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.264773314 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265216292 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.264158414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264236093 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265883647 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.264095347 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.264735553 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271035716 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.264418433 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264636594 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265872107 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.262661431 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264291045 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265766822 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265074791 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.26433637 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266061779 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265494541 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.265751659 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265849644 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265485988 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267017328 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265556107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270789736 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266345586 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.268864853 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264595068 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.265166793 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.265775484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26609303 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263636059 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.265536872 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.265203226 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27029722 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274530333 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266436031 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267166 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270012014 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268194269 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268219624 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267162839 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270720098 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.274717292 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.267557248 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.272981277 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267555413 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266978659 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.2680966 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268588773 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.267068237 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.268654975 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270440476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.276099921 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279859125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293428506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.268696326 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269868994 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268105137 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271907127 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271964157 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268259348 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269723264 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268096056 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267399585 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269726993 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270926789 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269316853 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.266171805 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268932464 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.270258402 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269050054 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271163569 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.26902192 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269707754 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.266353614 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270145035 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269663481 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.268776511 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266641083 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.269263517 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269000007 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270817233 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.269936525 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.274145607 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267996948 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270572946 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273314875 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.271359685 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268672568 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.271699779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272250089 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270121727 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276487764 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.289302064 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271517833 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27678916 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288761817 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.270748192 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272467132 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272071588 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.268237798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.273995617 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280225452 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271766768 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272235123 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270719041 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271691285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271080373 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.276298419 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269396177 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.270904278 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272428306 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272956885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26924218 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.272920801 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.27335224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272179499 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273160984 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272782414 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273058499 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271955442 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27330039 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273144147 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.272183969 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27578164 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280202186 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276757893 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.271304195 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274253616 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.273225728 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.276320889 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273547785 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273292429 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.272691863 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.285595412 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.299650515 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280183096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275991063 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275278555 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278760053 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.276262419 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277161102 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272729585 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272894214 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272997219 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272379579 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.270270273 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273932738 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275533538 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274161252 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276274206 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27881472 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.276185225 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.274436831 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274535764 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27642256 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275685366 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272880303 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274521279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276492145 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278015399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.274164982 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275483002 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281165524 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294219164 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.275418984 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274268319 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274861634 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275119399 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276097441 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275351489 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278503078 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284020318 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280315037 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284993032 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.277112129 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284320285 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.277175672 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.279311966 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.283594874 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27299517 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.274565432 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273986178 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.276796158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282843954 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293881094 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.277991214 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.28131893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.27857297 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276892154 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275613031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277502223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278431065 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277961779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283182757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.298650862 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280099704 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278691099 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274173278 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276728843 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277246351 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276642026 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279495121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.276893831 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.27715154 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276211278 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276957266 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278450807 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279609419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278876371 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275351234 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277312197 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28328101 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298877138 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283017993 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.2792168 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.283621386 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277544365 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283938783 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298248347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.278601979 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.277283734 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.280079604 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279598724 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.278022094 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.280588808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.277739424 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.28132392 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.284355212 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279218542 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.28179896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.279864515 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.279191831 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.278815655 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290907834 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303583654 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281625602 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284705433 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.276757513 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28077065 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284649076 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279308848 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279145596 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.284134426 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28985871 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.287830561 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.279857807 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281149954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.280733937 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280524959 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282037629 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281894544 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280688429 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281064939 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281133224 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281234735 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284483828 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.28049113 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281408671 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283243105 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281953166 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290347754 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.282462554 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.28064189 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28264891 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282630438 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280435103 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282738118 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.281769192 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281839825 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282488538 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.283322369 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289312697 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289043297 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283801538 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281094662 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281127382 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282161107 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283104366 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28343986 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.2828621 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282410496 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.282659028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282866527 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283173087 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281758382 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.283221538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28344729 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282926282 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285919263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289297359 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.283472792 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281441714 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282736111 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284012385 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282425834 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283067267 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290222712 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288165386 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293800133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.292205584 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.287613568 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.282863964 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287625022 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.292322511 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.283113923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.284565175 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.283529303 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285236838 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284004194 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.287965338 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285493608 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.289779753 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283212195 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285146268 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292567305 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.308234587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285011572 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285930272 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288142173 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.284089021 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283521814 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28609659 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285126813 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292580727 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304828848 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.285429184 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288031082 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285044404 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286988564 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.290836302 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286265247 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.287386456 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.283544315 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.28682763 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.286318183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286971398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282600535 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284669005 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284491829 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290613807 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292024543 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285108885 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287593199 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.286282219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286904882 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285818786 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28741405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285225718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.284723646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286096644 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288126063 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.287154493 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289317415 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.286581742 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287812632 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.289064138 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.288161897 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.291142665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.297573577 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296188155 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284605626 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.287021469 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.287130237 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290255491 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28706418 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.287138591 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288553304 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.289705654 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287677826 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287747614 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.289679686 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.2914009 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304277203 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310737331 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288771087 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.290479185 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.292162885 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287911882 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.285429566 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28905582 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.289926792 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292377238 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296704547 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289842772 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295748605 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.30973305 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.290479683 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.29339845 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292184062 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.297008578 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293201887 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28999642 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291274068 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29476011 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30554543 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.291876532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301875656 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.3196974 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310412736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290975309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291950645 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289345935 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.291308809 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292833877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290233465 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.290705288 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291175327 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.292215733 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291715381 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296566701 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.29193203 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.293035498 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291465042 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.290878164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290907315 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289211957 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.290865003 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290525647 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291469245 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29083726 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.293484786 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.291783621 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.305639915 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.319294546 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292775669 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.291995236 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.289441842 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29592861 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29590264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304465844 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298690755 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292713535 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.291238216 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.293348501 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291150925 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.293279227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.291311853 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292124544 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291902074 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290934776 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305064884 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302107094 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.297194659 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293228674 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293614119 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.293300626 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.29355745 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294691493 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.295101327 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.294339903 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.295031365 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298384305 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.294199823 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.293091521 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.297148913 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30263503 seconds)
  done (took 762.401918335 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291156061 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291630119 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292415033 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290761229 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292186492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291954517 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293111396 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292512883 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292807903 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293043351 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292079016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291580138 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291279141 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293249752 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292455449 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293985784 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292545879 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.293794537 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293326815 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293365042 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293108301 seconds)
  done (took 28.352631285 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295707978 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292851293 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293750445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295117896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293222104 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295392052 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292470616 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296098025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294994434 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29375931 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295646262 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29685173 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294105905 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.293817688 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2941559 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295604675 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295863373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.295384478 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.296308906 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293648467 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298099512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295016101 seconds)
  done (took 29.70013014 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297151816 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.296172538 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296768825 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.295251728 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.297586736 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.29558863 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297473195 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.298150062 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.298247919 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.297380784 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.296169033 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.299006234 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304502248 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.303534979 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.298180919 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.297565381 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298065273 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.29882014 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296772665 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.294261623 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.304462096 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.296133753 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.296084641 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.297853102 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298635769 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.298315234 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.297501267 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.299792482 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.298035616 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302871295 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.296832826 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.298633562 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.30217012 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.297431383 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.299848619 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303676292 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300414759 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.297036449 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.299032532 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309363211 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.320815622 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.300443445 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304352701 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.300715789 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.299371862 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301861184 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306431912 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.298395213 seconds)
  done (took 63.596726747 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300512292 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300907138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.297378704 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301241076 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300871719 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.300145466 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300703837 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300213415 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297743376 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298020018 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.301092407 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.299055551 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297104275 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299819393 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.300931694 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298692947 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29864034 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29805921 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298602429 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299045794 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299300682 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301025508 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301847781 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.299828082 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302638368 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.299820529 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299896819 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301949973 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299363654 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.298908938 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302149756 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302639234 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302206627 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.298124162 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29917202 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301795083 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302183232 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299284122 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301176097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299515463 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301101193 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301508499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.30204197 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303404226 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301649891 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300297992 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300645159 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299326911 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300816574 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.303139123 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303500553 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301657898 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302792135 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300971661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303337439 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.304203736 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302178705 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301630263 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30244128 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.30116542 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.302885424 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304508558 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.302421564 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.305056858 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304629758 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.301089175 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301735964 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303879303 seconds)
  done (took 89.684904676 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304399441 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305087124 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305665515 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.3046457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305627569 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.30384436 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305137982 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.305773004 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304450246 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305394005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305368576 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.304005414 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304901664 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.306922889 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305339632 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305935456 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306944084 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306092418 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.306227134 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305113903 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.305884276 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.305286297 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.305739323 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306504923 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.306608203 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304098592 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.305904715 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.305244136 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30744425 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.305146355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307026715 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.307899726 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307431329 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30667022 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.306633476 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30660212 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306615158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305644889 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.305068546 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.305304811 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.306286866 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306872096 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.305720088 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.306675225 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307202852 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306831096 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.307088655 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.307681935 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307002444 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306357845 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.30796143 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3073267 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.307578424 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30878135 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307650758 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.307788059 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306971824 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30656647 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307711567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307820993 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307435722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.307067998 seconds)
  done (took 82.208816725 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30887922 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308453274 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.30575924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304120591 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308391038 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305414305 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308982314 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.308455361 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309040623 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309571178 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310704809 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.305473507 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308144265 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309945365 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307551777 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308407249 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306372142 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.307256899 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309416454 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306532437 seconds)
  done (took 27.381307959 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306187528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308861466 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306774487 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307707317 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.309600861 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.306857818 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309435365 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310451517 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307942867 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309854247 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310966869 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310355181 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30748323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307905964 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309673449 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307377864 seconds)
  done (took 22.162790526 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308212556 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310880173 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310525509 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.310890793 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.308673281 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307852028 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.311588417 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.307323729 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.310629248 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311035339 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310582623 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311715576 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310341331 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.310748297 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.308739914 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.312998968 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309112725 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309444262 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.310808635 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.31197886 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.309479359 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.308800128 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.312634238 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311460058 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.309347395 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309428966 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.3100929 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.308904813 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309918835 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.31273458 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.309144082 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310942196 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309826868 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310942405 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310927531 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311103109 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.31228151 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.313128764 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.312660339 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.312560409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31474552 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.309712139 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.313413926 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.312986695 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.31138847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.314319496 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.311225387 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.312110066 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311122194 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312757665 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.314637911 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.314559096 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.31306091 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.31713125 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.316819109 seconds)
  done (took 73.347330028 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314791066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315785778 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315367703 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312805231 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.31580757 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311178238 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315721919 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314299777 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311183804 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315730119 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.312792073 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315185884 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313100685 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314923196 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312984466 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314548396 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.31265745 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313538783 seconds)
  done (took 24.881870018 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313642263 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.313347918 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315731443 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.313661055 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.313262164 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313930543 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312751689 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315509253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31566672 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.314284976 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313654054 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315686207 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315539357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.315565601 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.313908167 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31333113 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315671432 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316610433 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313422159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314243217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317279815 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315748404 seconds)
  done (took 30.15260502 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315298773 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.315476072 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.315179762 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.331521504 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335029345 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.314848384 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.315621238 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315543983 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338243841 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.369305127 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.363865591 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335051422 seconds)
  done (took 17.196459568 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315341178 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316996796 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314872861 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318403964 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317136068 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314518616 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314198019 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316682903 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31813441 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315641383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314817231 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317508584 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317710691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316186164 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318226736 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318765707 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317122076 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316672528 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316165745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31908088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315230672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319481185 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315956987 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317171779 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316400196 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317105778 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31839552 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316587176 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316447011 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317664779 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318929511 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317707978 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320842443 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318002321 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320725869 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319141073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316774511 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319499426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319125941 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317748984 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318528353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320242082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319331319 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316135748 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320309091 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316672673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317795553 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318121579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316647219 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321816121 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320458207 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318229785 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320887938 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32093064 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320515298 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321977549 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31959806 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318777198 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321239926 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319403852 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31946963 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322002083 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319219024 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319926425 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320210846 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320099231 seconds)
  done (took 88.235622982 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319505046 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318488587 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31957533 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319492329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319851333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320134779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319787941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319096366 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320228956 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319082044 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322627139 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319810846 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319368 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32073138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320023267 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319806049 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319851532 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320312614 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320929802 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323257071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319749757 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320654518 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320714698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321201384 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321498744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324267925 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320559419 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320238872 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322678725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322298109 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321722175 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321873431 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322109497 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.320614949 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.324150411 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322641156 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321562574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322938788 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321737042 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.325113683 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321421721 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323687816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321427178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.322462809 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.322834462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320851121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.323097494 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320940461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322169934 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321198372 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322590706 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.323246044 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322530271 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321896177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321750627 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.322725429 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322126034 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.322952294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322516459 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325720628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.323376787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322740489 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325064578 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322231335 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323253931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.325312415 seconds)
  done (took 88.46837146 seconds)
done (took 1786.030750284 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.488657727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.446674373 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.324061392 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.340694141 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.323959725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.347668788 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.33584657 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.324174733 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323403273 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.324683666 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324358871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.517640339 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.326494151 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.32427241 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.324172661 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419623407 seconds)
  done (took 27.056950221 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.354520585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.336612563 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.450827086 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.353870999 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.35375872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.52850487 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.391435487 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.334144895 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.51673596 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.382419229 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.328627819 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.354692885 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.335657262 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.321401049 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.356280374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.52571837 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.601066457 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.330596863 seconds)
  done (took 29.397691005 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.82032829 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.334053962 seconds)
  done (took 5.395386115 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.350687863 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.336225454 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.330808125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327607466 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.338524362 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.320704794 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329377024 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.327480388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.338778764 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473878823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.340082343 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.340067732 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350022258 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331019968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.329464413 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367398938 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.518535377 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.335431103 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.327329744 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334850106 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330523127 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.435118026 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.380118137 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.336021833 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.466655918 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.344516605 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336457619 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.337591963 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.467098777 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.336345767 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.333017711 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.331117436 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.33284144 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.261623662 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.881670422 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.332668614 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.357759036 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.340520619 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328484518 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.486505728 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.339022859 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.341553749 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.330143664 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.851488068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.481758625 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.462717847 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.35262931 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.333486433 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.33216058 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.398048998 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.340911559 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334238105 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.377087936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.153644307 seconds)
  done (took 85.486262893 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.33367641 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.326091136 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503470586 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.357250855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325934058 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.333749189 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.33368811 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.644580709 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.338658446 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.327610622 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.689561688 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.917432417 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.359405436 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.372407676 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.168033838 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.377918401 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328184813 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.326919374 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.345489407 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.330009734 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906017705 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334318719 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.328070646 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.579968793 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366205003 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.856700039 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.326907107 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.33509503 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.358944947 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.327680585 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.87020592 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.356099855 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.394421143 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.331006422 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60798266 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.736700328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.693056668 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.328355752 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357340903 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.327603953 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.346332432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.84633516 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.709769752 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.32838619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.346262257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.851818545 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328445489 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.337924009 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.32826022 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.577880244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333114053 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.328600812 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.329529026 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.338301959 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.329251619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.396859906 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.417569384 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.853003722 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.328916531 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328631453 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.363165656 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.331551801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.328563066 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.333029361 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.333714443 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714459803 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.497692575 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337316236 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.711713099 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.863477869 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353725985 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949853622 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.354453103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.356276788 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.340651045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331014452 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.330271208 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850869471 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.359725373 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.330524573 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696814863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.332111664 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.672813359 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.356072729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333482039 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935506232 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.340034904 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.333506625 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.332222814 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.331766564 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330585267 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336632952 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623355374 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.412495829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.330860943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.333681208 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.333552521 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331151471 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.350222415 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.33910559 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936515763 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.358153825 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.333126749 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336476665 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.344511709 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339359716 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.333808073 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.333614308 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.598303828 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.332960554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.340032504 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335550167 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.33202968 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.338155904 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.579085182 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.339131859 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.668668679 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.336411547 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331689849 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.334001642 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.332845611 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.375178715 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.334054713 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.334558263 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.273595941 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.63652745 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.355194175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.335930313 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.333871129 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.332579186 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.344112907 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.33297052 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.355555 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.339852277 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112535432 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.37717198 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.358740516 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.333811047 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.344496553 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334342228 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.344204397 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.336233641 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.628386396 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628235803 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.504419892 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.335311455 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.334265688 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.089496139 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.40935061 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.515418663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35448152 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335134458 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.578668876 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.547823756 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.336859069 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.334578108 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.337212523 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597795639 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.353683932 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.643775976 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.904443603 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.360488326 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.342466754 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.117796855 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.093679508 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.344082722 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.337689944 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.679261294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.360560485 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.336346029 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.334970418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.335477423 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.335496002 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.336990598 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.335587436 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.334968465 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.33649665 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.468910237 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.53176345 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.362727125 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.340188049 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.858990387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.420077949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337444387 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.366380428 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.342285028 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.336884279 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.413498777 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.337430355 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.384450575 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.339505371 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.347607091 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.925123462 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.337551697 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.346401042 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.529359515 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.053065093 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.36114816 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.337554555 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.33827565 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.221661252 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.889959819 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361429882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.675604383 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.345254062 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.378217471 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.343643577 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.424437318 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.884550578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.341782457 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.338327271 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.013358365 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.363865562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.876314358 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.337378074 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.337263677 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950933015 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.367725655 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.33986902 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.350744704 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339918142 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654615327 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.342657922 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.339627369 seconds)
  done (took 499.827646743 seconds)
done (took 648.40177092 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.339661077 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.350069353 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.334781189 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.348917988 seconds)
  done (took 10.633092266 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349876532 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.346071125 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.348948312 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.347702459 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.348308981 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.34731098 seconds)
  done (took 9.348081356 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340340662 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.348358738 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.348888914 seconds)
  done (took 8.298386318 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.577047821 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.375269075 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.71204164 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.369003455 seconds)
  done (took 9.294953261 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.349862963 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.348697329 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.349868719 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.350655049 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.352115586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.354112671 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351788882 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.350446114 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.353790063 seconds)
  done (took 13.419915209 seconds)
done (took 52.2540181 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.345836473 seconds)
    (2/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.343145974 seconds)
    (3/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.472941741 seconds)
    (4/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.780680036 seconds)
    (5/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.378774101 seconds)
    (6/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.763064384 seconds)
    (7/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.415404128 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.392084031 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.615987078 seconds)
    (10/286) benchmarking ("sort", Int8, false)...
    done (took 2.368096398 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.385007168 seconds)
    (12/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.014565228 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.378270926 seconds)
    (14/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.455529835 seconds)
    (15/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.33009199 seconds)
    (16/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.331653278 seconds)
    (17/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338735346 seconds)
    (18/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.445682461 seconds)
    (19/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.333522689 seconds)
    (20/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.361019683 seconds)
    (21/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.345555259 seconds)
    (22/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.492018704 seconds)
    (23/286) benchmarking ("sort", Int64, true)...
    done (took 2.345216357 seconds)
    (24/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.45565073 seconds)
    (25/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.332046364 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.771279276 seconds)
    (27/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.395928462 seconds)
    (28/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.430703004 seconds)
    (29/286) benchmarking ("sort", Float32, true)...
    done (took 2.345270679 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.371284955 seconds)
    (31/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.350524815 seconds)
    (32/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.330340654 seconds)
    (33/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.399409739 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.37239165 seconds)
    (35/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.592919456 seconds)
    (36/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.332837434 seconds)
    (37/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457627133 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.331949343 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.608868124 seconds)
    (40/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.272054587 seconds)
    (41/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.425073426 seconds)
    (42/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.371047827 seconds)
    (43/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.334189047 seconds)
    (44/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.370864187 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.348151639 seconds)
    (46/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.771771973 seconds)
    (47/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.397172917 seconds)
    (48/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.563842448 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402947858 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.711824952 seconds)
    (51/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.350349385 seconds)
    (52/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.411066624 seconds)
    (53/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.371197561 seconds)
    (54/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.027751328 seconds)
    (55/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.282026258 seconds)
    (56/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.362753021 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.353476077 seconds)
    (58/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.355525992 seconds)
    (59/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.445858852 seconds)
    (60/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.347686982 seconds)
    (61/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598319514 seconds)
    (62/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.888921455 seconds)
    (63/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.341629159 seconds)
    (64/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.347133571 seconds)
    (65/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.376055524 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.346034891 seconds)
    (67/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.434797572 seconds)
    (68/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.47327549 seconds)
    (69/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.351764384 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.470792646 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.351098461 seconds)
    (72/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.371211505 seconds)
    (73/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.337245754 seconds)
    (74/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.333347379 seconds)
    (75/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.896695805 seconds)
    (76/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.387452892 seconds)
    (77/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.353425051 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 2.35557171 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.334959544 seconds)
    (80/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.432466802 seconds)
    (81/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.412768453 seconds)
    (82/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.867861374 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.34728106 seconds)
    (84/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.191471512 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.374997658 seconds)
    (86/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.335467389 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.436034663 seconds)
    (88/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.33644797 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.432646783 seconds)
    (90/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.336075051 seconds)
    (91/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.355244293 seconds)
    (92/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.341258736 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.240771771 seconds)
    (94/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.375672244 seconds)
    (95/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.3934809 seconds)
    (96/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.348434639 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.724093722 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.372750152 seconds)
    (99/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.377503173 seconds)
    (100/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.349919906 seconds)
    (101/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.260071176 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.376057899 seconds)
    (103/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.438384003 seconds)
    (104/286) benchmarking ("sort", BigInt, false)...
    done (took 2.348059023 seconds)
    (105/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.364266466 seconds)
    (106/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.374922884 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.362487455 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.344202022 seconds)
    (109/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.347700803 seconds)
    (110/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.336042632 seconds)
    (111/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.616918609 seconds)
    (112/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.379444633 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.571262449 seconds)
    (114/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.480539931 seconds)
    (115/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.350324797 seconds)
    (116/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.344062192 seconds)
    (117/286) benchmarking ("sort", Float32, false)...
    done (took 2.357513139 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.432790724 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.353393022 seconds)
    (120/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.476885558 seconds)
    (121/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.349364662 seconds)
    (122/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.917377078 seconds)
    (123/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.345313933 seconds)
    (124/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.338611076 seconds)
    (125/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.393842959 seconds)
    (126/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.040892958 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.882938221 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.376116467 seconds)
    (129/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.632453278 seconds)
    (130/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.4049242 seconds)
    (131/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.355123315 seconds)
    (132/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.34706125 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.175605136 seconds)
    (134/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.345984574 seconds)
    (135/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.344476314 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.622096721 seconds)
    (137/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.354018361 seconds)
    (138/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.957390093 seconds)
    (139/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.345894437 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.24285483 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.573751515 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.468660397 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.338442381 seconds)
    (144/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.337180692 seconds)
    (145/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.356693062 seconds)
    (146/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.33928736 seconds)
    (147/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344620415 seconds)
    (148/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.757125453 seconds)
    (149/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.379289259 seconds)
    (150/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.340081469 seconds)
    (151/286) benchmarking ("sort", Int8, true)...
    done (took 2.351576055 seconds)
    (152/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34391908 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.188959525 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.379846998 seconds)
    (155/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.3795613 seconds)
    (156/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.339914543 seconds)
    (157/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.458079607 seconds)
    (158/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.369431888 seconds)
    (159/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.478468385 seconds)
    (160/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.114120466 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.368771652 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.350681911 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.378597607 seconds)
    (164/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.386995474 seconds)
    (165/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.374027447 seconds)
    (166/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.845181334 seconds)
    (167/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.339959142 seconds)
    (168/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.379809036 seconds)
    (169/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.357967412 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.339919288 seconds)
    (171/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.603420022 seconds)
    (172/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.365533823 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.451765429 seconds)
    (174/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.370750837 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.487615538 seconds)
    (176/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.35657991 seconds)
    (177/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.350129852 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.354685353 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.359828724 seconds)
    (180/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.292035817 seconds)
    (181/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.760012589 seconds)
    (182/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.552553605 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.371040175 seconds)
    (184/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.480461093 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.342431362 seconds)
    (186/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.379042259 seconds)
    (187/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.391259678 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.294013327 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.871038161 seconds)
    (190/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.488637213 seconds)
    (191/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.343685947 seconds)
    (192/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.065514812 seconds)
    (193/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.388314105 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.442561957 seconds)
    (195/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.352228925 seconds)
    (196/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.399051795 seconds)
    (197/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.346112095 seconds)
    (198/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.440519749 seconds)
    (199/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.370731088 seconds)
    (200/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.48204301 seconds)
    (201/286) benchmarking ("sort", Float64, true)...
    done (took 2.358639599 seconds)
    (202/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.356937637 seconds)
    (203/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.366755358 seconds)
    (204/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.343982598 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.262805146 seconds)
    (206/286) benchmarking ("sort", Bool, true)...
    done (took 2.361754707 seconds)
    (207/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414934121 seconds)
    (208/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.344867791 seconds)
    (209/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.356278801 seconds)
    (210/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.366630013 seconds)
    (211/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.342546285 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.479293345 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.781155555 seconds)
    (214/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.484328993 seconds)
    (215/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.417934233 seconds)
    (216/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.358975904 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.391737594 seconds)
    (218/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.356832595 seconds)
    (219/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561255849 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.184972134 seconds)
    (221/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.368370933 seconds)
    (222/286) benchmarking ("sort", BigInt, true)...
    done (took 2.358706933 seconds)
    (223/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.344376816 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.367055377 seconds)
    (225/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.354578368 seconds)
    (226/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.389842182 seconds)
    (227/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.367603814 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.291690531 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.399364749 seconds)
    (230/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.238295232 seconds)
    (231/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.372381632 seconds)
    (232/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.347651619 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.393912917 seconds)
    (234/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.35430589 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.356450639 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.353788809 seconds)
    (237/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.373066673 seconds)
    (238/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.798064859 seconds)
    (239/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.564771755 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.374039799 seconds)
    (241/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.276561053 seconds)
    (242/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.272144754 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.051982155 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586222228 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.010046442 seconds)
    (246/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.385748647 seconds)
    (247/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.23680638 seconds)
    (248/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35883785 seconds)
    (249/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.345222802 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.385522605 seconds)
    (251/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.434459176 seconds)
    (252/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.387913153 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.740956258 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.315310008 seconds)
    (255/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.345617526 seconds)
    (256/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.775611039 seconds)
    (257/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.370196249 seconds)
    (258/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.346919881 seconds)
    (259/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37512396 seconds)
    (260/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.369056098 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.351719604 seconds)
    (262/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.140513542 seconds)
    (263/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.289275262 seconds)
    (264/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.350533589 seconds)
    (265/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.350623389 seconds)
    (266/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.390074146 seconds)
    (267/286) benchmarking ("sort", Float64, false)...
    done (took 2.361574784 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.443835164 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.03530827 seconds)
    (270/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.348055345 seconds)
    (271/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.46447243 seconds)
    (272/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.189329315 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.477566918 seconds)
    (274/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.386945888 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.360780083 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.377431704 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.413078639 seconds)
    (278/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.348443742 seconds)
    (279/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.426011096 seconds)
    (280/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.349274935 seconds)
    (281/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.37130919 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.385993322 seconds)
    (283/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.194818342 seconds)
    (284/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.351282495 seconds)
    (285/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.568999491 seconds)
    (286/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.758272055 seconds)
  done (took 576.130062215 seconds)
done (took 577.390609915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.395708906 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390747603 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.372953683 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.394926176 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485772448 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.548468888 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385345156 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37917163 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.420680029 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423603899 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371012287 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.54723486 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.378064477 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372070442 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.373367445 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392067007 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.36709239 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.38901512 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.392552625 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.386087288 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.391303858 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.37171143 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.422920672 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.549345647 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379585957 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376650782 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.37683767 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.392825595 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.486244633 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.378003505 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378388953 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385634724 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.380259009 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.380828164 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.372646641 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.394536222 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.38470792 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.384898089 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380001469 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.408628205 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.373806699 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.373037703 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.377407305 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.376162229 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.380414106 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.382953017 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.376528217 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.383322437 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388772655 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387974624 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.369043846 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.390208497 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.378285304 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.377977571 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.391750969 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.378186055 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.381021345 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.395499932 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.395283576 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393906522 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.380468017 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.384425628 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.383222298 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.393805845 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.383892125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368960636 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.373017674 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.386431768 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.377801667 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381967514 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.369921278 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383785018 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.381036237 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.390363357 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.409391116 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.364746795 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.400754905 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.377471723 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.387567097 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.374807226 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386569298 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390255318 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382308863 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.37853482 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391521077 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.552919431 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.389465033 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377723812 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387970316 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.397175899 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.384071578 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.38839616 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.381651512 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.374784406 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.389192462 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.383479347 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.379896432 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.381589822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.384065827 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.39314439 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.379387953 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397773896 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.377493019 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.37649015 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.379994442 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.391736328 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.38008308 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.378270583 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.401004767 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.427172761 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.380615069 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.367500368 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.400821854 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397327287 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.390155169 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.384362892 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.376644591 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.368770137 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.393719525 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.395445674 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382310479 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.378068886 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398389824 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.383039359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.37805589 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.376506113 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.382523211 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39521765 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.501515002 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393000144 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.411751966 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.37921461 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.38476272 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.414753463 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39993501 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.412792225 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.386126595 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.398512881 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.396224236 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.379899944 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.391521056 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.391860454 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.383157936 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390289992 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.376293015 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.414266746 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395231006 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396806317 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.403673017 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.503106075 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.380404322 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.369250867 seconds)
done (took 229.081485174 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.442236089 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.37853867 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.462446949 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.378388918 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.481603821 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488104395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.376547523 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.377065584 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.376045747 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.755895633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.378017199 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.378313573 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.379219006 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.37824696 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462200704 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379351545 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.377400983 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.718760018 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.380799782 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451457506 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.377402808 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.378402042 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.381876566 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.762089667 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.379518047 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.375275756 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.44921996 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.381280624 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.731355003 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.374951424 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.377933966 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.730422056 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.470041194 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.399002504 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.391601803 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.38942473 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.483389665 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.409514118 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461509478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.461936642 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46571344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.419201995 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.375994726 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.380435468 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.383603639 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.381437199 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.37912597 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.408998758 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380369485 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.380329939 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.719734444 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.392740629 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.388730577 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.383378208 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.383722399 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.405504018 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.379771483 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382530807 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.471366549 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.384598969 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44607867 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.764879159 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.759581573 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.3823355 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.380798138 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37980695 seconds)
  done (took 107.617507688 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.447065425 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.457077344 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.504007177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.392657563 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.435346516 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.507014727 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.393472512 seconds)
  done (took 11.427535982 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.388361091 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.383557321 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.432517556 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432141109 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.383217678 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.59328009 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384195091 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.39550333 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.382523672 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.461917919 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.3862529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385490867 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390297012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.381524435 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.432106212 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.396426766 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498832186 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384085726 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384917145 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.534404828 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.38185952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.392162467 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.460630961 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.397659153 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.387332067 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.392479664 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.304394442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.38608096 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383059906 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.384814027 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383705262 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.484911125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387380953 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.384380249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382975809 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.545109035 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.386179325 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382911346 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.387013747 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.38650121 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.386310954 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.386393769 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38602421 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.383489057 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.385895414 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.409545709 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.387591732 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.386914307 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386179506 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386836247 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.461192075 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387983321 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384249067 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383652166 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.463308648 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394769165 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.38719604 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.386722372 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388982783 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383474509 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538738473 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.435531018 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.387561406 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.436052057 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.387625422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.387759922 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.387099006 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.387980232 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48001024 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.388033047 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.436120037 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.385985149 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.608987357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.412568786 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391402561 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.391179357 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390688882 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387785792 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.385405284 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.394429002 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.384557871 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389054331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.39502751 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.385510285 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386738454 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.572848495 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.545648458 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.38664358 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.401925858 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.395305851 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.386386561 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.464607715 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.389785945 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.386656556 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440590009 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.503913697 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.466293035 seconds)
  done (took 143.276889559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394225993 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396541357 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.392223437 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.412054915 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.390918831 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.390358038 seconds)
  done (took 9.673567652 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.392499987 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.392047395 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.390995565 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389598036 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.389663382 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.391137951 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.389373664 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391745568 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.394877735 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.389600902 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391584127 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.393198479 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.393386445 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.390348643 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.391164428 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391523539 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.390354448 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.389067428 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.390859381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391236606 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.389924694 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.39214976 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392232499 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.394875325 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.397810391 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.393315221 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.40001703 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.391065724 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.392869128 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.399416032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393321493 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.393807874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.393702756 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.398964001 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.394791967 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.394444249 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397686526 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394732567 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389451295 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.392370009 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.395121224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392767134 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392494684 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394796655 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.393779373 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.399707709 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.399925809 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.402174179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.394675506 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.395095838 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.39558387 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.392934419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.393332076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.395075477 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.397266141 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418501382 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.39949285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.394605963 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.395722674 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.396630709 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.397262276 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.394811719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397871866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.400920302 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.392609181 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.397547713 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.396124229 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399218495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.398348422 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.395936193 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39901701 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39260082 seconds)
  done (took 102.714627657 seconds)
done (took 375.998018797 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.403002008 seconds)
  done (took 3.705985178 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.506707354 seconds)
  done (took 3.81057176 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.037625348 seconds)
  done (took 24.345764584 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.495202619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.416195157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.403453863 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.398003444 seconds)
  done (took 11.015861762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.703426094 seconds)
  done (took 4.007237568 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.388232062 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.388885987 seconds)
  done (took 6.082786646 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.745289199 seconds)
  done (took 4.04913715 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.895781347 seconds)
  done (took 4.204866474 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.412367989 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.405773364 seconds)
  done (took 6.131577374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.394388026 seconds)
  done (took 3.698583835 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 17.695849888 seconds)
  done (took 19.002118031 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.391507009 seconds)
  done (took 3.699698493 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.413279937 seconds)
  done (took 3.717993213 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.276991682 seconds)
  done (took 6.581307169 seconds)
done (took 105.356760092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.389297059 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.399328673 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.399902306 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.399020703 seconds)
  done (took 10.891973513 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.430434641 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.430659763 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.432616798 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.441294104 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43493139 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.431100429 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.422130105 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.437264204 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442489187 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.434269776 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432467148 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432907616 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431980846 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.423865683 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43299326 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.433797742 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.442916768 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.450522612 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.425179598 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.435302146 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.399547043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.442902332 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.435182066 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39930607 seconds)
  done (took 35.662592171 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916202402 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.472185618 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.55232588 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.45186138 seconds)
  done (took 7.697841708 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.450954483 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.452614548 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.467073525 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.506483634 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.5284863 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461156765 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.428761911 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.425092869 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40812639 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.45236787 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.532833626 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.469899762 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.540801663 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.402740134 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582725439 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.401553152 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399439576 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.451707719 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.504824197 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527148263 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401380471 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.452109582 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.456063946 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.469406972 seconds)
  done (took 36.481706998 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.40064375 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.418397154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.400882648 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.398408912 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.407846055 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.400784515 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.400016891 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.40106973 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.400356102 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.405893252 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.399323641 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413833668 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.399692859 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400458113 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.405868417 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.400797091 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405817217 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.399373078 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.400057325 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40644018 seconds)
  done (took 29.374976702 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.394494824 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.395132404 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.735836168 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.673991581 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.393671479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.393821012 seconds)
  done (took 14.295127118 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.482082564 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.63553133 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.401994358 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817470819 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.907773389 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.4138093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403381204 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.671315076 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.046497497 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.034859338 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.477020707 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482812832 seconds)
  done (took 21.085180628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.396130541 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.406406202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.405307939 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.421348397 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.464916748 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.413016887 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.410171083 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.397301243 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.476848658 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.480544895 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416743754 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.467188832 seconds)
  done (took 22.467589775 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483455644 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396110728 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413974226 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483781366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405205363 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608196471 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462195034 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.208312095 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.430047056 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670407676 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399802186 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495602426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.654692476 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412580607 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406970181 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381873886 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.63371556 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936949864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398771002 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405582216 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432260114 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396677439 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43195444 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653765422 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61989824 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396573801 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.658842346 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397815932 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719079939 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.421455598 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408763614 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398297986 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671337062 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122067117 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523211028 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.643704159 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407160792 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.419460763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.409786974 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.413073504 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409342301 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408444256 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409972006 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399542215 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399381659 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410923791 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224005034 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.435268622 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.397732431 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400455178 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702498802 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505279099 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.404706335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39988816 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405812208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410500911 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.404441781 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500174895 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982355173 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415976984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423232778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.409646567 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400139192 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41120444 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087992935 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406267305 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.404204979 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40617974 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402366326 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409253562 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428488974 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39968594 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.426236987 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402142413 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216734491 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415471856 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411420348 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000357143 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418940937 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.412411038 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630180719 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399859539 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400578969 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.400320495 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402540413 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18208425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411169901 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.387029525 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424761694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209895287 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679672666 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430841205 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426385486 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626548652 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.389249285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401697195 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.408848016 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41411352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424910024 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.213771216 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432295584 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.406856482 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662199906 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.617380963 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419801699 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.400820942 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.971788286 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43479377 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.448097647 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408762048 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659537145 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.070987755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430215477 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422010051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433227167 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404102328 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222101602 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405475101 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.420533089 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413042367 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701286376 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.270918648 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406904578 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471666095 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410388749 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406128392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416194128 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415424535 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.404890737 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.643661174 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449912044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.42638825 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.407105768 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403193624 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.415047065 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430095038 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.415988376 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.630342425 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405636739 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712103408 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406563723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406288364 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406074033 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.63051728 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.404058485 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.419814296 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668258507 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424072658 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426458296 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426905121 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425285591 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506292341 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42880983 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.408358815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.67473892 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.412427647 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.411615154 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419883937 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419632991 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41520566 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.413885987 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411486559 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063325446 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390321903 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.41491844 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301624288 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.423392317 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47529227 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413820682 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654801044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.415945157 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454725926 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.41471766 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.42118368 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64293612 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418575477 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.415531085 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498248412 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.959575924 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088964959 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422235108 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.408687314 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.4064145 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.406748018 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407417525 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409587524 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407698841 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655533907 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433660112 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412849102 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.082768772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411099481 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420133895 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.425836468 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.422827523 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416385344 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410866874 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.406873511 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437306372 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442527002 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.431996091 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554293251 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.423168058 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410222166 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926968528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415866661 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411632798 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410451663 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445874626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427120055 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399136819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679625094 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43303576 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.708544963 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.437797441 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.437484593 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.409781098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423045343 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421808959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.43255835 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430822316 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.42343277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411204621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424379757 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97848682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223986929 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009527016 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412393149 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.422327182 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42261047 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.232482159 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440656375 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410769192 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670506069 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235029511 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442493084 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969451504 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.439319931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276866027 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718653463 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653310932 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41188953 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.435410145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730017694 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637909418 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448518 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414692172 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423354727 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.39947939 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060494981 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.452848808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504537173 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22995286 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458364316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426161172 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.459085057 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.433559304 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893822533 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444942326 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413289515 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415224498 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.44022113 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389720257 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431539929 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413626859 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098562162 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.433673082 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.980647884 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444455216 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.66335654 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436379574 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.418050531 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.425535414 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.42266724 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.680350814 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.712796863 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426451645 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.428341527 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023608967 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.287346454 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.423739539 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4147848 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234112564 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427654513 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.749560261 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.440976013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.424484082 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433241075 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.417141082 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417072299 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.413758143 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422654226 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385904244 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96065497 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.430074702 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427235963 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442066161 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275535296 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.677196485 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.431509918 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071080254 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644432727 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417905815 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449949248 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.421767274 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417201667 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.415656639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418697995 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.656819371 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438524549 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654905185 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.43826882 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.41242655 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49843122 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639295683 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416873839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.435796932 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706841625 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.424856046 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.427657676 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237136685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444003331 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437483625 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429296845 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420116237 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44830562 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489320797 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668766929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.438978205 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.429565017 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892055319 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451327902 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448333779 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.433579193 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514037313 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419173106 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.430923405 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.203245637 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076472349 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234256767 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082752714 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726299163 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430863597 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423127074 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419161572 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570478064 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419588872 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694596203 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420694588 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.436129384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445196711 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419164754 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433566406 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64348376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695485021 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422501503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430460226 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429734085 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.420063699 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430757951 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.632815322 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970186822 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030086402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422697588 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420366839 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269422364 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727541149 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421908332 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421831338 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422230878 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.434125995 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.466864905 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.437227565 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420973874 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580181899 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720570654 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182490897 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.46275133 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.449653391 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.196360023 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421786186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.689154001 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420270078 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685810586 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092854114 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231175724 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698123554 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49469472 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675921233 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.430137952 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57083138 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.430823813 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.432598579 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423197015 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.273540328 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.420824109 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.434165299 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084526571 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688259389 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.427333341 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.431624431 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457859778 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.433379965 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647861802 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221606348 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650395839 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.434746574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43199566 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42373275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085554037 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.732733005 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434970807 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.428835246 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701653391 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.669915241 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450188044 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.878031479 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.422245689 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036850368 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.401165097 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44723122 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431750594 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.241665742 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094891684 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433317486 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985253351 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427616141 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425428091 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71054755 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.431358807 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.43175945 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.712451514 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.429580734 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425030523 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705880172 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.092089158 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.301756432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.445345278 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456438383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.440361637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426252545 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44076091 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437934755 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437383641 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.921271102 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457521893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428237068 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439766232 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.439137809 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442606088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.433577208 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427536763 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.432922137 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.423523232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.423069614 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445474996 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536627701 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088641156 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462063654 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.103046116 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.758130199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685455726 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4277672 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.442896409 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.433237249 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428272117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427881481 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429035853 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.447931222 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040247128 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.431359706 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.468109665 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432465952 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.64686398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641865612 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429167064 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694246085 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438285419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476267707 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.415485397 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429692947 seconds)
  done (took 998.3310918 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433088422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.47489693 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.479598475 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.483935258 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449369368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499351446 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.525287189 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.475087983 seconds)
  done (took 21.161304429 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.440894124 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.447874096 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.433266504 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.450458756 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.446665067 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.968852245 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.469792276 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.440982875 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.440705064 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.431237389 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.441465795 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.150739808 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.450155286 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.442891078 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.439605757 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.449736759 seconds)
  done (took 33.694149184 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.771616558 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.692423131 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.003655055 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.506112182 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.481218598 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.430312953 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.819081275 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.450364544 seconds)
  done (took 28.497565834 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.442297808 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.444149985 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.445017008 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.44305345 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.443128685 seconds)
  done (took 8.560623348 seconds)
done (took 1269.507016639 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.436717814 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.437947437 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.436659816 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.438240607 seconds)
  done (took 7.094634724 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.418303038 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.429376971 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.428153532 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.445075766 seconds)
  done (took 10.065429656 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.251188649 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.194640345 seconds)
  done (took 5.78870839 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.435138944 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.196645794 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.172566862 seconds)
  done (took 8.151095816 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.748603644 seconds)
  done (took 3.095017582 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.842688258 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.802840438 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.63375984 seconds)
  done (took 6.627307258 seconds)
done (took 42.164424489 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.443993232 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.690794757 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.59028273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.4380545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.596734396 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.591804259 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.203309656 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.434969554 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.453065697 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.446390793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.439286318 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.59659521 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.188938884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.694074402 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.189645803 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.690761249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.598256945 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434555346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.434055511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.442036329 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.204249354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.442001724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.445781959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.447747959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.600135777 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.581159158 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.441022784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.693265392 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.4394242 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.446070915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.581644124 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447043206 seconds)
  done (took 84.714122556 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.442621292 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43623302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.436812889 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.458745003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441358762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.439121876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.466416161 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.437460575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.437765794 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.452936534 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.43739021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.443590096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.436753824 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.465201275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.438451568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.468846267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.442050371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.448636007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.438909553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437104304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.471365523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.438354895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.457348785 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438887974 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.456799191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.437493129 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.472067081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.443293991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.45426463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.438299383 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.459367904 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.457659672 seconds)
  done (took 79.680158368 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.438271591 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.467304202 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.440135958 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447591806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.439551587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.458820196 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.441997133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.442993952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438951121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.439101683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.437937584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.43799026 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.462215419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.438991865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.460532889 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.446215008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.441118964 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438668715 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.451317966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.439676726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.440527146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.448016236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.440687474 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.469188248 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.449113419 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.442147542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.465479379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.443441838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.440546445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.444700928 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.44120456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.464960725 seconds)
  done (took 79.650868861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.638550231 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.449393677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.448293967 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.384558711 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.449933069 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.447766552 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.441336416 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639206586 seconds)
  done (took 15.251310889 seconds)
done (took 260.64207788 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.440429344 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.43944089 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.663854732 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.468249261 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.439444758 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468106908 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.468265761 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662317401 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.439254772 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.666006984 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.441888863 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486065966 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.451625249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.466770368 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.739978602 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.580432535 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424398099 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.441341976 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.817305491 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.471411516 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.74499185 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.451191704 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.672141735 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.452191244 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.462879004 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.441807609 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.442219335 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.424181639 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.469479773 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.843414488 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.460804138 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.435576825 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.550125934 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.520307534 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.582988358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.585720772 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.461939023 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.529837184 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.668746663 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.452677456 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.443226583 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.272099493 seconds)
  done (took 86.197898218 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.448854362 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.560815473 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.450707307 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.450363963 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.449830389 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.553805512 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.533677934 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.449892602 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.450038483 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.450550827 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.449470696 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.449141803 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.450550262 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.451425639 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.451032716 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.45035463 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.45114917 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.451914012 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.452223868 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.487415746 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.560797679 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.454954997 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.445187205 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.45347785 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.537307092 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.556943447 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.451088321 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.446677456 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.486617289 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.451883958 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.455223752 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.491240179 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.451812805 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.453224856 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.559412637 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.535592547 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.456211573 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.450771881 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.56002215 seconds)
  done (took 58.956463943 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.454157414 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.716246234 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.933942425 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.470754227 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.455491667 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.457135779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542818166 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.454971093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.458120733 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.457214263 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.632298263 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457049915 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489084158 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.96029894 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.467900917 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.454493422 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.454915849 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.45401326 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.729807819 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.475128817 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.56676852 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.466133719 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.544677777 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.474625922 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.480494368 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.456265583 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.459956418 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.063965378 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.469620459 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637923979 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.383229978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.551874025 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.006541393 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.947401706 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.383421765 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.468539672 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.455642112 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.642810354 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.469224061 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456187348 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.5466676 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.469171648 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.936554872 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.188727231 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.487081163 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.45620017 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.087369762 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.650395633 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.751213903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47749263 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971563633 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.47037573 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.459268739 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.458665433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.739000217 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.471986952 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.458163048 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.108349817 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.492672217 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.549534602 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.467680499 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.458041613 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.743475482 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.470435347 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.733291192 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.470405455 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.466238843 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.48079557 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.941075869 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.471566621 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.185947099 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.488955427 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45789846 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.64143237 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.738218801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.127222057 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.466714693 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.745698679 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.019801539 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.546613337 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.471797426 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.051486364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.557428327 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.471877737 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.461246538 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.460446845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459370456 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50609853 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545209216 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.13416502 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.183072945 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.129212055 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.5727196 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.483385636 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.460447161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.102241534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.481499712 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.460808205 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.924614532 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.190384714 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.49151432 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.468376532 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.19520766 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.494430272 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.553160747 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.476678894 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.944917159 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.472306731 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.507127596 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.460877965 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.468478204 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.488205056 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.550387535 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.467964564 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463242426 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.166568889 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.679158021 seconds)
  done (took 193.531769756 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.455687496 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.454387199 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.472360097 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.454580341 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.454145723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.463219873 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.453839132 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.45621486 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.461683994 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.456116294 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.459172251 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.456773363 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.458210135 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.4581471 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.469553432 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.463740937 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.4582347 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.457967278 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.475494244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.455831615 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.456405613 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.486935849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.471570936 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.456665735 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.458113214 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.45885337 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.462435534 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.479078369 seconds)
  done (took 66.292003712 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.464392188 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.098256851 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.464763322 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.614104836 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.489386956 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461535942 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613630793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.538054484 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.475403906 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.462145422 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.461813291 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.805224933 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.466932481 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070711342 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.697387552 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.62218869 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.076942779 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.494358173 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.462031782 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46288264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.614642111 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.478353823 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.807344653 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103564956 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467259418 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.103103872 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.456900679 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.465655163 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464269583 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.105544601 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465004102 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.809371032 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.552767341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.534635219 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.114623257 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062378988 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077224077 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.63512891 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.466020248 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.462843976 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.464243161 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.455758911 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.102871171 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.466259875 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.467847946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.102056737 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.486813276 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.467254075 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.471652915 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.464767708 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.534996055 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544666509 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.822261972 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.111393311 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.553810065 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.481448313 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.614722684 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.852840046 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.477777439 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.050361763 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.455809869 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.110305199 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.489421357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.456378996 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.501619816 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.471078884 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.637082287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616162992 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.051415696 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.489241223 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051458465 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.656666809 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.468233555 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.468466843 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.470205896 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.111005965 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.052712959 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.658172941 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.620952904 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694067138 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.472006943 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.469775159 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.459305888 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.557325007 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.470164438 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.112181594 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.073416977 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.48949503 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.469831928 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.469224832 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.468782577 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.67335657 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.124708559 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.555130243 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049082985 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.834863449 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.817379834 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.470828792 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537961754 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.497155952 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.818515925 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472611139 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.537021744 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.934282585 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.825511643 seconds)
  done (took 176.10326879 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.755855809 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.511213292 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.578280653 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.642234193 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.116640104 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.092939765 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.464204488 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620754691 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.602912295 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.752160569 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.472254718 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.560637556 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.704457747 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.555745381 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.249027441 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.557120914 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.570863095 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642401664 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.622364433 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.469389717 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.161774186 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.786298447 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.684328259 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.487921211 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.584591653 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.308182881 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.092388416 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.072092987 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.663104987 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.47597501 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.029574142 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.486879649 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.481030839 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.199239554 seconds)
  done (took 68.428143814 seconds)
done (took 650.861786021 seconds)
SAVING RESULT...
DONE!
