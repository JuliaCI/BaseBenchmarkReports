cset: moving following pidspec: 6425
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.593034434 seconds)
loading group "shootout"... done (took 1.187797419 seconds)
loading group "string"... done (took 0.402712982 seconds)
loading group "linalg"... done (took 7.554650026 seconds)
loading group "parallel"... done (took 0.149317458 seconds)
loading group "find"... done (took 1.33224342 seconds)
loading group "tuple"... done (took 1.862565093 seconds)
loading group "union"... done (took 12.040777618 seconds)
loading group "dates"... done (took 1.269655092 seconds)
loading group "micro"... done (took 0.19149349 seconds)
loading group "simd"... done (took 4.133708462 seconds)
loading group "io"... done (took 0.984330661 seconds)
loading group "random"... done (took 8.242900718 seconds)
loading group "problem"... done (took 1.62106354 seconds)
loading group "array"... done (took 18.502333316 seconds)
loading group "misc"... done (took 1.442509941 seconds)
loading group "scalar"... done (took 37.528119467 seconds)
loading group "sort"... done (took 2.982739588 seconds)
loading group "sparse"... done (took 11.23062015 seconds)
loading group "collection"... done (took 15.924984073 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.506235452 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126998123 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.133850198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.122334077 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149387179 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120329775 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12778222 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086998462 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.894823688 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143080692 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114721198 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439947916 seconds)
done (took 5.445869576 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161197107 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085299058 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078488806 seconds)
  done (took 1.426272867 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063136131 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131322284 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065048922 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065209995 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064959411 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064780918 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063958146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064455274 seconds)
  done (took 1.783852262 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069270014 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065858264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063119711 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065390253 seconds)
  done (took 1.52993749 seconds)
done (took 6.248987057 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.234450495 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.100596294 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.284479314 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.388632458 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.44937715 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.08835243 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071662391 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066927345 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.125100968 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324730924 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102985271 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.181178855 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088900038 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170942485 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.968487485 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116604895 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083167792 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121308216 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090783489 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128538898 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.40951666 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.07540379 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071804371 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067319518 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06420772 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640983125 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.665678703 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12738183 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080383189 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097347709 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.113381279 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.646758832 seconds)
  done (took 10.544871771 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089665798 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08989345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06593111 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121929208 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090734155 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066698011 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071430101 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063884351 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088956106 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.12193103 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087769035 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.097230153 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063191058 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065449722 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073033624 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19563767 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076855402 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077113661 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.065089702 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076889425 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104048004 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075712823 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075915843 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075625495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12563152 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167554394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095226971 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094802632 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063727358 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077053126 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111613534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124356493 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063387293 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062499225 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117754746 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091926058 seconds)
  done (took 4.590017776 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.93138926 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087228163 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104338557 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.606970036 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062114895 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148656198 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236285059 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068928646 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.358085505 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139706397 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.136582277 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140442385 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.111292784 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06635024 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.209161149 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112603862 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.374808937 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065088221 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061868864 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063488945 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062437801 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065735702 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064719761 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060744628 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06710805 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089422251 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.08447955 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.169065953 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.923601907 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.245005829 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064433247 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158950573 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082078271 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.355873916 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066837271 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08004957 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.391004097 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118828947 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0626684 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16324614 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113428156 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06736352 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114289115 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075220934 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066328089 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065471317 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06465142 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071098077 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074679856 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.09821574 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064818818 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061680419 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159118599 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062055839 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063282548 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064015471 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147005287 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061580462 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138786478 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06085407 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064922873 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095337568 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06505115 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087115965 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099240933 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.354213772 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.026592704 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06324086 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060635505 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.091960587 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074513072 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062990063 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067808345 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063417753 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064772056 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06383691 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.071337712 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066587877 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065176947 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10536816 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063778654 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06640285 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063628525 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068453288 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094144663 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065251933 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464574333 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094384272 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063516502 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073708776 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10182055 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064000951 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069321678 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063942014 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063621633 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062747375 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063511562 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066379238 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.202688797 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065693974 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109813464 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.033529984 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06367929 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082268926 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063076967 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067982234 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066673948 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06609613 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063450006 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066499326 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064598817 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062002338 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060504195 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110080762 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063994595 seconds)
  done (took 21.38085286 seconds)
done (took 38.714082342 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248817251 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079113424 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079258512 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079670431 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079582045 seconds)
  done (took 1.924467691 seconds)
done (took 3.277979621 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.104454619 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060795638 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097133964 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096301092 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063537055 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060436849 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094321229 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060800273 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094063684 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095933853 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098517175 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097293791 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060641174 seconds)
  done (took 2.439378567 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065351078 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077469736 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.078945575 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058982819 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068867621 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077544213 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058925175 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076810414 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083424515 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077837069 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077325331 seconds)
  done (took 2.148246873 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.064864888 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077360866 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083265612 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059047374 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070294099 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078344262 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.0590614 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077636593 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081321198 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077789005 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077676695 seconds)
  done (took 2.142612441 seconds)
done (took 8.070200448 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.063824001 seconds)
  done (took 1.384760111 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526335508 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.59415332 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06519686 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084564324 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182655608 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097427955 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.229170288 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.072229457 seconds)
  done (took 8.349830264 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09202885 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066385442 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06636994 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070614116 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06522796 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065835201 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.065591 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066049309 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065231494 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065698332 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065619151 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.066019209 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065476849 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066183968 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.06661924 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.066083828 seconds)
  done (took 2.50026128 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093110608 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091970192 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07004417 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07132526 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06904044 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068503609 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070794047 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070000954 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066985136 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068429331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072182176 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070129341 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069254756 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060515201 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070409582 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072215049 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067115183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070593713 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071495314 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072420549 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071121866 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060425817 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069461093 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070350321 seconds)
  done (took 3.15109268 seconds)
done (took 16.725055736 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108866619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073018091 seconds)
  done (took 1.50925572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066082943 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067071437 seconds)
  done (took 1.476416619 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073486432 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05833463 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081309235 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070638768 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059828516 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058957633 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07937511 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059708556 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059056668 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059446638 seconds)
  done (took 2.002902052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060425433 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069266136 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066536025 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068460492 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066280919 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060361291 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063663128 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060723846 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.068857213 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059252291 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064650474 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079650402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064086358 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081137607 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063970356 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064848627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066601283 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063929836 seconds)
  done (took 2.542787605 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.057870086 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.058440109 seconds)
  done (took 1.47223618 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.061823384 seconds)
    (2/7) benchmarking "second"...
    done (took 0.058917104 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063391231 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063072732 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059823898 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058937968 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059780822 seconds)
  done (took 1.771765855 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408159437 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116767869 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.33696178 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066443521 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076597709 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243529471 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060435268 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065447848 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065593989 seconds)
  done (took 2.829110262 seconds)
done (took 14.962558343 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075658202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080759746 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086965395 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.418657936 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089583346 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064205351 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109159152 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177013489 seconds)
done (took 2.474562392 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209637263 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.338955345 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.918992711 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.064019342 seconds)
  done (took 3.677439064 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317871143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081926975 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075156761 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064218887 seconds)
  done (took 1.905685798 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.0606847 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06849285 seconds)
  done (took 1.491030058 seconds)
done (took 8.655006309 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060525663 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061188733 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061072399 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060699549 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060869594 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061482455 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060220969 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060462211 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.060383762 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.060417902 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060351825 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061038198 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060983472 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085929504 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060331227 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060515123 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060743371 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.061123266 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.060310958 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060751065 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060298823 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060950516 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060732105 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060250368 seconds)
  done (took 2.869566074 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076377455 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062080773 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064844554 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064222393 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065021139 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064581397 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064390713 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062785284 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064839924 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063315943 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064747372 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065014453 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062609534 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065082044 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063231898 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065035488 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064695145 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063076221 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062958841 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065051161 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064790172 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062996425 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.064863262 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064482502 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064694745 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065263808 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062717366 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062853306 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064786754 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065038164 seconds)
  done (took 3.31155766 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061082666 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057308371 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058441455 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066369785 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.05753741 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.05856907 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058178778 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057254957 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057879136 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059161583 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058319368 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057699168 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058756292 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057309399 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057360879 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058154377 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061423099 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074829847 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057746767 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057122556 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061202938 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057266745 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057378121 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057298304 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058050554 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057572396 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057188148 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057875545 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057561528 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058126763 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057224565 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061061316 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06180709 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057659884 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066767385 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06208967 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057750966 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061447919 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058879249 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057369001 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057521292 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05712467 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057435688 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057561078 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066162283 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.05770567 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058832327 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05816065 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057760809 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057016088 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057493241 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059775795 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062397002 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059071885 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057359559 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058949223 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057270359 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058318357 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057574041 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057164306 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057014813 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060473632 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059016246 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058097949 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074490866 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059002555 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06601919 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057244429 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061294294 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060526238 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057958638 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072930124 seconds)
  done (took 5.659382711 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082624407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083653631 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062258575 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062280404 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058546309 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058261703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066368756 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058093548 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062218804 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077474085 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058634049 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062272559 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06227586 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062218246 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058510893 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062402774 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067278717 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058438874 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058598584 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062052621 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058185428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065817356 seconds)
  done (took 2.795256573 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134547626 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062916169 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.100758271 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075238127 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066763514 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074755485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063631889 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063750786 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063510284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064524298 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064189534 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063705804 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066592643 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064026879 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064425241 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06425886 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064035794 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064221479 seconds)
  done (took 2.666195899 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073532134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062972044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085096717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063214835 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063657452 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062946024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067759232 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068393715 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062857136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063255887 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068378827 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063162771 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062609058 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063066265 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062816549 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06359092 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062759436 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063437403 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068136194 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067520966 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067578855 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068309322 seconds)
  done (took 2.835862639 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071365803 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06194665 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075891886 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064096383 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058679572 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05839742 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.06359285 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062521478 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063215176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06190031 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062292524 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058051385 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064614904 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062586891 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06429251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06269641 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062065893 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062335687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062221704 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058102867 seconds)
  done (took 2.642753261 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082395088 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061145219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061170813 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079408952 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060557133 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061260789 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079080442 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061093615 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061300705 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082413852 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061095869 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06093308 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080021354 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079438293 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06127936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079296189 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079304681 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079674146 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061149951 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061407319 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081851893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061046904 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079190645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06109686 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061308737 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061444082 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061442076 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088798348 seconds)
  done (took 3.333280527 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059707166 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060725192 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06069433 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060604462 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061053032 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060658906 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060573845 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061834447 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060714119 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060997584 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060451981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060992084 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060423137 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060317258 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060682662 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060708198 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060153573 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061023056 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060762086 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061074345 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060298151 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060368819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060208479 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06070079 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061103329 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060351161 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060750741 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060638579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060492613 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060701774 seconds)
  done (took 3.2079295 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070608684 seconds)
    (2/2) benchmarking "in"...
    done (took 0.068900922 seconds)
  done (took 1.526199802 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.058954508 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072677097 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.057358266 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067853018 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066690403 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061104919 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067792426 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066721528 seconds)
  done (took 1.901656131 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064251058 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086423653 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060204876 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060550992 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064095651 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115607123 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073695771 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069016208 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074323547 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060584965 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060067451 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071144717 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059200569 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070029822 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06155564 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06692014 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064759187 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069558821 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070068762 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057932187 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069478767 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060865151 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.05809434 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060669815 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059471897 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064610831 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07310203 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069541617 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06621963 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057098085 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076457331 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058403452 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059459265 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066594982 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063574411 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058245512 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092706657 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058835048 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064612646 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058365173 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069303794 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076828749 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070580603 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074692524 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060406415 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060593725 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057812024 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060384505 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061128712 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066253001 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058096766 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064616289 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057590266 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059949994 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067559286 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058718122 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064797182 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066174549 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069370144 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067081843 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065800655 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071416759 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065609573 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067876606 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059693022 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075657505 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060230228 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069043049 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070842666 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059463173 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071316564 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057783059 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057226866 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057769504 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088646685 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060070201 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059332796 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.05804413 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05812212 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060208097 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066501571 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064826505 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064030711 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062634477 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072773711 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066294963 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058175015 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066588145 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074674246 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060707605 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058084189 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073307117 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060456726 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057975038 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.074869915 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066147994 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060681547 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058849077 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060605522 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070968746 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059753142 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056696897 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064747211 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059990022 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061600445 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063773504 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064399127 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057850926 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066509694 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064103954 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059937355 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057121497 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061444664 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059590087 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056998197 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066726024 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.05837999 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072233897 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063241387 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070623036 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07060814 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067442324 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072437932 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058224247 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056739593 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07465457 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200058947 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059955229 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074660086 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058330837 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067849038 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058085613 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060405572 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066750866 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058095245 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060579997 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058907014 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064942702 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060327214 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060959798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061919787 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067883329 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070340936 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060274959 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065615058 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058979913 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072657382 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066706561 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06249256 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063414897 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059426932 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069373089 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06393848 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066905929 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05836687 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059360701 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058397336 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067990149 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066421012 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060172911 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067395114 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0618999 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059250952 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059024154 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059506955 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061061713 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062457153 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059190877 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06452213 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066478227 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071477684 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069862218 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065823899 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057095386 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058050995 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060495439 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057901156 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061418391 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066398157 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071399479 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.06868118 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076441169 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.05864324 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065970415 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059995976 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073137319 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069567632 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059317756 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064107739 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057203101 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060436348 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066036302 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068522391 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071213816 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071092456 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061926548 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06197165 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057771012 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070947277 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058779715 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064990359 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066155378 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063579097 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058072904 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060366931 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066135526 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061623561 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058184613 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071642238 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065541345 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058167466 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070372768 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058565791 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067801584 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057852248 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061340035 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061792068 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060319895 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065753546 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071751852 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057260949 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058836859 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072206947 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.06039037 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060289926 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064663705 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071272161 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061601466 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064800455 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06742309 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066491486 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061643285 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066270674 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059400718 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066178495 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061818816 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068450178 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057928582 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074295552 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056863094 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071267956 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058679306 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068231576 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058745045 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066306723 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059210455 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073354183 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060098911 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059019769 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069048007 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056798843 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066296171 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057541494 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061534483 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063257598 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065987375 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060054715 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204151336 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060656588 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.065466572 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061875139 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065666681 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.066463701 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061997058 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058380661 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06516678 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068305404 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065858351 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060151544 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060525525 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058825966 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066697931 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060490785 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060221878 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065336711 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061941136 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063249862 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060278204 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061281839 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060762874 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066015757 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067458899 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075094057 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06555569 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064980244 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066616711 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058068718 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072986936 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058358861 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064453236 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05707305 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.066096825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066746822 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.05835907 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075633673 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060367635 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068600042 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070185031 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065077896 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060457933 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074744365 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062365072 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06514002 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065014719 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062205958 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.063169619 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060091641 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064635663 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.06607369 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.067751733 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059366031 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064078384 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065376914 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060314578 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067886222 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060406912 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.064598076 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060287092 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057083161 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061858958 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.068328786 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.061927922 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062348889 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.058712432 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056954283 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.058863997 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.06668619 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.061856292 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065361057 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071383943 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057079831 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059362198 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057942045 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063239074 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074544358 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06657904 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06425761 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061932628 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057567051 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060497773 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.060503874 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.058819588 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.062622908 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057616454 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05828646 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067572286 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060038352 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.061638263 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058476443 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05951564 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066126143 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064298944 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058873643 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.063594116 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.058089486 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062030435 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05728999 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059973498 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.061609588 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057332514 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060697333 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.06697354 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07291384 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063406301 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065255542 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.059291308 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064769551 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071628259 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067105908 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059514525 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066685252 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057432951 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074709894 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066093292 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065065886 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066843075 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059729643 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073421072 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061679317 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06691702 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072031378 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059211501 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066438752 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057729761 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071669921 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.061442813 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057677593 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065025078 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064091188 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.203548323 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070129297 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059731498 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066151432 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064916256 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.061693283 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060901252 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060692671 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.065693819 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072642122 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059256685 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.064082021 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065449271 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065762559 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062447308 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069784068 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065928432 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060214089 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060771901 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061360812 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05936355 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069330515 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0595033 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062697728 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062321834 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058317797 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064581396 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073230087 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066939994 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06720078 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.05843756 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058066253 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.074479629 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060959295 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062998664 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065313907 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066798728 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.06934007 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066568766 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073559764 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059274972 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063377727 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069523424 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.05954524 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058174701 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.060764424 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060184688 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06591069 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067159743 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064312069 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060251184 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064072703 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069689717 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059857961 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062001757 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064439338 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.059111858 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067147157 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06524793 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06519606 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060358538 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058330957 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062593582 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065585118 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063993649 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066236873 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059197848 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066528362 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071192582 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064369236 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062348836 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058023756 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062257173 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065945065 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063780145 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058099748 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062047203 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06062029 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067041445 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066201574 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.061779407 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058055337 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073833904 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065345011 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066248081 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060769536 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060562136 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059068705 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058252283 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068924114 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058143622 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.06046698 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062539535 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.060395259 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074311951 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065454906 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072568691 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059575914 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.061956238 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057826322 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066733607 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.061854398 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.05821157 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066910861 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057689876 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071887657 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069075039 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067849187 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058042548 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062121939 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065539756 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071513296 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066998985 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065708165 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062430877 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066710218 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060241881 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067946342 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057968949 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057191707 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067081224 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065095636 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069321701 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.057949096 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066973378 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060198429 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064727237 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065112133 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.060092131 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059975067 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060433432 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.206134181 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062517729 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066838754 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062233097 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073720084 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059406315 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069337847 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066520505 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068280483 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069597653 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070436269 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06599496 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059189211 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064596562 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06584234 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060080562 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062510698 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062887382 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079502867 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06134473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061013747 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072625536 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066248171 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.05931711 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066916741 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062148253 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.067516164 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06007514 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067275252 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063359025 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059977204 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06284037 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061815377 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057780913 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058272839 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.058631158 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066854221 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0620148 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058909533 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076054991 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060362805 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065654912 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06886068 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06367528 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060224995 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057417916 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059973136 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068911431 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071387525 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06090969 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065061252 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060220348 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066414984 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057074579 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065772152 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064765803 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065475575 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057999995 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058765061 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071041956 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072015737 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061848622 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066907988 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066070183 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060528705 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078983805 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065683342 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.05963351 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067904614 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060965708 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057586231 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057495441 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060460138 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070922284 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058067993 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061743618 seconds)
  done (took 40.133469882 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095997779 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058906271 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.058590423 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058484142 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070456084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059495986 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058367726 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059423117 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059621736 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061299518 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058731337 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.05840905 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07049798 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073433336 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069338864 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063428823 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058328815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.05933378 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058258083 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059286724 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069620332 seconds)
  done (took 2.818790905 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065511574 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073910403 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071056071 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075963439 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067220643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063375761 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070560567 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063378907 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071528762 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06931852 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071896309 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06361171 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068712813 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068449961 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068595627 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063843115 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071851954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066929743 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06350965 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070723754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063916329 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070835381 seconds)
  done (took 2.958471533 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058746175 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05904142 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065696838 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.05792068 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.05746813 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062343845 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058054694 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060901931 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060981854 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061151168 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06498216 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058536294 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.057567864 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062155257 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057763633 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.058742867 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102110386 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059055212 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059168554 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058033788 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064363975 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066081521 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057810361 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058479043 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061022533 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.061379525 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057802745 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060993449 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.0585938 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061298072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058798524 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057816524 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065143575 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064431636 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060904823 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060917651 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059953822 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.058740504 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058251719 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.057631302 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064856698 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059360736 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058148382 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.05913287 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.065709979 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.057826016 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057811091 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065318323 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057603709 seconds)
  done (took 4.454399019 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.069656835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106873307 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063888726 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08713677 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072767758 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065915931 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.063590307 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088383305 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059539617 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060441615 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073769365 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073880422 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061655865 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063204492 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065544387 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062026309 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06249988 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060414296 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.064931275 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061223046 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065077707 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065427801 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072860857 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072892637 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062993848 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060945523 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061217489 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063189974 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07267569 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065679187 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063364892 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064043964 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073457709 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063989904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061312192 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061245295 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074096209 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061784452 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061494958 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059420954 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.060923854 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063057437 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065399808 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073744963 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061895186 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065809067 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061522273 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.05910781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073331199 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061114793 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066302206 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074139252 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.062859467 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06183096 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06339925 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073015593 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062299725 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060085902 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061719451 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072713879 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059506895 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062812516 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073965238 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061468532 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065491306 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073591928 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066092103 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062607575 seconds)
  done (took 6.122747071 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067441889 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088955277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070698618 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070938213 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069654923 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.069571591 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069452088 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069644171 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069270395 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070197122 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069794019 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108911706 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065211355 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074976464 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069509563 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069171721 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069218218 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069560212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069580449 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069349198 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069653939 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069931521 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069370764 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070301314 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072408464 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064663338 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069003403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069412179 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070384805 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069402674 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072548687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069719671 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069471355 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07020928 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07269141 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069573083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059438878 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069100308 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070071189 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0696357 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064649231 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069892916 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069144154 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065276771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069177733 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069011796 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070347067 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072577555 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07831268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069952298 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.069383811 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070382662 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069402233 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069441771 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07020081 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078356954 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070271343 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070265918 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069450189 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070049476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070094463 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07813212 seconds)
  done (took 5.886307528 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073949715 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066112784 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078732122 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060913396 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058294894 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068800333 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.05813117 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.05818758 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06666215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066773457 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069064895 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068649534 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071112893 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068723731 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068212196 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070626385 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068001499 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068181169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066661087 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068686649 seconds)
  done (took 2.832435597 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069516591 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076610607 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064567645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068175995 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06418999 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068176265 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062821072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063924662 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06417742 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064129927 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069846464 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069759389 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06446753 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068284114 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069710826 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068040547 seconds)
  done (took 2.553770421 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.063524304 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066996227 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066828474 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06039599 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.062836246 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.05876855 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059477079 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05782137 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058583479 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072220667 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059573118 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070322667 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.059523069 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058076063 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058881863 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065098758 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058658907 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059792877 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059421125 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065638775 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066006215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.060702564 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062884487 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059894986 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064485619 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066899813 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061493706 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062650296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059299496 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060197019 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065087545 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066140161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059401482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060062079 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058311949 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059508166 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059486164 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.059989215 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065148402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059339215 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058491619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064123137 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.059417667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060376875 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058510886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060303419 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.058272152 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064544619 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059649345 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06476777 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0593826 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061423532 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060142828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067261717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063238941 seconds)
  done (took 4.877573722 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072249919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063496757 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058315652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058271308 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.062826945 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.063838209 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063358904 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063424461 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063752635 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058027345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064124044 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062731348 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063862127 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063540463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063755033 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063453281 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057904104 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0630376 seconds)
  done (took 2.622326966 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06776278 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062966216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067964712 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063004154 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06290926 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062440709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058523107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058484741 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058408765 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062470146 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06251343 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06287129 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058448214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062273409 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063048641 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062692536 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062263777 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058381184 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062767706 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058234341 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062305376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058229316 seconds)
  done (took 2.843332058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.083115143 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080420001 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.119215074 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.075502788 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083987843 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068115152 seconds)
  done (took 1.995816485 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085914716 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100797781 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062842372 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.062951871 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073821955 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06702885 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066801574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066731252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074158479 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071804698 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067057172 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074049223 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073766688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069104396 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074047558 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077058133 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066948378 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067252227 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062824592 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07699773 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06675044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074434573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067246551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066748795 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084916291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068949257 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077124514 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071714782 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069166691 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073940073 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077062834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066666532 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074172705 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071910029 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063161681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074245696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066728116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076734048 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073905421 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06901958 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063027918 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073934421 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074029134 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069029431 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077357418 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06692747 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068940559 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067619745 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06711626 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079711025 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073868149 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069033457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073883597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077243328 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077326396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079540277 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071836353 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069263173 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074290114 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072013885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069239599 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074405744 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069478642 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072234953 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077663354 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068945473 seconds)
  done (took 6.245900987 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093154274 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062815037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067135715 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072308904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069251669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067045437 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067695342 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067066073 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067040458 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.063974394 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101522213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067418272 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069594133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069108803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067505792 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067106956 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067323258 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069465449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063821368 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079771717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066891929 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069191624 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069401473 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068993444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071689311 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077238929 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067197336 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066788023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0670221 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066813312 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069299702 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067273933 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069003925 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063358508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068877687 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066979994 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066809098 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068939448 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066990849 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074216571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068759581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080671484 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066958163 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066734974 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071675871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06701893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066940406 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063367438 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066658495 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063057518 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071921241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071748743 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071859394 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069265391 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067121585 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067176928 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067081314 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067259211 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066901908 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077233883 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069062155 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067012738 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079520938 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067108891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06681777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069442541 seconds)
  done (took 6.104529557 seconds)
done (took 126.56423377 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204504041 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180376168 seconds)
  done (took 1.85869397 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069367851 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093679627 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071923763 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130072107 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066290833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10210926 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099274209 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070034621 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066341283 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067099762 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06704419 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069915199 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133111778 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065772286 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06556559 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069762084 seconds)
  done (took 2.800634931 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098836568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178315022 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104908838 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064903818 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100998365 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075010487 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06505058 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076378864 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069128397 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068240846 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073211633 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071075471 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068059264 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07160084 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068839842 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072774693 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068143932 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07316423 seconds)
  done (took 2.965945865 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.088937718 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081032429 seconds)
  done (took 1.6693189 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148771275 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100077827 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.13879801 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.312922297 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.134622721 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.274221148 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127653441 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125146659 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.110597533 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119939444 seconds)
  done (took 3.084904232 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096456416 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163500755 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296933671 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115706441 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071800749 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.083953518 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117396264 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07773356 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077137696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077221914 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076456519 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075848451 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094243312 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072993115 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072696103 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073139145 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097553694 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071660537 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071772425 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072706371 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09670856 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066205977 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073072006 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071655333 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074245813 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074512557 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066897178 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065686905 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072476718 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071842959 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075132102 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080790684 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074699568 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100801542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0701286 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.101517831 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071070569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070183516 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071530113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071190912 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074054492 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.073745602 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074231209 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073059943 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06691826 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07109157 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066755721 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065645103 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075856027 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067059886 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076221411 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.07521824 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100461572 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067211338 seconds)
  done (took 6.026181581 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104464095 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101484621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066932629 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110887306 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101676223 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066591186 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101857749 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095906038 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104324291 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066039295 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06520536 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065425035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074699172 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080118357 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117958705 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103472367 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068167699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066132945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104483224 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104893979 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065072802 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097508582 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093593715 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104171974 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06385378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066289033 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064637645 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065034763 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07199632 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073223363 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065121781 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074376406 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082880182 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074001304 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064179514 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064389802 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064576162 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073770246 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074045531 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074560115 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072755844 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063904174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064342916 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064997292 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065688066 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063825102 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072739707 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074077162 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072836088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064656629 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065146769 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064786321 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065511276 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073644087 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.0722362 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075431112 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074547503 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064643616 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064554357 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.066720313 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075396575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074359532 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074488542 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066244935 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074614414 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064647801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076491584 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079979642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06452302 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065003619 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064670846 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06449314 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064764296 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072416621 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072502394 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065530055 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064776366 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06430983 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074851781 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072961557 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064513203 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072379686 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063914675 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064466845 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065162767 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064915968 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.071926184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074038427 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065676368 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064859251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064985763 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064784496 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066459638 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07249234 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073888336 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073857001 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072707691 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065541601 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073514208 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073441429 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064992682 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072967636 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06480866 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064964101 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064815998 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072960839 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072412473 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074527507 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06473045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064045702 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072711202 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208243786 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064682128 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073382442 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075969895 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074263453 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.064799502 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079092282 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066161637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07531035 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063772173 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074063838 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063675048 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.071720922 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064937072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064733796 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065395602 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073182471 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065828535 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065090717 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065302038 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065210183 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073339307 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07670735 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066416446 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073900196 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073868202 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06645499 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.072970242 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065306305 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074301667 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065402061 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065531478 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064558062 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076208683 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065230413 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064939573 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064948807 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076203678 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064254449 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075331927 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073075139 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064503993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080000032 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075207386 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073022225 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07541928 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066326803 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065211518 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064385822 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064661741 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072568258 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074075679 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065853875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064644551 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072340453 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075616197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.0645248 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072390753 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.072613012 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072982884 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065037068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064800036 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076282847 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075626026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.072987112 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.072952299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074087506 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065059489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072533894 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073143435 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06483537 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080706354 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065599587 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.076974649 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07354799 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072457639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07369001 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.074983576 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075648231 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076142982 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078756706 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064608635 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064670465 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.072879709 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064571418 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064728551 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072792397 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065357749 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065446916 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078426936 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06329472 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072952314 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.062691757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.072053559 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.062757403 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065511083 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078330802 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065899656 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065231116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072814817 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06505768 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072426723 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076296406 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070917399 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063051812 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063564133 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071732514 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.071998685 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063437523 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064628776 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065380214 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07245057 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071686051 seconds)
  done (took 17.703749382 seconds)
done (took 37.62515881 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.200621313 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15337128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18487746 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110986077 seconds)
  done (took 2.243282454 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094590179 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093831291 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077406335 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061801873 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.083203914 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061943348 seconds)
  done (took 2.014399136 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275459254 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194148562 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173395227 seconds)
  done (took 2.177291523 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210652686 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191872535 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.450514767 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284528024 seconds)
  done (took 2.765919264 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130367669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079486044 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06121323 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071844136 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.11178455 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14457928 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089191102 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.114304201 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072587554 seconds)
  done (took 2.468825846 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132800405 seconds)
done (took 13.365362845 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098046784 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071823369 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069088374 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06475201 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.221023769 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071421112 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22705204 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072938088 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21522059 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151688711 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131938288 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.082235323 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124731458 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099268393 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071268749 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.418814177 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077718373 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.237256664 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081572617 seconds)
    (20/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071473896 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.138218285 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115539155 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07046605 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071367035 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.167471847 seconds)
    (26/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.11731017 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068769766 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062057479 seconds)
    (29/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.159234307 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073428889 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086477782 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074011909 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.084888952 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.061426994 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118906271 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071372595 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 0.171994625 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092702745 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068330898 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203339353 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070897512 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.060841045 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071250348 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.173548321 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.191304985 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.133620714 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070242619 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193773621 seconds)
    (49/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.169249877 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.145798914 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074625882 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08191348 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067981261 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067362992 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.063026044 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073815802 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.21501253 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072513875 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.234540923 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061761093 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061460275 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070908434 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06297391 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070554946 seconds)
    (65/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.170885806 seconds)
    (66/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.178457465 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061206505 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061886483 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077069458 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.158921799 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071293651 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.134641073 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197686375 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061673919 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150682459 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063170956 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072906791 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134461409 seconds)
    (79/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069428299 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062584833 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221953069 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087237041 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 0.12825731 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.062714032 seconds)
    (85/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079879552 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116557134 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.225749911 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193129509 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072468559 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085463829 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062722241 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133352883 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.062294156 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086868672 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.158942648 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088267329 seconds)
    (97/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.213084236 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062298994 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.063400042 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.06919208 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.078458339 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062379512 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071370146 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.23757542 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137732914 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.065167564 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069251102 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062010662 seconds)
    (109/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.069251013 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071302346 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06142838 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061804572 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06372133 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192313942 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113931927 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137712559 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.062193732 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.06377614 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201950511 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160664952 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116453512 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077089202 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.204582611 seconds)
    (124/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071490084 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073296762 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070906125 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142306838 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077855385 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061110697 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062601293 seconds)
    (131/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.063428952 seconds)
    (132/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.072483426 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061674437 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 0.12949528 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061431401 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.072402506 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.156485777 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.154204731 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072471753 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06134811 seconds)
    (141/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.07076305 seconds)
    (142/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063222219 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122510183 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.163277123 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072831913 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089917273 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06612609 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.199516918 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070265208 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.167138012 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072792574 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.201091709 seconds)
    (153/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.183080185 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062769061 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071006668 seconds)
    (156/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.062451411 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089910419 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070692496 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061549496 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06175481 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072474102 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.151078625 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088621048 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116142914 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061115329 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.133082397 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.1324072 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.081251919 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.15724421 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.061211904 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.073133207 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065726486 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062839708 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061162013 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.083302497 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.163269174 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087966371 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.134447847 seconds)
    (179/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077210923 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091130985 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139839752 seconds)
    (182/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061585726 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.133694937 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.061272138 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068978656 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078828997 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063412498 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06243228 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.0902004 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091493969 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.068413124 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.062688253 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.214904148 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.185000355 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063818028 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.083630504 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069303134 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063466942 seconds)
    (199/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.137222697 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065385517 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135949535 seconds)
    (202/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063547121 seconds)
    (203/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067045634 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063521515 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06279286 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.065468373 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06232787 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070460138 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.061950899 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064262517 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.166094047 seconds)
    (212/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063531524 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127208235 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061891185 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.06402456 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07436212 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07330008 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069046048 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.065678048 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063166813 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063529507 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062676139 seconds)
    (223/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.062086756 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073625022 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074771459 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070453838 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164072136 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136724316 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063970881 seconds)
    (230/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.071114271 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086965942 seconds)
    (232/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.062013431 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062392587 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.062383284 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.062696505 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.109712871 seconds)
    (237/309) benchmarking ("sort", BigInt, false)...
    done (took 0.239159727 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06352296 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070463014 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062462415 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061937203 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.061833692 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065102848 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.0620595 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.064246555 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063196869 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.063201458 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069317408 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.0647039 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063210559 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.168867842 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060976555 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084479713 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114794861 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061386408 seconds)
    (256/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062872995 seconds)
    (257/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070524315 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.063336256 seconds)
    (259/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.066767429 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.074277655 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062105332 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.064174917 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061144602 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.061637027 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06136885 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.151584004 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063416019 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062801703 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.061551929 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061137434 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086999557 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.068422394 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068353095 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.140371885 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.063084981 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063040526 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.155443592 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063529116 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061183263 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06195905 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091097369 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062953618 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.061181888 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.077238378 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062970786 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062246032 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.073591358 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.061885474 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060795414 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072613769 seconds)
    (291/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062160257 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.122489143 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063028745 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073983803 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132299137 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114219058 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061017562 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068541844 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.126124403 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.082663021 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104314074 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061072701 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128744743 seconds)
    (304/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.063304646 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062067316 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065452501 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061506694 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.061965942 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.074278243 seconds)
  done (took 31.712156367 seconds)
done (took 33.266501603 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083862151 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087772962 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07146091 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083836405 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07859974 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095127789 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.070936923 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075930182 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078862754 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077023948 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076430717 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.069559527 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072151831 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07223485 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.069824853 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08596758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076927422 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.070684924 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070969606 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.0622416 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07084286 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062444221 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062263082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06975377 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.073472417 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069769625 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071884523 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071623299 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062546085 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06260784 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067162982 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072587327 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064329192 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075306985 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071160104 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070605995 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072172858 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074819105 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.0622433 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06304808 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072432267 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062725554 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071028979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069214369 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06750371 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06896456 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070800939 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07476995 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086007933 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066704872 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072506297 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073173815 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074358767 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.067692948 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.067589674 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070563521 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068418686 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085303226 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07102785 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066333391 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071672348 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071495164 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068547488 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.070562758 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070455418 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072933861 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075423494 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068547629 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072348077 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.06940892 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061718263 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070697014 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066647879 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062418965 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073457423 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074646763 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061218859 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066810792 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070103119 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070632834 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062391768 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066613968 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06128768 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066977966 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066159001 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068624972 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067312329 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.069782339 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06187294 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.070885449 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.06848118 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.068058014 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.060044786 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073707383 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.060441871 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066680406 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061202562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.060909674 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.061524092 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067205034 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062127484 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06637781 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070962722 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061504964 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066714328 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075732481 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062082407 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069702029 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061552603 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061626316 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073313568 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072679031 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062349672 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06635252 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06191506 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.067499112 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061741576 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062254799 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061800704 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061989941 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.066486526 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062294225 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066438775 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.067727303 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075332719 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062084868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067194429 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066385046 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062297037 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068555011 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062504444 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06204767 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062037276 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076061607 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066677177 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062502249 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067663667 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066206663 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070318246 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061154408 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071199356 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068546695 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207858945 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068136173 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061072261 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073543623 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066617075 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066969662 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.061944268 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062570315 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061857969 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06192165 seconds)
done (took 12.286995552 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.061620836 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089889145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069969782 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080163848 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075430241 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063246142 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.0678485 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081524126 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065995226 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082347331 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.083791853 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083039878 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090746352 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062619979 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062763797 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064028499 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062033974 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069732762 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078661713 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083585018 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.09119844 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062849837 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.071843573 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.07783162 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073306313 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.079088793 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063483301 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063604874 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065204226 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.080723845 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085806932 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06279265 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063471235 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077917469 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.076725448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.069696436 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063182055 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067367452 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063202093 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062367661 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064318384 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.077694325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.066850267 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.06964198 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.063924257 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063591783 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063526636 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067097907 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076453361 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067029627 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.070691487 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075163761 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065207308 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062874424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061489161 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067941686 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062571737 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063714128 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063052382 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.062576867 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062709748 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064365013 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063421434 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063410093 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066482767 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066304141 seconds)
  done (took 6.214076301 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079201931 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089959897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079303574 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080061529 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062480601 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063248297 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062901691 seconds)
  done (took 2.158412958 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.061753904 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076282227 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079815966 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080133693 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072735631 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081394655 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063108913 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092447975 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062404557 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075577414 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109268881 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081139917 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066606787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074642969 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.062941421 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071468305 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063021437 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071180777 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072498149 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079739347 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067521274 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090064558 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.075928864 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063617081 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084399017 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068594429 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.06264956 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06350132 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064206391 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064516579 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064321566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102124844 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068295795 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074672364 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064334037 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063418233 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069726869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066442285 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067314507 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07180953 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069324357 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064674526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062263675 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064708235 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066014476 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067506185 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062369829 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064591158 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064657088 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075273793 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062407098 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068363747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066936197 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068522692 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068816271 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068326857 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071326472 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064840689 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075235515 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071407734 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064087504 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072506598 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.072282568 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069197048 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07224041 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067513615 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.067980956 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069218546 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064190643 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065443924 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064552237 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072106456 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063087329 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065345138 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066702576 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064871531 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067321011 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080147817 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.079931816 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075586548 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064644789 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.064314433 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067605292 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079780024 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068055891 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064752198 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066859115 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062102325 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.06756589 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065019883 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068970132 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064852442 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071817718 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065542881 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066845547 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072664338 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062923619 seconds)
  done (took 8.414906317 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.064077616 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064637376 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066454475 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06466563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064312287 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064575714 seconds)
  done (took 2.063298529 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.085286866 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.062744245 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077106161 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064799828 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098920304 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072065038 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072467683 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07373517 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.07683543 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075069857 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.070176682 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.07301164 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069677335 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.064571359 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069672103 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063558532 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.070107271 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066925919 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076091837 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06647205 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077828084 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066002961 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066698068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07589011 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067336504 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065031603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064323157 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075511074 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075613441 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075640342 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066190784 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067121146 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071592672 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.073109042 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071912179 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070596311 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.063166621 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.069314194 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066149072 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067037743 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07407454 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066136046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06665787 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070096495 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073325712 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071196937 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070022975 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067870134 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071565846 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069946219 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069699563 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065074617 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067074876 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069972189 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071615957 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072663082 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070179874 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071665545 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065698488 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071627682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064178627 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067560159 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072952096 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.066924629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068428508 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.070099748 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071750141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.065772639 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06629813 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064312641 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069837071 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064505528 seconds)
  done (took 6.692937348 seconds)
done (took 27.170656573 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.979375183 seconds)
  done (took 2.596614787 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558146234 seconds)
  done (took 2.215643526 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.663384381 seconds)
  done (took 8.312790269 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.285383743 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.32921413 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.701969606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130987443 seconds)
  done (took 3.126313599 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695808297 seconds)
  done (took 2.362951122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.226116844 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216378353 seconds)
  done (took 2.10533644 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.340865582 seconds)
  done (took 1.994491421 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098870409 seconds)
  done (took 2.752389146 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.227252884 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15726727 seconds)
  done (took 2.045463259 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44367453 seconds)
  done (took 2.095634603 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.43566023 seconds)
  done (took 6.093702944 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230458889 seconds)
  done (took 1.928505673 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.227558826 seconds)
  done (took 1.889264896 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.731364029 seconds)
  done (took 3.38640484 seconds)
done (took 44.573827477 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077192813 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079836574 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080056537 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076722037 seconds)
  done (took 1.943744318 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069500312 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066040179 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070503519 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071058056 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068897832 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069680422 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.069958881 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.066635894 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068701298 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067183439 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066133605 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067006235 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.06978466 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.066800292 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069818978 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071188597 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067101301 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066656818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.069567201 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066483205 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069978894 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066819901 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.06470069 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066317462 seconds)
  done (took 3.288365722 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073374649 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069787515 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071980596 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068649672 seconds)
  done (took 1.950296073 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072221263 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084006657 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.085201414 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090495233 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073464175 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073986587 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.081872723 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082961625 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062340882 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.085794466 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.064779359 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063469918 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063546285 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084013544 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081471841 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060018926 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.061761308 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073852365 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073106179 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.075713317 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06473993 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062270446 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072971564 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073548937 seconds)
  done (took 3.433299406 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07510957 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06120092 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07592784 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089289855 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09121736 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062550627 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078334711 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090773805 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137876686 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062305737 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068253874 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062391276 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.103602627 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062580912 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079515932 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108101087 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112340651 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06576447 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095670907 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062649676 seconds)
  done (took 3.312904764 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071900731 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066026906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066728923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.062082333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.073682586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070355722 seconds)
  done (took 2.087006341 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.063368492 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064638115 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.063972801 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063691265 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068631578 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06440982 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062807765 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.064195557 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064421173 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064447358 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063726457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062863896 seconds)
  done (took 2.440039766 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.156747619 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06408617 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06660245 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063870798 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069162169 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063467274 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.07823217 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.065732762 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082255355 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063754919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06368362 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065998844 seconds)
  done (took 2.573299543 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097220922 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12617294 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095176446 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070537515 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169233683 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093209181 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089147605 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.12107898 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092183668 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067342709 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091834303 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133317357 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093445751 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096903386 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080060385 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123246975 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107854225 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08522939 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111087394 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07925111 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.068672818 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132188457 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068664028 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091799116 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100962009 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096387387 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107804519 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131233908 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082037164 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.087861779 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080945298 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072450005 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103271216 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.082717698 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095978274 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091998927 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096813169 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083504165 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.08500349 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119291397 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150906686 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097976654 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09857057 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132582503 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076509978 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106318487 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079830807 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098039393 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102584424 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091912534 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073611981 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090435236 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105382544 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101116423 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080286152 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079566831 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11582406 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.100114101 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095132682 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078538615 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105857217 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086346756 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107241998 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264632429 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13808994 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101259324 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136235927 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122847243 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095272436 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088468198 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090475324 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074159871 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109292385 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097068437 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135165795 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108866509 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097835203 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095360621 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080869312 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106720293 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114180685 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092791018 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092923923 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14469474 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106805892 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089584985 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092727338 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140004355 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070135832 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146083601 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088024187 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119337155 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095790088 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137295359 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089925487 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082241861 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104118992 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102181986 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08674769 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09976891 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081373858 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11143651 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091563206 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099870742 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08030928 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089436452 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085355867 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096155414 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073818126 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102722699 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114628354 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112373732 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073580113 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107038692 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084692212 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075842359 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091424364 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137227882 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081722145 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073894639 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149297646 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092172493 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116961804 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110107215 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082734491 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266619473 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135958559 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091886637 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089282063 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075683471 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152883715 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075261473 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118278049 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080615779 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102023903 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10324673 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129960683 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137787108 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095278732 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077223515 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091215579 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.104989574 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084873949 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084641229 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075603523 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107718936 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124955333 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.09924783 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079293465 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090967018 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.067619342 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112955427 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074890976 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08412476 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094530653 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086660859 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089144708 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141635698 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083155209 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106996557 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096779549 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065865111 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090245265 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150339795 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080252519 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.109603031 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115838117 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082220976 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06718785 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.095329902 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071629436 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107670386 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092162654 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105783721 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07705892 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105957284 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067272306 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072820214 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128681198 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101313541 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088533104 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131549667 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10397825 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088500437 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104024706 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097121483 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095725403 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102579279 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.260256012 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104939041 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.071202577 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128169927 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091219935 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076928148 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086310127 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078157319 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.076751741 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099215911 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114998774 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0882804 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100209907 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102260718 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089159297 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.108799901 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08793127 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077986188 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131134673 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074678357 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074021814 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087176327 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106082818 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087865791 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133118682 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.078998314 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135888377 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0921925 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080420051 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114556909 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067707528 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068541246 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079879617 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090856985 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115189355 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0776679 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076762434 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117067888 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131414528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09695008 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101400841 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066367239 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089864367 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134685807 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113191105 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080258401 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10944413 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083143024 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128366779 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096598556 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11975353 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105330901 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110486535 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090645848 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080611455 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072721187 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0870137 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109950667 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085090485 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08119875 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066431084 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072886263 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091220005 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089916857 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112229762 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086555474 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134884873 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071962236 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105301144 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261009975 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107092583 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089285382 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09540713 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091773022 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091500558 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091322335 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090997146 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073987831 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126022555 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102359648 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077255494 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08840166 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094585318 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105950349 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108748546 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108458682 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093432069 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106147555 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122608726 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097551163 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081950877 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082628896 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.093513736 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084522513 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080139151 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102842661 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112456242 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097169292 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108114571 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.093462004 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.0922892 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105914997 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092400399 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087769424 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.117815323 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151995209 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101799027 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103153871 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084236997 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107374265 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104910603 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112489435 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110405465 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108640874 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069933732 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074044782 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069128443 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106493584 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078486463 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11750078 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07551893 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105700702 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095848581 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079217726 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065605887 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101009551 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092326162 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081355531 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122528586 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112606655 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072229276 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090064658 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106015738 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082287049 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124021613 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102147758 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101010297 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071176318 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090236514 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.226764238 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109320136 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.101140617 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076890179 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075444054 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06906083 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106222845 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082924766 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10858929 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088620128 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100615056 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11950616 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131863993 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086481667 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095847093 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117638208 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111051568 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079310138 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108370657 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131343461 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116626133 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077401011 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081915416 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103828935 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102563017 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09886359 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074522767 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077328401 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105474773 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112913808 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065532915 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083992382 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069405062 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.08356399 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111949128 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094346443 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082052308 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116996686 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073907159 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106608447 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094900161 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122768507 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119739805 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143462352 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096204495 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084698662 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076205586 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124323454 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070347394 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11690236 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111999986 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087184651 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.067217781 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083285972 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.095123209 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626202356 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108463729 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074869233 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134761737 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086133891 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115178407 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083998088 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117241854 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088889832 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101502356 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091597944 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282888169 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082574825 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109582725 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174021621 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110213704 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107140654 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073125791 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084915233 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073207811 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077772358 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080315875 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085910499 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108723671 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083817619 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104629607 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078757083 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.106662975 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089970361 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087773448 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.098605243 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078730282 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136148278 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087765317 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123095247 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106800521 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078108868 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073484875 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.086375138 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100617331 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081370462 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093878612 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077832364 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.075414621 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151536871 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10179342 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084124371 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101708457 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.09066415 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.086571583 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091223969 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117276289 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109753313 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072796012 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087182476 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103263087 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078145378 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073895958 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096059742 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068510608 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088620717 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09841386 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09571244 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089342524 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102289661 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077137975 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087262361 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109363343 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084995434 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076025256 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075683484 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076182895 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07997575 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102771836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107735575 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113572713 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108864978 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090638411 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093094976 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.077491833 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.374414136 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079331271 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095403771 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104455063 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075051319 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.130865908 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088142352 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088434887 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096214085 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100573197 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152088334 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073350242 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107722654 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093296134 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109063337 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086473553 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106808605 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095058752 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091255214 seconds)
  done (took 50.177546264 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089051756 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.148697484 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.154001534 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077112989 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091558796 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115532298 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20427192 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187326007 seconds)
  done (took 2.853304461 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063589432 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079090118 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100992568 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080146228 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06365379 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.064809471 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.204343475 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078838247 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062993273 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100901953 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07396233 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066078192 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.415395125 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062942523 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.063550152 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073144219 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064223021 seconds)
  done (took 3.488292234 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.361275619 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602726244 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.339889752 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071813536 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.955382892 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083812424 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.309467908 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.136447436 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076201069 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533409362 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368298308 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126420646 seconds)
  done (took 18.750608687 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.070676511 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071782782 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.075656254 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076773792 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070914773 seconds)
  done (took 2.13482136 seconds)
done (took 100.109384438 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.075521228 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.165461009 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065347726 seconds)
  done (took 2.035629875 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.078934753 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.078955027 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078084914 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076265414 seconds)
  done (took 2.091111151 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.068733795 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073230166 seconds)
  done (took 1.914775689 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.244761168 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.161269572 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090651306 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078293083 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077220027 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077842627 seconds)
  done (took 2.015550066 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067247822 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069203132 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070155414 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070183305 seconds)
  done (took 2.044055013 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06301194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06350269 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065775108 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.068759781 seconds)
  done (took 2.030702588 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078564077 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080615166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076339061 seconds)
  done (took 2.004576013 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.090606994 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093918134 seconds)
  done (took 1.953720804 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075623388 seconds)
  done (took 1.845381579 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084722459 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094189863 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150594508 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11014405 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.15109519 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135209479 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075848571 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076908872 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.06999401 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067423782 seconds)
  done (took 2.78285544 seconds)
done (took 23.064372582 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073429942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36052009 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355190724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080956306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66845758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353704393 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966535989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089605454 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096910439 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065653606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082311514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.7062489 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.957410954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323008743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943224792 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319482345 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64652314 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065401956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064395804 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065993325 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950947564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06475672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065674061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065271918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680381981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370364646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06626733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316652161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065136867 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068263456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353719359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067454399 seconds)
  done (took 16.162795409 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.064596366 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115256673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068257088 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08121842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068048895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067053369 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068563204 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066083988 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106240548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065969626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082618697 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065123079 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070229503 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067386588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086267354 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066252541 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06753118 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066517306 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06613108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069468653 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084464843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065887987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067235656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066323143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066740391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079535949 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067890846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066047962 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066233309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068855739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06989174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067905706 seconds)
  done (took 4.098361056 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114481424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120981964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06861184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104018655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116840509 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067749575 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146794023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089618282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111007432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066612854 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083160275 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065916122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100113313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067785153 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086915991 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066897514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06828272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06691628 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066035438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067344639 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085135251 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066168047 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066904168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067096072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067169112 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080935218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067838385 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066709079 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066267808 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068652277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070649408 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068134242 seconds)
  done (took 4.369517609 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065067821 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.067775034 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.07612259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079148482 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064586551 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066430071 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.067987195 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064816299 seconds)
  done (took 2.337436261 seconds)
done (took 28.752417181 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073283087 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063064607 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067034417 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08432277 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070668096 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068168584 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061933927 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071157082 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068692124 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.068400571 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069465719 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.063394729 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067059601 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06199231 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0693384 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063825317 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070340038 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068611334 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069277067 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069887258 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066698058 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069412467 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071777362 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069275983 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069240141 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.06884236 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073007349 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069723333 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06460601 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067072345 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066818434 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075459905 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070957615 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071042648 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.063784017 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064173047 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068446311 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.065940096 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070525976 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073454432 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065695531 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073885111 seconds)
  done (took 4.635537348 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079215468 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084261339 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077684039 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077866978 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096522033 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079561857 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084068766 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.075620161 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.074050718 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.082817408 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.07028209 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077340705 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07493084 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069139544 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.073979774 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071313319 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076497365 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071511928 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.074897 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.074947045 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084302546 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.069142504 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076957045 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07591823 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071511547 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077009709 seconds)
  done (took 3.793149267 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06812838 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080502709 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087949605 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145322849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109618421 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076528497 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077231163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090749242 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094024676 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064914495 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068403253 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089694006 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089250025 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070839106 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104796936 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.080764182 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080029832 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066801222 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071518466 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093849891 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084746627 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082163517 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09082213 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080584612 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064043837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067047679 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070911883 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.077980217 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071336343 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07577649 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068680097 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067410979 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065043026 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075504679 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069201397 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063673307 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088185591 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07595828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076687884 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106236895 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073069865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066010789 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091819862 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.124693003 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063857749 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.067614364 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067234566 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075866769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065459621 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092046596 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078312434 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.063839657 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.064829504 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065104723 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065365607 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079748937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066100728 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066449967 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075178367 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070113224 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085888781 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069557743 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083384408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063916491 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07405718 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065436429 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065380336 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063075838 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094959675 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070587272 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112182875 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.064656501 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062784723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075585391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074603076 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070166451 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.06384719 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081939488 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076930663 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067735203 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075264932 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.066998193 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067280793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095261498 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.064736343 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063548789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062731791 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067405975 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067040793 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065090729 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077858186 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063308582 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066993665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078616099 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063944081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064614995 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067413419 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06638647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06352062 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07721646 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068253697 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065419864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075370734 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065203575 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066996376 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077461957 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.071258318 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063304095 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066414784 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067519551 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065754146 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068547136 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066925582 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066395718 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071026741 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0710314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.06977025 seconds)
  done (took 10.545654108 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.15549067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.14624613 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066734743 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142934799 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073055001 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070065773 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.141876694 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084532826 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06511172 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06549447 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.064619621 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094078396 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090359639 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102404233 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.070476342 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065400092 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088382411 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.097147555 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145586991 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140477885 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088185724 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.071808763 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.067575444 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.066274264 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.066391026 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.073373073 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082545057 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073762142 seconds)
  done (took 4.384286546 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.072633188 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089623604 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069477214 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076971887 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.084740197 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065679809 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.06653128 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066325422 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079837777 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07437206 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065325629 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069389043 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068830246 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.067627001 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065693528 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073624862 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071744816 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064154147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068232031 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069960414 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074621176 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.089669371 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068914459 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064355054 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067044789 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064703967 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073827343 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076854559 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064754333 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080061798 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062368545 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.068880822 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078996306 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065375254 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064296157 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064935817 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064996876 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064478246 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06545477 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063107681 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063591006 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06964397 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06349323 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073504645 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078338765 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072088263 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066722593 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067134346 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.067277156 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062403193 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067498947 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067136313 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06725708 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071813413 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068252405 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067567628 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06793828 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090615788 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070575015 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063957595 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064773917 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064008608 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.067028888 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074989422 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080955943 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067161209 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063475365 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064894654 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070341346 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078173708 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063653395 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069350897 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06235681 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.06515357 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066777081 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.06682397 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065720946 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06329502 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064571188 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064495284 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064802307 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064309607 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064849124 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067062826 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062733944 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.063507679 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064686543 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066290081 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073494826 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063742061 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.067932208 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065748845 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0635822 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.066855713 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070213201 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067081496 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.077819469 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.075615013 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065066103 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06358861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.077252869 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067201653 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064157683 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071305693 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.068321391 seconds)
  done (took 9.060555597 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.084547389 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065663265 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080191444 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087885502 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074757863 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069796503 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075397015 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066148671 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081189425 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.064131093 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073020197 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06414316 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076191342 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074940648 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06681014 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075559309 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067265037 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082038157 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079029419 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064219964 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073854718 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076897471 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.076974653 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.07887567 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078325928 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079599699 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.076616781 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.06899745 seconds)
  done (took 3.916257925 seconds)
done (took 38.113939189 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.864778222 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.126340382 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.855470493 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081911273 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.923094278 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.078956287 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.964380584 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.854037981 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.948060419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.901155412 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.13985509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.381749019 seconds)
done (took 66.961407914 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.883193545 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.012587502 seconds)
    (2/2) benchmarking "String"...
    done (took 2.101155467 seconds)
  done (took 5.899886572 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.154511322 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.652588939 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.134023551 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.845349668 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.851747351 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.380017358 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.62123316 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.300307961 seconds)
  done (took 31.571206473 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.994278682 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.071316252 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.536382005 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.562943321 seconds)
  done (took 15.993792976 seconds)
done (took 65.377263233 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.865842731 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.853414775 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.857825029 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.874943262 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.855646968 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.848482903 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.851501088 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.849388113 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.85227589 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.946450059 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.847924871 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.850530026 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.846349817 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.859585159 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.422980905 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.894041574 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.858090379 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.854471216 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.854425995 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.906345983 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.848522707 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.846065295 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.308536789 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.0004652 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.450204496 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.047310497 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.287200888 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.259027646 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.849987408 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 7.017735995 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.893939588 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.168280382 seconds)
  done (took 206.612654297 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.846233226 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.685342134 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.76301249 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.897262463 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.148002521 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.026023854 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.93476952 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.25346419 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.853433726 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.869477032 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.973248384 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.85029498 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.005417241 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.791421476 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.883541494 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.876182677 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.996529118 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.021522674 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.88971951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.999038545 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.868630981 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.894332971 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.830561235 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.966699955 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.895571894 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.877845205 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.866794159 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.851351515 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.036271725 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.97277157 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.851226969 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.867283645 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.033321732 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.717671457 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.865731882 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.851531543 seconds)
  done (took 171.59621789 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.039236175 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.854290992 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.848162745 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.904046619 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.969037133 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.851788969 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.526116615 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.857904551 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.441927511 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.853883935 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.847667629 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.847271098 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.849384686 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.86234012 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.948266526 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.851365087 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.864184882 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.850233076 seconds)
    (18/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.848552165 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.873866276 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.851069515 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.849904923 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.847787586 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.84843272 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.849047558 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849657707 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.848552822 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.418409158 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.100819409 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.850005969 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.850020054 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.566561482 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.865473615 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.898865088 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.855246101 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.941594853 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.905874721 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.972413474 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.852524104 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.067172586 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.93404529 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.850609192 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.850216476 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.913492045 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.862331373 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.850749307 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.852465784 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.856370291 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.914641815 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.129197647 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.855991819 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.969979164 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.336045461 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.854160463 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.850306154 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.851009348 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.443185148 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.8542418 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.850969095 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.85895806 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.856341449 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.849884486 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.851147223 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.236401699 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.92235266 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.071741457 seconds)
    (66/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.244605927 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.854167715 seconds)
    (68/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.851148996 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.029697523 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.984899092 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.850387372 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.851132894 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.851738454 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.852508141 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.850199985 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.853775061 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.971684218 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.86116442 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.98627674 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.934814972 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.971449686 seconds)
    (82/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.856671167 seconds)
    (83/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.862637453 seconds)
    (84/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.678808317 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.923372813 seconds)
    (86/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.889738333 seconds)
    (87/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.674866078 seconds)
    (88/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.855285797 seconds)
    (89/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.225548783 seconds)
    (90/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.636783051 seconds)
    (91/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.854885692 seconds)
    (92/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.851857777 seconds)
    (93/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.864951536 seconds)
    (94/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.8526768 seconds)
    (95/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.853866942 seconds)
    (96/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.854513617 seconds)
    (97/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.93121794 seconds)
    (98/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.855713445 seconds)
    (99/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.97265203 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.581214906 seconds)
    (101/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.192485904 seconds)
    (102/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.858179241 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.853057227 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.8521435 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.860138985 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.933500365 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.974280233 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.856754951 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.919146111 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.859468612 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.85537338 seconds)
    (112/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.852907746 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.945457211 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.854043572 seconds)
  done (took 409.716206843 seconds)
done (took 791.809582014 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.438574198 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.416406135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.51550611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.427361668 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.400261246 seconds)
  done (took 13.989321801 seconds)
done (took 15.786514879 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.86783533 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.859169634 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.914461639 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.939475284 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.869775718 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.872019684 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.93507219 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.874268903 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.905053112 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.91038709 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.937396274 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.938428582 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.87841497 seconds)
  done (took 26.492939952 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.862729872 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.006328618 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.092578483 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.897863538 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.863923061 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.087651966 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.922212274 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.014412394 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.007370253 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.08703114 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.094397294 seconds)
  done (took 23.729491256 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.862579037 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.011590141 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.092124315 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.901058357 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.864794865 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.090247547 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.930278829 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.005774591 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.008409326 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.090578862 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.102484008 seconds)
  done (took 23.761606182 seconds)
done (took 75.77824593 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.859775711 seconds)
  done (took 3.652956751 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.87814494 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.019591143 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.861042183 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.856349525 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.85862951 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.859608694 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.858285202 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.859699642 seconds)
  done (took 16.843636594 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.858246767 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.858926094 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.857960557 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.85916927 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.858391998 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.859421984 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.858723073 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.858134159 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.859280887 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.859486657 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.858376447 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.858475598 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.858087504 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.859118439 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.858824107 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.858823258 seconds)
  done (took 31.534366577 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.861208399 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.858694276 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.861548289 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.861004389 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.861072031 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.861585705 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.862096885 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.860395664 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.861520412 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.861506401 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.861334227 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.8589504 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.859700801 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.860530326 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.860738678 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.861059872 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.861538361 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.859850453 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.865401933 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.862811521 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.861261201 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.860979644 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.861315869 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.860754759 seconds)
  done (took 46.461969912 seconds)
done (took 100.301324674 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.627973771 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.585684414 seconds)
  done (took 10.008438431 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.861039255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.861966178 seconds)
  done (took 5.524138152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.860717894 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.861158373 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.861816543 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.861230244 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.86104318 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.861310561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.860371339 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.859698325 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.860638467 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.861829236 seconds)
  done (took 20.404933994 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.861735982 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.861599776 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.86139276 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.862363843 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.862776776 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.861051552 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.862108747 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.860957886 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.863273612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.862118576 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.862049496 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.861222667 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.861732128 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.861143953 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.861491431 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.861304424 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.860983517 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.862036651 seconds)
  done (took 35.307666134 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.86140972 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.862054543 seconds)
  done (took 5.520134236 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.862715571 seconds)
    (2/7) benchmarking "second"...
    done (took 1.861140002 seconds)
    (3/7) benchmarking "month"...
    done (took 1.860743889 seconds)
    (4/7) benchmarking "year"...
    done (took 1.860524598 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.861776513 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.860762623 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.862562994 seconds)
  done (took 14.825491828 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.862382743 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.03524856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.105806593 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.70842626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.863156961 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.865188342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.192714315 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.867289705 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.868590593 seconds)
  done (took 21.165704405 seconds)
done (took 114.554270242 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.686505695 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.866366272 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.124590617 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.922506761 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.879862 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.205345193 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.868415582 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.512443577 seconds)
done (took 42.865025003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.86902542 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.860143243 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.889569644 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.89079333 seconds)
  done (took 22.437306826 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.864122105 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.323765347 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.904367285 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.774122519 seconds)
  done (took 22.87833903 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247031286 seconds)
    (2/2) benchmarking "read"...
    done (took 2.209612542 seconds)
  done (took 6.260429884 seconds)
done (took 60.245312489 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.863788266 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.864497774 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.864851765 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.864121539 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.864485869 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.865633189 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.865214567 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.864438575 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.865354068 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.864182358 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864072984 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866253959 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865589927 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.864932706 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.866910991 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.864525738 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866754865 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.866208548 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.864926739 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865215171 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.864705256 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.864944972 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.865439577 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.864985052 seconds)
  done (took 46.561363086 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.865945656 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.865007393 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.864779315 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.866710777 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.865937963 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.866236816 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.86600955 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.866051613 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.866591075 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.866242925 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.86490717 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.86613831 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.866104023 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.864999992 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866415472 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.866415431 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.865865125 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.867194366 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867064733 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.865921511 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.866767694 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867338862 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.866093865 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.866999067 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.867216876 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.866385455 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.867531405 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.866001936 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.866084683 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.867887781 seconds)
  done (took 57.789314445 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.866765379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.867039577 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.866470319 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.8686502 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.86760208 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.867543174 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.86699719 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.867083662 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.867880296 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.867921488 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.868324098 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.869375745 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.869002091 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.868601365 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.867875971 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.867486825 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.868901764 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.867511039 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.867618681 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.867749853 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.867733526 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.868287885 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.867862005 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.869978505 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.869450131 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.868747478 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.86850631 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.870666084 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.868595184 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.868751071 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.868899265 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.86970754 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.867685152 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.868091613 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.86856333 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.870357505 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.869230267 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.868528148 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.86861603 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.869724171 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.869991902 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.8686331 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.868369335 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.869937812 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.867380655 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.869716316 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.872100746 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.869866975 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.869676479 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.868810815 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.869028883 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.86923781 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.868929808 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.867337507 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.870159428 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.870129388 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.872228418 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.870406435 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.868813954 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.873137558 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.870202724 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.869212108 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.871808002 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.869215125 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.869744462 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.869910451 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.869367334 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.87061294 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.870232353 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.870234049 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.870214873 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.868550928 seconds)
  done (took 136.371405031 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.87009397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870778904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.871705272 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.870547242 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.869979323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871159394 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870779883 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870794126 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870292239 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.871892439 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872133692 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871557782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871774313 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.871424371 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872236124 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.870610696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871910963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.870413637 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.872563825 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.870582261 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87175648 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.871050812 seconds)
  done (took 42.97114568 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870362441 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871360394 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.870376892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.872633206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.871453047 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.871399391 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.871118948 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.870817778 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872836349 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872136532 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871538429 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.873221285 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.872087911 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871837234 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.87375258 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873396896 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.873367664 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.873768454 seconds)
  done (took 35.503041875 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.872813129 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.87280799 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.872870302 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.872761433 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.873053423 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.872652341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.872131309 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.872648797 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.873627081 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.872951204 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.871402067 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.872387972 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.872545108 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871480571 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.872226218 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.872915578 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.874651309 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.872747512 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873624275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.873924426 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.873725135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87391289 seconds)
  done (took 43.011106795 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.872926608 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.875246538 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872773103 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.873684193 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.874200474 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.874293405 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.874572901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.873841511 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.873279301 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.873821784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.873661378 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.874494048 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.876020046 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.875089809 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.873682113 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.87433942 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.873669481 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.876873349 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87717172 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.876425014 seconds)
  done (took 39.298123701 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.875129883 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874396614 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.875387333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.875909038 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.876353047 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.876909999 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878508147 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.876652519 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876590055 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877878112 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.877669089 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875937779 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875940226 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.875386516 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.87571741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87651682 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875804726 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874771599 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.87552601 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875011422 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877653587 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876797344 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.87616306 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876743596 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876915374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.875194518 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87753139 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.876233173 seconds)
  done (took 54.344249129 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875711223 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.876511196 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.875742529 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.875695011 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.874754182 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.875814714 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.875677954 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.876672809 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.876355895 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.876768047 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.875102138 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.875911365 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.876989819 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.875763546 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.876735841 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.877204244 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876919158 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.875905156 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.878788474 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.876020989 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.876215525 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876217048 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.876853644 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.876720306 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.876317161 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.876755126 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.875920572 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.876444229 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.87720791 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.876551094 seconds)
  done (took 58.101537441 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.898183796 seconds)
    (2/2) benchmarking "in"...
    done (took 1.898809013 seconds)
  done (took 5.607884283 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.877098099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.87721544 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.878721029 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.87749951 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.878500108 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.877988191 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.878119881 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877491726 seconds)
  done (took 16.834562702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.880525062 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.880907444 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.87939845 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.877454207 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.879187041 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.888408241 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.879515914 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.880353079 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.880723885 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.880096301 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.882341907 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.882400691 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.887626441 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.88426279 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.878453056 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.879493574 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.880554701 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.881339284 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.880451973 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.878235589 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.88374749 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879185309 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.87865628 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.880988519 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.879873728 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.880380877 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.889613911 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.880290273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.882267646 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.878555848 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.889238949 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.879509795 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.87890049 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880194542 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.880415371 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.879065989 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.889434782 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.881683952 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.879381949 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.880741122 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.88239743 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.883043648 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.882929113 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.889614432 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.88165064 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.880376697 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.880138668 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.879497485 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.882475452 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.884157389 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.890254827 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88160625 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.879433922 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.881967382 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.884771146 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.881906522 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.880810404 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.883164829 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889377046 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.890594225 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.884834949 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.901738556 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.889377537 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.881267551 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.881702074 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8899125 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.903902173 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.883038579 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.88303056 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.881893687 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.890804885 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.883739218 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.881960593 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.882366687 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89444266 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.890446599 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.882961317 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.882212356 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.882636526 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.882324687 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883894506 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.882420285 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.881526158 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.882614418 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.89177123 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.905075764 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.883832012 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.884258442 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.884374276 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.884381585 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.889058521 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.885226462 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.883248036 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.882353883 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.88491713 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.885554086 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.882785541 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.883062408 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.882775202 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.892183112 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.885209132 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.882683565 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886138691 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.89176391 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.884656414 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.884976234 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.885200047 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.884918486 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.894013593 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.884057322 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.884400226 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.883402731 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.884744874 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.889894204 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.883789205 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.886617005 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.893337072 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.893959594 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.886045429 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.887965038 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.889374575 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.888252012 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.894463799 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.906760857 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.88556437 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.889944384 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.889636187 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.896836547 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.889416563 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.886226203 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.889203099 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.886177149 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.887374447 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.887979257 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.885371254 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.886888809 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.885070332 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.88650549 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.884754473 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.886898107 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.887780303 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.886956335 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.888381235 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.886005984 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.889419025 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.886871882 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.88949421 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.894070733 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.887752969 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.888232792 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.887110562 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.889774415 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.888948166 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.887304696 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.886708056 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.888375433 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.888105978 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.888588688 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.888972639 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.887242465 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.888470574 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.889234295 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.891307506 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.888027774 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.888340472 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.888164086 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888809904 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.88863979 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.88962711 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.888112678 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.89031956 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.888026708 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.893977985 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.887547087 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.88999707 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.889939229 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.888876372 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.889381243 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.892397485 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.899071661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.893075662 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.898465916 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.88844703 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.898371883 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.888382864 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.891378173 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.889311935 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.890123938 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.890223348 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.889501092 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8910119 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.892782655 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.910659454 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.898840216 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.89065525 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.89070326 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.894828268 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.892745908 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.896170623 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.888374539 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.891139447 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.890363959 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.888499483 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.890026758 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.889154993 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.892753345 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.889251354 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.888583062 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.894568025 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.889765405 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.889168489 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.891030831 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.889978679 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.889628549 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.891125485 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.889948661 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.891068398 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.889361957 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.897962617 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.893616423 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.890109014 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.890780574 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.892113908 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.889941278 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.890129681 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.891010343 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.893535597 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.889918063 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.891818818 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.899047157 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.893099571 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.890485535 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.890210591 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.892284434 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.892243055 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.892175718 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.893996179 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.898813357 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.89524098 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.89139978 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.897099248 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.891842187 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.894593614 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.891163578 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.892412363 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.890812696 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.892985464 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.891495305 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.890468204 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.89995944 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.891559869 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.89264771 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.892712817 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.893642577 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.8919347 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.894572999 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.891436586 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.895324501 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.900382085 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.898645944 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.893173313 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.896425488 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.894596068 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.894299086 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.896094765 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.89317493 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.905268922 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.901604032 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.893218965 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.893198889 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.892263923 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.894715197 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.893141261 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.89269142 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.902126463 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.893933331 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.895090211 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.898130595 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.893785831 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.894964094 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.900995592 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.895214385 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.898054369 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.895218488 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.895111801 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.894144421 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.89393293 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.897226141 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.89567905 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.896117743 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.898103123 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.894667211 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.894911784 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.893841325 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.903541537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.89447076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.894270865 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.90359456 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.895573949 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.893754989 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.895826356 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.893651225 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.895133754 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.895766088 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.894147022 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.895945755 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.89438497 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.898095809 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.904448119 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.897454076 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.902878386 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.899352624 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.905135716 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.894087347 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.894433116 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.894495477 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.897895392 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.903444499 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.895536144 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.89496479 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.904029908 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.895896951 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.895239034 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.900089683 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.895743797 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.895630438 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.895669415 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.897630118 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.90039043 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.900492508 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.896175047 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.896580466 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.896113059 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.896605059 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.900279711 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.897628586 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.896903813 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.896398386 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.896243907 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.897051702 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.897333638 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.895923134 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.89709106 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.896928983 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.89610153 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.905192319 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.899539051 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.899527719 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.902039816 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.896434638 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.908430732 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.900494311 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.898546172 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.897986464 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.897352401 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.900710232 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.897465933 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.897810564 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.897546793 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.897271342 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.899257871 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.910465257 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.905638474 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.900433766 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.898947545 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.89761237 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.897885594 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907519359 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.918730066 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898034143 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.901299689 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.901875956 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.907433804 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.902286412 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.903684943 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.902515672 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.905452012 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.899656987 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.898459094 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.901179429 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.911472987 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899489293 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.898213185 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.899192288 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.903381019 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.900503385 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.900796763 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.899954238 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902465719 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.901338005 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.911263731 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.900348025 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.900683914 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.899028732 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.898410084 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.899102352 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.898917297 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.900733782 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.902408869 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.899909541 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.900071584 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.901129364 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.904082086 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.898554371 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902807415 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.908193211 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.899798258 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.900145095 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.901321848 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.901272304 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.902329914 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.899909588 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.901031642 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.902117229 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.899821116 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.901514847 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.903605643 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.908319756 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.900995935 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.901207778 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.900429738 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.903680108 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.900338297 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.900735413 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.901804818 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.910281683 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.904680054 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.910509768 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.910234769 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.90031656 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.902729169 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.907866454 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.908628413 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.902712674 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.900144316 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.900730158 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.904094283 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.903623237 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.902651853 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902695625 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.903274882 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.907139371 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.901767974 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.902111745 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.901819393 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.901584205 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.905108896 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.904335586 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.906421923 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.9016601 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.901905552 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.901013294 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.902199572 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.903007717 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.905589351 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.900726785 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.901626638 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.905181366 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.904132727 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.905565168 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.902727944 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.903730569 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.904476674 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.902325261 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.902979116 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.903360895 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.903458315 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.903196039 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.906201122 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.908972032 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.903228709 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.904691638 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.904990077 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.90716833 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.903588454 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.903326404 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.903681147 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.903748351 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.912526436 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.904720531 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.903358429 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.905274073 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.903177274 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.90945572 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.904977196 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.908066473 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.904249804 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.90475246 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.90396056 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90728774 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.912571828 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.907927077 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.906884729 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.911666144 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.90922206 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.906103201 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.905415044 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.905243193 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.904650647 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.906595076 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.90941117 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906733716 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.908545973 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.905929663 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.90766115 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.90458788 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.906073717 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.904798514 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.904942993 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.908567546 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.913080877 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.914476876 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.907474487 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.907265741 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.905750497 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.907414095 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.916438804 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.904939681 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.905450731 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.906266154 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.906536565 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.906819616 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.913155195 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.913919318 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.90942744 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.905918645 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.91018524 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.922098072 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.909099239 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.914734601 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.937484147 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.907528788 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.905761604 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.906501905 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.907016833 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.906333454 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.908993029 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.906107926 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.915111962 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.907429681 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.9069239 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.91597926 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.906696974 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.907544441 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.908881027 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.90955521 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.913139211 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.908260136 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.916214829 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.907836463 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.907844603 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.907474122 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.910653602 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.907459093 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.908754428 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.907462835 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.910351449 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.907514258 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.908121926 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.918994488 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.908524636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.90915796 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.920627705 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.918002385 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.908084412 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.908136885 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.908676821 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.913083603 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.911308259 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.9083889 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912183843 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.915877085 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.91236959 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.915693239 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.910087795 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.912406434 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.909291413 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.9096235 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.909283195 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.921664545 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.920014476 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.9099949 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.910667108 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.914162787 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.909446149 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.917230459 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.915423849 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.910215645 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.910635682 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.909507587 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.908220448 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.91128488 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.909175848 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.914565249 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.916447493 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.910891608 seconds)
  done (took 1132.321536073 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.910682009 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.910505788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.909878758 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.909462721 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.909554272 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910958419 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.909966302 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.910305728 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.909203265 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.910333727 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.912109681 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.911203842 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.910149668 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.910682993 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.910411503 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.910488661 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.910280903 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.910010954 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.910447783 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.910881884 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.910202946 seconds)
  done (took 41.961256631 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.911125616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.910962778 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.910250565 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.912179154 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.912822141 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.910757294 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.911274701 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911705988 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.910554755 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911986608 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.91142878 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.911535453 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.910982025 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.912805767 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.911963091 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.912071524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.911663036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.911277625 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.910679971 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.91366335 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.912514809 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.911351411 seconds)
  done (took 43.899343981 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.912722021 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.912363261 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.913640656 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.912735369 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.912061927 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.913870654 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.912582396 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.914998208 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.913055104 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.913672754 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.920770458 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.920189502 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.913673265 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.917053002 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.9131502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.913334294 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.060720347 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.914936288 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.91389735 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.913580342 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.913750087 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.921294497 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.914376502 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.913150134 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.913286728 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.913498002 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.912948049 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.914836034 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.91245525 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.914365776 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.917628786 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.912726786 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.914014976 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.91790329 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.915523735 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.91564763 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.917400566 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.914057064 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.914012376 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.915039735 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.92350301 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.935060058 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.914413297 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.916039675 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.922997688 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.914845028 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.914522656 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.916963073 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.921841253 seconds)
  done (took 95.857831601 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.916237376 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.914413617 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.914298958 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.916863844 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.914748155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.916482958 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.91426837 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.915445759 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.915086961 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.917553025 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.91502512 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.915208253 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.915956588 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.916016698 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.915243698 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.915985081 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.916653144 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.91587766 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.916010172 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.916674843 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.915736574 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.917342046 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.915671118 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.915848311 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.916448756 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.91612184 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.917151995 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.916849737 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.917255561 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.916572257 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.917585132 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.918012789 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.915849471 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.917112205 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.916739729 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.91700051 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.916618417 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.917157316 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.917415345 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.917865338 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.918153968 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.918400157 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.918336125 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.917424058 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.918230874 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.916901951 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.917987709 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.918901929 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.919177122 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.918222782 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.918181584 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.917853878 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.919117974 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.918618625 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.917856874 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.918252126 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.919233311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.918374834 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.918866119 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.919295017 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.918589324 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.91929058 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.920237803 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.919713211 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.919205227 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.91974558 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.919505037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.920465393 seconds)
  done (took 132.224122031 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.919871317 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.919201732 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.920134819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.919906549 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.920786198 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.920181231 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.920157669 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.919891265 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.920365783 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.92041619 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.920616752 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.918846619 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.920250464 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.919147953 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.920329377 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.920591544 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.91996946 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.921008179 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.921996787 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921927281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.920854836 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.92109016 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.92065673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.919906602 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.921047587 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.920743439 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921064349 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.920427725 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.920829907 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.921294094 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.92156361 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.921100329 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.920841103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.921083585 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.922244793 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.921260178 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.921736752 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921463559 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.9208123 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.920992357 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.923038956 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.921893903 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.921533967 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.921389539 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.920631216 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.922572511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.921556122 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.921767526 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.922398563 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.923414066 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.922421032 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.923309975 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922157149 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.921546373 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.921566858 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.922507356 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923740348 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.922401511 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922187128 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.921318104 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.923873367 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.921881539 seconds)
  done (took 120.969854971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921879006 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.921182468 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.923410687 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.922548196 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.921651457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.922116418 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.922458436 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.923023411 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.922560375 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.923623359 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922504694 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.92328437 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.923345921 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.922251483 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.923264175 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.923572746 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.922653743 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.922744115 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922313299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.923701021 seconds)
  done (took 40.3086801 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.922859627 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.922821207 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.922911073 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.92212869 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.922731468 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.923961247 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.923108975 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923578995 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92414897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.923601172 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.924296166 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.923910479 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.92471928 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.925472593 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.923418156 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.924300562 seconds)
  done (took 32.634729168 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.924200764 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.924536314 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.923216671 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.924504444 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.92472874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.924145806 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.924725614 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.924512981 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.924774667 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.924238287 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.923605525 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.92532954 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.92548904 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.924796983 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.924791798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.925457748 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.925389512 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.924512492 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.925055038 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.924907343 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.925358065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.925355396 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.924837336 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.925647326 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.925239354 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.925024465 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.926164006 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.927763148 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.926034892 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.925872937 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.926854565 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.924964735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.925042135 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.92640927 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.926121828 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.926176332 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.92583871 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.926507268 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.925218184 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.925016194 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.926202405 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.926598785 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.927354707 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.926650664 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.927708963 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.926535853 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.926646326 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.926318845 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.927999969 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.927283169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.926591764 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.926530329 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.926599312 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.927447879 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.927261834 seconds)
  done (took 107.769778528 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.926396531 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.927667481 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.928353299 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.927260632 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.926880438 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.927988861 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.926951376 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.927173554 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925770334 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.926686453 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.927672223 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.927397 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.927471482 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.927079723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.92822764 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.927889704 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.928037531 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.927752253 seconds)
  done (took 36.553136011 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.927807803 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.927747003 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.926885357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.927080275 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.928016639 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.928613389 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.927232077 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.92741082 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.929119478 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.929152017 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927949846 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.92792894 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.927903417 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.928860548 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.928151705 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.928388928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.928690515 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.928213187 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.92849245 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.929674168 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.929484991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.9293928 seconds)
  done (took 44.284805913 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.929197444 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.929910397 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.944662416 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.950553071 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.949123807 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.963979284 seconds)
  done (took 13.52848068 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931127988 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930031076 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.930222097 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929398086 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.928394743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.929409263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929855381 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929926975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929617656 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929535682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.929875151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93072424 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930058583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929759362 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929852269 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930337506 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930243391 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929914615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930452875 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929164435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931000495 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930043995 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930422487 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930534605 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930459351 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931366382 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930282505 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931286054 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930843351 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930232188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929910408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931373616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930744974 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931549748 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.93187902 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930399626 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931318916 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930774215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930645442 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931878346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.930992716 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930903561 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930807462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931276408 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931788846 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931716987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9327366 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932949976 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931806185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931929978 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932169265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932394291 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932056967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933058657 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932589478 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933339344 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932972973 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933097623 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933748535 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932976547 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.932512819 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932710463 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934060458 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933868483 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933117032 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932169673 seconds)
  done (took 129.322253705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932949453 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.933318769 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.932071816 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933145007 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.933106291 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933224736 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932921181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932876908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933688311 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932866252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.933660022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934441015 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933245208 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.932245751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.932621926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934177467 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.933633871 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933730984 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.933206532 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932987583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933486144 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933752913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933663127 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.933456187 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.934903258 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933883818 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.936402864 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93497325 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934406231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934057909 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934600661 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933779102 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.934783562 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.934947946 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934654274 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934807669 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.935475912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.936227568 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935893218 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93385032 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935048025 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934765169 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.936131488 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.935481931 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935320623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.934630636 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.934961711 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.934708505 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.934338097 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934969173 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935405556 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.938391927 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.935841314 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.935680954 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934272866 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.93468912 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.936107988 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.937004086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935191459 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935351561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.935719088 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934858429 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935328675 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.936552899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.935507575 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.936095268 seconds)
  done (took 129.546029286 seconds)
done (took 2639.380399846 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.02028271 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.060064647 seconds)
  done (took 15.948874895 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.102625049 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.054419308 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.938959297 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.939377573 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.939889616 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.968856805 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.958353257 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.940546664 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.93984307 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.939315071 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.94016979 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.124043346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.997465319 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.940314747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.939507742 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.032640268 seconds)
  done (took 53.592269993 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.945654992 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.943338617 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.954989937 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.944323282 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.945165497 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.956983598 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.973642038 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.949257964 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.980964448 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.958553651 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.014173419 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.956393598 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.944074877 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.995936916 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.959761597 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.961260373 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.038437808 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.02288147 seconds)
  done (took 37.31533941 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.024781537 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.954009596 seconds)
  done (took 10.856085771 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.963004061 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.940632843 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.975146184 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.960882779 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.940989027 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.964460487 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.956935834 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.956974624 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.940714885 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.974632085 seconds)
  done (took 71.471982142 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.95030327 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.946067527 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.945162297 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.94160584 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.940259259 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.944327131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.942999802 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.940432033 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.633191362 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.981765665 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.953696542 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.950714362 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.943356837 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.945259499 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.940207017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.96970695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.06029565 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.939998878 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.940154006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.949175362 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.943037364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 2.003863491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.957397539 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.945841038 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.97645833 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.633229342 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.954852246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.949103386 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.056698055 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.940522306 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.943880523 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.15295976 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.948065877 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.409605301 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.227417332 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.949010686 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.955464789 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.951330817 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.940389182 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.067367722 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.944717776 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.949801223 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.942170641 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.202863796 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.040242465 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.99077965 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.277006284 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.948189014 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.944229183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.977933964 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.948423293 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.945629512 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.961868075 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.464699999 seconds)
  done (took 137.077868909 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.941524982 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.300455679 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.109630944 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.943896056 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.226939291 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.147117793 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.943841894 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.988453872 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.943581571 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.170167965 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.198196008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.048435356 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.943541942 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.943493421 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.9435953 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.94148437 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.098174463 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.01250821 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.944943981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.940856191 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970748035 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180629928 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.062722991 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.944714547 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.968988274 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.151692322 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.062799774 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.046695723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.727634983 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.943391185 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.005217259 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.944847265 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.94479408 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.941606211 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.097313781 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.036990301 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.024632083 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.9450939 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.942470834 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.942137001 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.692455067 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.141354811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.037173321 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.074186414 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.196023919 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.148361287 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.721952378 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.943331386 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.67385803 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.10392857 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.173271855 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.171211467 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.063389758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.950132837 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.280198608 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.944690771 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.943741893 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.192444221 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.165763072 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.043441778 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.945686875 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.945493342 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.943319787 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.232140277 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.946613283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.037716032 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.945916465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.946133756 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.039328321 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.045317698 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.173357431 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.159295736 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.976450026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.297338592 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.453069852 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190046006 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.009719955 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.194685242 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.948894523 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.945761967 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021436297 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.7929072 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.197921189 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.229112605 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.188464081 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.979548923 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.660569474 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.946274081 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.168662598 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.165343194 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.205505729 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.190103336 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.186603762 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.260769305 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.945067279 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.946176961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.308910608 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070506443 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.952319456 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.286037758 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.176653873 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.504663883 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.973170707 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251294458 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.077309254 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.952873613 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.589036338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.946089831 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.175343577 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.985964921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.948665661 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.947383696 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.163820897 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.938877812 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.946311638 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.579552458 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.007766248 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.952393858 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177657739 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.949921124 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.215242679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.94978656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182062115 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.547192149 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.977553513 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.12035555 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.193446535 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.953135573 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.192335918 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.190076521 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.062042554 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170382217 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.645543321 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.94971861 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234654222 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.951367385 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.947962212 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.115842757 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.949749919 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089576372 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.951438162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.238309639 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969209654 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180233285 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.954306356 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.201054771 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.982076396 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998840987 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.952245875 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077994948 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.951742173 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.784750705 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.105142743 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.951809368 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.950383986 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.491047151 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.948993421 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.095431671 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.175969602 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.970147368 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.020218485 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.610672492 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.950611502 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.030157291 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.971704865 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.33894942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.949173596 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.201273303 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.953428288 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.951494916 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.948736048 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.232875785 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.133058356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.949997993 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.949364401 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.855067505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.950562794 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.949792504 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.130248672 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.320164636 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.950912698 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.150757066 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.954667809 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076441749 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.95940637 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.028350955 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.28147118 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.949849113 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.950025803 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.950433269 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.950718864 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.950415293 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.157653404 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.976460309 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.486090922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.08714776 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225346699 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.260250797 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.189319738 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.993387492 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.955677731 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.207209266 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.954675574 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.013050185 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.953660678 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.969867665 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.182032409 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.956717834 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.15878658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.222361425 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.827816378 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998555979 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.95447757 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.952255094 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.952102036 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097535484 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041209577 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.955856547 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.95186479 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.066274714 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.076559784 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.163180043 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.954666104 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.015223225 seconds)
  done (took 920.564304728 seconds)
done (took 1248.697990734 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.951691258 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.953024583 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.955879908 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.958650041 seconds)
  done (took 29.704470317 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.955831456 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.954547853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.954685385 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.953960946 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.955072659 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.95440487 seconds)
  done (took 13.614231758 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.148754023 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.955201128 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.956704393 seconds)
  done (took 21.946145654 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.030463637 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.36329064 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.098657505 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.394807623 seconds)
  done (took 10.772181906 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.956075037 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.955444716 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.956169252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.956434311 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.958761915 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.95821748 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.955781664 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.956711199 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.958093555 seconds)
  done (took 19.498979575 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.645478142 seconds)
done (took 102.06868072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.144175415 seconds)
    (2/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.981890831 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.020489514 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.05477324 seconds)
    (5/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.329049426 seconds)
    (6/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.619316981 seconds)
    (7/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.055881014 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.980684461 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.204170711 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.089549817 seconds)
    (11/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.080778372 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.191876084 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.098524357 seconds)
    (14/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.593268613 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.131878858 seconds)
    (16/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.042541972 seconds)
    (17/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.96191681 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.270699954 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.193826466 seconds)
    (20/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.042391771 seconds)
    (21/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.975079223 seconds)
    (22/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.842627326 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.989757183 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.546696748 seconds)
    (25/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.526505071 seconds)
    (26/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.991854167 seconds)
    (27/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.040780873 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.277463632 seconds)
    (29/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.405705368 seconds)
    (30/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.200232577 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.99178229 seconds)
    (32/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.286417528 seconds)
    (33/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.648892931 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.248213813 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.089075059 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.558737161 seconds)
    (37/309) benchmarking ("sort", Int8, false)...
    done (took 4.910788863 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.019404888 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.062542355 seconds)
    (40/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.282158016 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.132254511 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.059889451 seconds)
    (43/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.967258783 seconds)
    (44/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.055097995 seconds)
    (45/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.258259909 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.260075472 seconds)
    (47/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.981621053 seconds)
    (48/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.95680772 seconds)
    (49/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.162251607 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.17348218 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.387112671 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.346756976 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.97546063 seconds)
    (54/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.036031173 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.598773364 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.190735667 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.873517345 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.297720549 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.198019202 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.27349239 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.116664485 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.978492017 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.956653948 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.175862474 seconds)
    (65/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.15389551 seconds)
    (66/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.487875073 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.050230374 seconds)
    (68/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.347596613 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.250670255 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.121458633 seconds)
    (71/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.96692071 seconds)
    (72/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.164533911 seconds)
    (73/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.274963404 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.513798709 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.109874983 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.452003645 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.975696108 seconds)
    (78/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.102270592 seconds)
    (79/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.055112841 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.61074861 seconds)
    (81/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.047098336 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.858774384 seconds)
    (83/309) benchmarking ("sort", Float64, false)...
    done (took 5.693980144 seconds)
    (84/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.243700791 seconds)
    (85/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.849964869 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.77720625 seconds)
    (87/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.071004051 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.269047104 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.98918418 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.927719834 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.151600529 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.960767035 seconds)
    (93/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.262553279 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.343402252 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.04184503 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.977768588 seconds)
    (97/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.767820367 seconds)
    (98/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.05434325 seconds)
    (99/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.958576219 seconds)
    (100/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 3.627657099 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.350371385 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.282496185 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.054346668 seconds)
    (104/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.22165809 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.962008435 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.965491366 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.991660964 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.275507961 seconds)
    (109/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.354778375 seconds)
    (110/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.982378897 seconds)
    (111/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.070881332 seconds)
    (112/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.26618083 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.367309154 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.35462299 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.086829492 seconds)
    (116/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.076509026 seconds)
    (117/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.661718596 seconds)
    (118/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.759851341 seconds)
    (119/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.25562313 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.96864977 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.966683251 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.026404974 seconds)
    (123/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.449541943 seconds)
    (124/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.090675674 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.254078384 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.983189909 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.96033481 seconds)
    (128/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.794382821 seconds)
    (129/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.161781839 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.6574946 seconds)
    (131/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.382993512 seconds)
    (132/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.093999484 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.117597139 seconds)
    (134/309) benchmarking ("sort", Float32, false)...
    done (took 5.666839393 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.156818246 seconds)
    (136/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.964784755 seconds)
    (137/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.130494382 seconds)
    (138/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.149909768 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.001498911 seconds)
    (140/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.11320561 seconds)
    (141/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.984389806 seconds)
    (142/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.201888969 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.089683513 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.96207914 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.21609993 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.631035519 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.04144479 seconds)
    (148/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.05931307 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.989548483 seconds)
    (150/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.963204446 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.221078712 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.448028022 seconds)
    (153/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.714978744 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.963767395 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.992702557 seconds)
    (156/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.595609837 seconds)
    (157/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.978006616 seconds)
    (158/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.042486747 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.296069108 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.312098217 seconds)
    (161/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.967480708 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.137480731 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.742022233 seconds)
    (164/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.973813703 seconds)
    (165/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.980602912 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.108312275 seconds)
    (167/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.117737205 seconds)
    (168/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.973002303 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.08260485 seconds)
    (170/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.047094808 seconds)
    (171/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.967797588 seconds)
    (172/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.024082365 seconds)
    (173/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.041324775 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.065742228 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.127820462 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.967856014 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.747318546 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.07469861 seconds)
    (179/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.099481855 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.964379122 seconds)
    (181/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.040529554 seconds)
    (182/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.36477061 seconds)
    (183/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.06800736 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287537685 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.05705076 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.967042732 seconds)
    (187/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 4.058974573 seconds)
    (188/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.9717792 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.632617781 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.97578056 seconds)
    (191/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.976766472 seconds)
    (192/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.915065542 seconds)
    (193/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.223728784 seconds)
    (194/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.993476202 seconds)
    (195/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.336307273 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.858686137 seconds)
    (197/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.998209808 seconds)
    (198/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.713907443 seconds)
    (199/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.581928275 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.046346245 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.329096102 seconds)
    (202/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.332727995 seconds)
    (203/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.048108877 seconds)
    (204/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.239268957 seconds)
    (205/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.968125773 seconds)
    (206/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.022660902 seconds)
    (207/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 3.728032864 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.040241117 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.227861749 seconds)
    (210/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.968134176 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.190327784 seconds)
    (212/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.04549673 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.008962744 seconds)
    (214/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.231121541 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.382117282 seconds)
    (216/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.649228305 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.665757801 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.328656359 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.031004195 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.985360699 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.211509195 seconds)
    (222/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.970056507 seconds)
    (223/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 5.410818082 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.651036683 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.293362719 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.990942877 seconds)
    (227/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.176818599 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.969621868 seconds)
    (229/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.193500001 seconds)
    (230/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.066225861 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.947962793 seconds)
    (232/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.353898717 seconds)
    (233/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.720013686 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.103946687 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.137881304 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.09831914 seconds)
    (237/309) benchmarking ("sort", BigInt, false)...
    done (took 6.967579728 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.972808978 seconds)
    (239/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.6446255 seconds)
    (240/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.968653849 seconds)
    (241/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.158148033 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.303978624 seconds)
    (243/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.107842942 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.367225167 seconds)
    (245/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.971873575 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 4.258228403 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.057595183 seconds)
    (248/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.992112332 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.598907105 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.096742624 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 8.446202766 seconds)
    (252/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.073045005 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.127377549 seconds)
    (254/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.972733432 seconds)
    (255/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.413222958 seconds)
    (256/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.165952522 seconds)
    (257/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 2.002735386 seconds)
    (258/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.047105328 seconds)
    (259/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.12257783 seconds)
    (260/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.970095437 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.369385305 seconds)
    (262/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.967571283 seconds)
    (263/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.212295513 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.182658706 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.241700682 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.237605923 seconds)
    (267/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.266765246 seconds)
    (268/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.975790787 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.05383391 seconds)
    (270/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.139585098 seconds)
    (271/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.901695132 seconds)
    (272/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.076080668 seconds)
    (273/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.987049697 seconds)
    (274/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.970098446 seconds)
    (275/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.279414459 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.261217062 seconds)
    (277/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.079818351 seconds)
    (278/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374877985 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.975141558 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.367641774 seconds)
    (281/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.999975934 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.994843882 seconds)
    (283/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.23708369 seconds)
    (284/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.787285208 seconds)
    (285/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.08396689 seconds)
    (286/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.974039825 seconds)
    (287/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.533256422 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.315404074 seconds)
    (289/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.074964225 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.891347547 seconds)
    (291/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.102078608 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.102175175 seconds)
    (293/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.443514646 seconds)
    (294/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.466374808 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.118127506 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.873333077 seconds)
    (297/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.555114566 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.002889223 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.996310508 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.868919768 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.107180024 seconds)
    (302/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.120063269 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.97395628 seconds)
    (304/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.176646994 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.321543236 seconds)
    (306/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.037737092 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.181630764 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.110779499 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.536110799 seconds)
  done (took 1042.758569125 seconds)
done (took 1044.714670889 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.00928012 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.993128282 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.976737923 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.999859222 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.091507002 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.022506891 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.990918791 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.981546656 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.028145242 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.028153274 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.976761663 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.019923897 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.97990704 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.978606782 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.978038733 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.993252823 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.28315236 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.008032905 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.997210437 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.990511206 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.997176378 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.977496381 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.028419855 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.01982186 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.984879653 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.985403889 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.983969115 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.000057405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.091946257 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.982977917 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.984325421 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.991526171 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.282024127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.006342791 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.977134242 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.999876669 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.992521933 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.992317292 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.985014235 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.014161926 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.425461014 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.985974605 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.981440189 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.980190875 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.980944546 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.98800205 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.980131097 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.989162243 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.994363435 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.99482217 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.420184884 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.002009938 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.98465751 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.980980794 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.994972991 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.982503561 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.986102863 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.996349071 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.001062727 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.995515276 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.272407349 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.01699785 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.984919981 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.999302811 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.990161941 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.456746114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.986043762 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.989616292 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.425115746 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.995644313 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.454858553 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.99734844 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.984643912 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.997180337 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.015477661 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.283890168 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.009732289 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.982432732 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.993008131 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.980769646 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.995016656 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.996875561 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.987153822 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.983675973 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.00221898 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.026514095 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.996109798 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.984379396 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.994807762 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.002462687 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.992230873 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.996653673 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.986983607 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.98146336 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.995774806 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.987751049 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.987688316 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.988078278 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.988527996 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.997836589 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.424772773 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.003439554 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.980804448 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.981009059 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.983413792 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.999491194 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.423656827 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.990662175 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.006569275 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.034221311 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.985634926 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.274443395 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.015325869 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.001354368 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.996604794 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.986530684 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.981388449 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.275093967 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.451597321 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.005403128 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.984687639 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.982028598 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.00028375 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.986734364 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.982986865 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287300123 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.014419695 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.998711399 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.110292128 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.998526429 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.017974901 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.983727148 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.989128101 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.030236061 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.00117259 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.018451536 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.987494125 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.999773668 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.003451923 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.981771995 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.997746958 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.999277255 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.985716929 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.996082595 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.982796869 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.031229981 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.998824483 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.999173392 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.006847883 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.109386219 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.983943635 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.275838604 seconds)
done (took 311.388682176 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.059872466 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.979956893 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.100928537 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.982575926 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.070258708 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.054412806 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.981892105 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.982432521 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.983423684 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.482278785 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.981332508 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.988145817 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.98192474 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.98237742 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.052598273 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.983003322 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.982478388 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.428756034 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.9848489 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.061717325 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.98154998 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.984231562 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.983952028 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.488050555 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.983812708 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.983330693 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.062294777 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.983083524 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.433586214 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.983820192 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.984038185 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.434185043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.062589703 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.01107626 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.991591177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.991128188 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.071276747 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.993477825 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.050437782 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.04997691 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.10338017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.015916089 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.982947951 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.983391603 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.986823683 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.985256677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.984159143 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.017426993 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.984601037 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.992136483 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.430839774 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.989703892 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.993159219 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.986367881 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.98507147 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.013744878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.985842778 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.986268207 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.064071314 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.986681463 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.052161535 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.487148834 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.486480473 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.985733383 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.985058714 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.986301039 seconds)
  done (took 192.967402973 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.051095026 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.059100846 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.05064439 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.990471711 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.034253677 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.053104526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.99168719 seconds)
  done (took 16.145051603 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.99257676 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.985723599 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.035092962 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.035149498 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.986639961 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.165127118 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.998073811 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.990544264 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.012950193 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98723281 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.65238336 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.034882959 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.993986418 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.985026968 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.997380427 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.041697378 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.988780526 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.987554033 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.102285846 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.135148737 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.990732829 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.993491465 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.013577829 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.998058554 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.987334901 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.987449991 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.987458887 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.994842266 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.986584938 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.987423008 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.98709783 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.038213826 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.988471062 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.988238958 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.986904504 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.987808256 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.987802438 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.987157401 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.986701636 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.986076207 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.986967108 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.987864875 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.989781248 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.987480773 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.988200121 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.011837947 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.988099056 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.987572027 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.988095128 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.988375958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.014658769 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.98847103 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.987577852 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.993284933 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.038427786 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.995649913 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.989604761 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.989892817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988734878 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.989955599 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.989467367 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.136742313 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.039511253 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.990093959 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.03944752 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.143563559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.988667999 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.989046902 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.988578915 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.077111362 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.989886074 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.038734232 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.990511694 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.103346474 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.990110478 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.169279135 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.012603176 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.993797055 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.993393159 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.988203487 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.996425644 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.989901663 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.991463993 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.99668908 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.99604043 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.990674408 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.990014683 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.991954002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.997300961 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.990545332 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.040659518 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.990143332 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.992062047 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.130909354 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.989747698 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.105903811 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.017826235 seconds)
  done (took 217.609419097 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.99814357 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.998983487 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.993537423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.006406778 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.992121968 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.990893996 seconds)
  done (took 13.901149917 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.994140239 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.994811793 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.991871951 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.991404458 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.991505018 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.993336806 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.992021706 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.993109769 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.995235015 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.993216325 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.992825049 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.99178113 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.99175575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.992136342 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.992632977 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.992159452 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.991694006 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.992737955 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.991354086 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.993085272 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.198397684 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.992792365 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.99320455 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.997200809 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.997713103 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.993321948 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.004881865 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.992060805 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.991964238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.000506842 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.997186293 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.993227675 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.995664173 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.999247292 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.997517153 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.995735344 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.996375427 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.994052469 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.993174399 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.995007988 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.994022335 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.993278666 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.993554766 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.994514644 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.995144984 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.001260926 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.998432892 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.005615825 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.993659992 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.99426372 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.995328179 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.99310072 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.99617938 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.995966559 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.000583741 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.00173343 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.999773515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.99389805 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.994766028 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.998229365 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.998778762 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.995669495 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.997482993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.998996548 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.001273212 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.996395455 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.99983004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.999878432 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.996320341 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.995872198 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.996867804 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.995779584 seconds)
  done (took 146.801419638 seconds)
done (took 589.355136738 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.922424059 seconds)
  done (took 9.846134921 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.187603556 seconds)
  done (took 9.115615942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.700859946 seconds)
  done (took 10.627958424 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.000051146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.021412358 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.004752856 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.000324476 seconds)
  done (took 29.961779212 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.018776151 seconds)
  done (took 8.943807491 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.005832925 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.99424316 seconds)
  done (took 15.959509726 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.005038261 seconds)
  done (took 8.931419292 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.455473266 seconds)
  done (took 9.401264802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.015533526 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.996721659 seconds)
  done (took 15.957673597 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.996803042 seconds)
  done (took 8.921864368 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.638361342 seconds)
  done (took 10.64726639 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.007760871 seconds)
  done (took 8.981203541 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.06987374 seconds)
  done (took 8.995739996 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.036897542 seconds)
  done (took 8.962002339 seconds)
done (took 167.179595912 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 7.00376922 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.998704562 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.995762847 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.998824865 seconds)
  done (took 29.922355022 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.031582044 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.031774471 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.039739483 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.030782465 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.021136461 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.021568881 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.031897859 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.032056734 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.021760202 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.028495067 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.031822779 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.029903129 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.030754693 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.040518448 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.040218943 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.028943468 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.032725915 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.033126672 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.022557108 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.040059664 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.029620307 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.030658793 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.997602682 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.996383452 seconds)
  done (took 50.60226439 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.187553468 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.069246417 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.152253347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.050644385 seconds)
  done (took 10.386632609 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.99782522 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.061842442 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.049311559 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.044800419 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.04935731 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.099753175 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.051003266 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.134367267 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.125667373 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.125201935 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 2.005839095 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.019252799 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.023503476 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.045887476 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.104070427 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.998701491 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.99853016 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.114367376 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.060717705 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.178448437 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.998576439 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.053314307 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.049679556 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.052588414 seconds)
  done (took 51.370812044 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 2.000101253 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 2.007219624 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 2.006722804 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.998784867 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 2.000490144 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 2.000332629 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 2.006357971 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 2.000723792 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.021723518 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 2.000673563 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.999510193 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 2.000140841 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 2.006488876 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 2.000344445 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 2.000321314 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.014115005 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.015428963 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 2.000522004 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 2.004475867 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 2.007090772 seconds)
  done (took 42.020964309 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.998388165 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.845571586 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.343946916 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.250570134 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.998094904 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 7.002091806 seconds)
  done (took 32.369094266 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 2.012826145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 2.007245031 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 2.000214575 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.057643401 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.1406794 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 2.006447986 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 2.000831147 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 2.011469698 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.045649966 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.066143803 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.02237497 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.028982769 seconds)
  done (took 26.330236904 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 7.001988116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 7.004298154 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 7.004762648 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.015131886 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 2.011332467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 2.007911263 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 2.008898376 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 7.000440136 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.01601926 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.018951406 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 2.0094345 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 2.012834012 seconds)
  done (took 46.046290217 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.70598546 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07614574 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.000516279 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.877033207 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.457831203 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.544889594 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.894681307 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.665883788 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.471134189 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.926920935 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204732553 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 7.000148478 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.085710257 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 2.002776178 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.271733154 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.302915538 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181725188 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245308758 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758386733 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.036753323 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.202957858 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.208109783 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.284241589 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.00285287 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005401228 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 7.003880009 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.53245652 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.709850105 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037423676 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.423160983 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.249669643 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.952011621 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057612176 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 7.004301341 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.014666784 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004876593 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007197389 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.274088338 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.008529419 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136789046 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076525046 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250280469 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00708354 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.424448204 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.707780807 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.2400652 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.107920121 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00218689 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005360623 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002652969 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.928741626 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085650704 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.007274336 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008828453 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.703598425 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.00481332 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078504008 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.003979155 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.206166436 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.810710306 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.691336962 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.00578005 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006690729 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.579713881 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051547179 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.117883617 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.677495918 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383723755 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.417952187 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.100372279 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.005547876 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004162137 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.241658093 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.973411615 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.730194204 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042673388 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140890919 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.020425323 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.64310179 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294803457 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.384106605 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.554951557 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.92280523 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270707883 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.807040497 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99711759 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221878027 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.832737271 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.930970146 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209725124 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031287408 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007465779 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275546787 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.67182605 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.11617377 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.017460348 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.442045766 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021546045 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01116053 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008226342 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.219840789 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.506854597 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041106265 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126908964 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022577049 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088433571 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931868991 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.01879078 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.008006101 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.911030589 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006004103 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.006713378 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.052523943 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.786887643 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.052211308 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.94556455 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010440576 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.065373237 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047403617 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.954973308 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243496971 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.29677487 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.663246727 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.030290419 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.138107052 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.331234696 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225586544 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013643454 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.222534391 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535107248 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.362880448 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042121299 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299709519 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.063456999 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.295756861 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433422859 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0853 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.746549516 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.809013632 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.225204703 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023751983 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 7.009065392 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011368651 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012993201 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942586924 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.659480681 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.331644485 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.16206849 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.223274698 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.451813543 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.993837414 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.008621526 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314447545 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145274878 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.99613052 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.654316206 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.51087276 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.787484154 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.035368451 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255403444 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295397933 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.975591445 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023640349 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085334636 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025354848 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.020329878 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.323369647 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.360119804 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.011252904 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.011522952 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95818723 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.017930434 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.011814736 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544345519 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980866262 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.011590537 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.02165881 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.884885922 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083975826 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01354452 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013521172 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.551819331 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516173794 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.015250774 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.681376736 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.016001608 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086489268 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284541452 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.323680932 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12652082 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.71101971 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.376307599 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.11013607 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.711201942 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.938080567 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.01178222 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.949282729 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013860077 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.017973903 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017069061 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.197675917 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.28112734 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307727216 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.464710707 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.070187813 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214636113 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.685308968 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965944223 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.01268259 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017176236 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.014809112 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011860288 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.526702182 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.311058839 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.068087998 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040982117 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017419008 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141773133 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.023513762 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.93898697 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.014707894 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.015959322 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.54794661 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.044283871 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.967045704 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.2670958 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.842899883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134680882 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06417874 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.026736795 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.020437679 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.683445411 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.055453309 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944898423 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.572613109 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054217378 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.744763255 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.505900326 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.602390803 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300649409 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.325217593 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.334210583 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.081048401 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.229348254 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.100418571 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.071013383 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.107889568 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.95642203 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.941822912 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.662331019 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336160011 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283926117 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024760458 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233617887 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687105354 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.245803528 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04677645 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.799516164 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320854849 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989638274 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032995356 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.453661306 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.126915337 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.098595517 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020043204 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968098986 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357627374 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.051655303 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.717425585 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.031964325 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369287263 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.543365003 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.089483171 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.327125848 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.218110606 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.020717234 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363980209 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309120966 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059225833 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024010422 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.011263544 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.233682106 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598293797 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.888180011 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024424219 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.268236977 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309861158 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.918837706 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.021192356 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265749419 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280115459 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020287512 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.317023985 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366116453 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.118242262 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078409214 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245789168 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.800737184 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324660019 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.574138756 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.507087564 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.024173962 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.947230727 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.719508947 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.222299472 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.026943636 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983399463 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223204694 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248051726 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.704165062 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240968013 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.263339046 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.031643015 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291424483 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08815056 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.117483079 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.271240092 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.422432144 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260712504 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.247418993 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560296459 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.237592234 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473977634 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.180513303 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.023003971 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.226253119 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241005843 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.235853796 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.342889312 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179221004 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.730802413 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.026380228 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.228257599 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30970536 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07983021 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.339217388 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.180802529 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.106737594 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027957652 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086053666 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.027736621 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031641472 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.341165684 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.53697537 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.035855059 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100907965 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.084140444 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.532248676 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.025891456 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.027703531 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292175045 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371732533 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347907836 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001961413 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.022974753 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029892361 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150847771 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.94893995 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027091463 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293634536 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.0252072 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.525096877 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.173533683 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041263372 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.278315069 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.399025742 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797518794 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.989241573 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028709483 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229408008 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309825779 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.297117861 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139718643 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.295044732 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.362833816 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.05011429 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.34511887 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253296207 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026694618 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.897784979 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026602358 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.153907893 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.219867583 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294416153 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.526437055 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.711434225 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291967801 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.894956612 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027120825 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.744568378 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295888819 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.29338327 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.071850925 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09004297 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029900654 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.56378073 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.747813589 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157164061 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.894379179 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951621585 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.063166705 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245928562 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.26842088 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.735311752 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.029039824 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.296298885 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323185046 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292073712 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.071656412 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.895642987 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241037397 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028338443 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.031307371 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.298991908 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232107386 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263630212 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029328367 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.034735198 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.833174974 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952447159 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.027507467 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08042864 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.252290081 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046738692 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.540668103 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.72653236 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29658718 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068258417 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.030632708 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.292230376 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.538187561 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.575200829 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032882914 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230512953 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.050059076 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.322939386 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.029247621 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.560023172 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332417924 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.028726672 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.655629552 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.27429283 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.293656508 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958697971 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037358481 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241109995 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.899020695 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.028466975 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.017566858 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.559783172 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261671697 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.763796628 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584978052 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.030536158 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.030617722 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.562060228 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061608293 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.567520642 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.060975815 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046187744 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549766246 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.722164612 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.313507999 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.271732974 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.656211029 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.641880812 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.028894142 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.030477818 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.029939702 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947426412 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379957024 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.214847502 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301268853 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05586272 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.574340212 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065432715 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.342295392 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133520878 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277519711 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069651011 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550792431 seconds)
  done (took 1729.851270431 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.138503898 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.054584278 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.059824906 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.058412954 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.100995323 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.084622691 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.209560655 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0985427 seconds)
  done (took 58.766499289 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.029722811 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.064044346 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.034633479 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.031466429 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.067663654 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.03060161 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.186811106 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.041275518 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.035751899 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.034836557 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.03172083 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.031499848 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.312248775 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.051044016 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.031459322 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.035047014 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.040425357 seconds)
  done (took 77.085713899 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.031965145 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.288518257 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.094743839 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.031177334 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.00727003 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.040823645 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.121012304 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.084189881 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.037246593 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.268636641 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.333621408 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.056796414 seconds)
  done (took 92.356695826 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.036401063 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.032845034 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.033697751 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.032829062 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.032682797 seconds)
  done (took 12.133507944 seconds)
done (took 2261.239749687 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.45083302 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.090438401 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.130453924 seconds)
  done (took 6.181922526 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.179185306 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.225098567 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.338037452 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.09794169 seconds)
  done (took 10.807152598 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.332547125 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.426819433 seconds)
  done (took 6.71989035 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.391578864 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.03847675 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.405083843 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.035612947 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.036741606 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.039577196 seconds)
  done (took 23.077888296 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.034016386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.034921928 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.034629531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.035020493 seconds)
  done (took 10.101009143 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.033297344 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.741977152 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.033144573 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.048191489 seconds)
  done (took 21.818211917 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.180989086 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.14942824 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.175631809 seconds)
  done (took 8.467519521 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.176090846 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.871260737 seconds)
  done (took 7.00883878 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.18562625 seconds)
  done (took 4.148271279 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.063098378 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.305531679 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.527188353 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.542036401 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.669841536 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.806264065 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.343446947 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.270008073 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.439885807 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.452967849 seconds)
  done (took 26.383045495 seconds)
done (took 140.963429524 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.3876098 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.052798955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.237912849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.405099852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.262625378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.24032463 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.258390465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.397460774 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.079421801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.066159999 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.404301732 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.261489661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.205275837 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.048371641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.203674855 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.045881537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.25933826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.410270397 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.087086639 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.304129715 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.263159329 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.04954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.24930401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.068390796 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.263118048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.192295492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.597263594 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.049475821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.238203656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.609025882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.192257982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.448926512 seconds)
  done (took 173.801855277 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.03638914 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.037385981 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.036398772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.037321548 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.591309469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.037335645 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.037115716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.037036268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.510195129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.498485364 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.036958225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.57561415 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.03650263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.037307401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.040466768 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.037795871 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.680507879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.037417462 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.036843691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.037886057 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038205178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.409622973 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.039052289 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.43270229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.663301283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.038379751 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.038519172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.037978066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.038880636 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.040908875 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.039091829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.037661133 seconds)
  done (took 215.236747147 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.038861488 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.039811697 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.038324148 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.040005445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.03944474 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.041470133 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.04181269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.038920739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.873468646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.860182746 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.037842301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.039201054 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.041079733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.040173661 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.042347008 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.039691898 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.041979718 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.042940618 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.044255026 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.045957427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.045908379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.733668011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.044822712 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.737937904 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.043784724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.043965011 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.039293436 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.040109574 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.040068049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.039946551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.042219823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.04199976 seconds)
  done (took 226.32985532 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.280141093 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.041295438 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.043037279 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.029823076 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.042636495 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.041624742 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.016870763 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.287183127 seconds)
  done (took 20.751313269 seconds)
done (took 638.096886676 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.416552294 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.246362428 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.212972056 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.063637903 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.30764688 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.106178561 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.059524203 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.124124508 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.896913608 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.132750672 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.717755973 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.082407924 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.808812323 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.086008309 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.183545844 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.120744436 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.605873368 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.711828561 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.200986436 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.130274359 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.238167988 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.007544264 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.136400254 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.945892387 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.737099395 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.050410922 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.097247536 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.608731641 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.072748453 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.219771553 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.738254903 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.359464444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.074762846 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.061558741 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.114465674 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.094438275 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.285481519 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.071327219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.188244963 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.801825478 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.132014651 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.803554563 seconds)
  done (took 110.025003714 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.051366581 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.047638588 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.048195729 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.048193688 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.057479698 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.049027947 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.049171291 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.049153039 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.048654476 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.049823575 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.049350971 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.058943711 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.048731257 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.058154905 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.049887941 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.04887567 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.049834014 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.059300557 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.049736971 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.049162094 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.049004831 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.049821637 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.046527985 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.049945142 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.049569457 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.049522965 seconds)
  done (took 55.298821771 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.044976694 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.194967435 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.292264419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.063846325 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.045736612 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.048897647 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.062955229 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.050515853 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.049292866 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.048498943 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.136877347 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.054960969 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.063566897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.292384282 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.061386067 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.047186938 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.047153767 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.047119237 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.203260204 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.064278612 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.064925022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.051239328 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.06457731 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.060169096 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.048980935 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.048612645 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.050394558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.521569874 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.055236824 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.136429228 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.09021386 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.069521571 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.465398621 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.300922508 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.100771727 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.054918962 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.047494187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.141966649 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.053975352 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.047411835 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.064624103 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.052128091 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.29463098 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.56309342 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.06134752 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.046979809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.529793661 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.150310613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.088945942 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.059938959 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.299487786 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.064785699 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.049260038 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.050369175 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.086389794 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.061412645 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.049288294 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.407021902 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.060871818 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.06537429 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.053397604 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.049967742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.212260668 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.058167502 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.200453533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.057814683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.056115373 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.049685894 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.297139355 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.063570667 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.579651528 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.062350572 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.050022835 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.138421048 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.205631575 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.556378229 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.061877876 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.215134352 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.483873555 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.073957137 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.060063235 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.513265319 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.074978392 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.057843454 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.052292484 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.051773015 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.049866452 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.095261936 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.064664856 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.486956907 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.572536824 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.426060142 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.074561623 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.062314761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.050839858 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.405128926 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.056916576 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.050713019 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.289570918 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.586653172 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.065114886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.05789651 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.556836206 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.065530874 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.069781601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.061613231 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.305988995 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.066149324 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.095098268 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.05096201 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.057491797 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.053995464 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.069550148 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.057955952 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.051144321 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.54504221 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.156225542 seconds)
  done (took 253.472442326 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.052904688 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.050838268 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.049256939 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.051048661 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.049309242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.051938164 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.049487513 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.048116058 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.053390013 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.050505632 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.051413187 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.049792972 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.053234841 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.049558332 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.560267421 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.055153211 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.656195411 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.053803732 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.053452628 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.053522535 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.738288847 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.057688543 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.053654994 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.054750103 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.055190355 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.055992462 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.06260692 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.107410537 seconds)
  done (took 173.309780062 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.05591021 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.239137958 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.078276969 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.086752636 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.063435149 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.056655556 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.200440358 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.077077262 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.060958264 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.05576986 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.055776296 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.116267311 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.067640201 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.154749742 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.086757064 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.163017815 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.159709665 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.062069517 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.057450755 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.057064824 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.084774888 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.065446641 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.115766256 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.18010417 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.076493405 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.170107301 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.078162837 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.056921201 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.056393134 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.169688613 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.079367779 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.118381231 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.087436774 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.075384093 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.175885623 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.175168971 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.161458305 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.161638707 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.063223739 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.056579276 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.058638481 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.059394169 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.169821977 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.079232666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.058933523 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.173532853 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.081550052 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.058886132 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.057756113 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.057911924 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.071724349 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.075375252 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.121394394 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.189215617 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.097538187 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.08090451 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.157338627 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.183246568 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.058648367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.155723559 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.065144513 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.170970361 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.084081682 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.059239272 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.060494016 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.061549 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.087472775 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.165180304 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.162590856 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.066136585 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.157424402 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.095051462 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.066916762 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.060587321 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.059462155 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.173610189 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.181797998 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.094632741 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.096472816 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.090210005 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.068867987 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.059736536 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.060529392 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.077477366 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.064729889 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.174383373 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.181338941 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.066099117 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.06005033 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.063090667 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.061233856 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.085064895 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.180410295 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.099188171 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.167220813 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.125175863 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.13765498 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.078667909 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.074340859 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.06580551 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.122714494 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.079820582 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.072717654 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.361361414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.120094086 seconds)
  done (took 222.962777374 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471912215 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.107539209 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.116735675 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.391162521 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.43140867 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 4.00064471 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.109141541 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.109960002 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.142245246 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.331635406 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.188249255 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.126627312 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.096981165 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.082226117 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.108376586 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.142455145 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.128926014 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.457161651 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.323092431 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.602953475 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.102194095 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.381209534 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.434582054 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.695279986 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.161142978 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.528715265 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.737610635 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.274392892 seconds)
  done (took 68.77905796 seconds)
done (took 885.819066037 seconds)
SAVING RESULT...
DONE!
