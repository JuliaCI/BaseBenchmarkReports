cset: moving following pidspec: 6644
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.301047048 seconds)
loading group "string"... done (took 0.559570455 seconds)
loading group "linalg"... done (took 7.60543679 seconds)
loading group "parallel"... done (took 0.171534387 seconds)
loading group "find"... done (took 1.175714144 seconds)
loading group "tuple"... done (took 2.081687771 seconds)
loading group "dates"... done (took 1.313867629 seconds)
loading group "micro"... done (took 0.243390889 seconds)
loading group "io"... done (took 0.968352802 seconds)
loading group "scalar"... done (took 40.65600678 seconds)
loading group "sparse"... done (took 13.468544906 seconds)
loading group "broadcast"... done (took 1.035537235 seconds)
loading group "union"... done (took 14.291135652 seconds)
loading group "simd"... done (took 4.774321637 seconds)
loading group "random"... done (took 9.663094675 seconds)
loading group "problem"... done (took 2.010512581 seconds)
loading group "array"... done (took 22.66359661 seconds)
loading group "misc"... done (took 2.035951429 seconds)
loading group "sort"... done (took 3.452168305 seconds)
loading group "collection"... done (took 19.580531816 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573310166 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142116967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149463909 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130288798 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204457838 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156543065 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158082125 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098434962 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.96152525 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175007701 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153108024 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525835785 seconds)
done (took 5.162503585 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.221851649 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095014577 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103919369 seconds)
  done (took 0.880550627 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077282773 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145689919 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094957542 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078410318 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094439576 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078153335 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094397856 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077747342 seconds)
  done (took 1.350296708 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086916692 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096967591 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081567077 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097044165 seconds)
  done (took 1.048589684 seconds)
done (took 4.2677852 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73417401 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276230267 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.206102137 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463462192 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196072199 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217183783 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677095438 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344534581 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254336721 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099989724 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.144840981 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386669332 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137075245 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.678624752 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089815792 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124373403 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176631667 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451770361 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083119036 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109577293 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117087678 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142240429 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.13036228 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090515469 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184088897 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081788157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193162107 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108433042 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08053548 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27465974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201347147 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687466132 seconds)
  done (took 10.866553223 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110527839 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134136261 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097504721 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138179423 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135469579 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100136054 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084214255 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096262171 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121563406 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177801553 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114148922 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135825106 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09474541 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082559674 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11569858 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244030809 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11903275 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100097364 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100029759 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087877441 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137741574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112064497 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108448793 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093920917 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165968385 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222064653 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112849927 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126565265 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096767004 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111739187 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142862289 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14241076 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094416221 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080191303 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171942447 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124055046 seconds)
  done (took 5.131337927 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.078354278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189512745 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120264082 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170274435 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080358822 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142340949 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09499953 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11347131 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256261431 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.114326644 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17387569 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140832169 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100005972 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096564752 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082989129 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096379932 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550539719 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156919242 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134349796 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096650601 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108528889 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099851644 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363109612 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087309488 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096037338 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081302967 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08266987 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160550827 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08069574 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.13958893 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123085336 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100470292 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131903924 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.198195588 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.155268689 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125332656 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117792892 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098630569 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096377568 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175088903 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087603564 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096760089 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102768603 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135269036 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132844265 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097907672 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.081101392 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218250345 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080020058 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113374539 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.928178519 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182537425 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091367518 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096658798 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324250945 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098475581 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101712359 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077851988 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290510892 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189781047 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094677178 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080542198 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097280987 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078391795 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098215057 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386061156 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100201319 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.846162029 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084042367 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106590397 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083406575 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096356784 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103284155 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087055662 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115010427 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079247384 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099321271 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07860769 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096416124 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080688729 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107156932 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10138228 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080910285 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163511215 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078456865 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115233315 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128278421 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082354619 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095399411 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130081458 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082836147 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096688579 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133829701 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08085436 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107957022 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099807768 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142277405 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080603289 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093773605 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156351618 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083098641 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124249391 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099030415 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11435607 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1123226 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09895956 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085392689 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094436478 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076992317 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096103948 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148226728 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095571576 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080807353 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098763365 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109216576 seconds)
  done (took 22.464337161 seconds)
done (took 40.221972495 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323931616 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102781156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102700327 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102570944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100817577 seconds)
  done (took 1.493533061 seconds)
done (took 2.224279105 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.286248424 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174095385 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095606724 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165722806 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093527163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171643636 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161588726 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111829164 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200674157 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094390796 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.160697643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093353189 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077452583 seconds)
  done (took 2.645536002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094197834 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114180421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082258555 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110650548 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076272458 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110270388 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092584189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115795052 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108934428 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085972015 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092605654 seconds)
  done (took 1.81542213 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093624787 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112088413 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082418599 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109872177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076231404 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110444985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092258747 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115989175 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109182108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085927857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093895536 seconds)
  done (took 1.81141191 seconds)
done (took 6.991945239 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09083207 seconds)
  done (took 0.816467741 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.920071766 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.875251897 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11252059 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150189247 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316915775 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192033366 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.474497757 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124722814 seconds)
  done (took 11.08297068 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.144942713 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.084757137 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100134683 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084072449 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103214051 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085059399 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099132964 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099045211 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086089617 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099816492 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082573441 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101732745 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101165809 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084482245 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098779852 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082355578 seconds)
  done (took 2.330805255 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119277114 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117180905 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105725487 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.107395578 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08547102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104040649 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105829499 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088542924 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101095449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102804517 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089960408 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104999565 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103361387 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080106652 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105617376 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10708605 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085169338 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106188775 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105622474 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090397841 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106496559 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095547732 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086324377 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105922092 seconds)
  done (took 3.249350058 seconds)
done (took 18.207089663 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157208287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108974091 seconds)
  done (took 1.000167336 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094588336 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112531856 seconds)
  done (took 0.945118485 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096854841 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095779169 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120828686 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108398143 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080079674 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097208959 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119602782 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080126516 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096685825 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080479898 seconds)
  done (took 1.717385028 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082652153 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109412296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100358508 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095217179 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105727143 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094831125 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088000958 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099112615 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109332389 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076669238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.101342736 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11365565 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084743452 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116804801 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105355783 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083111323 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102147405 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098887516 seconds)
  done (took 2.511688348 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079590553 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096823631 seconds)
  done (took 0.919634219 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080899921 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093897322 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081218973 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096727104 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094103763 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077101739 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094217686 seconds)
  done (took 1.360569745 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482405842 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135991598 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258978534 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084298046 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119259897 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301686648 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098171919 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084759752 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10313704 seconds)
  done (took 2.468689435 seconds)
done (took 11.659170196 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.09314782 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116132722 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112308564 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462842637 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106646545 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.098484024 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14764585 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248879082 seconds)
done (took 2.13169606 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142706726 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.59894863 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.424513876 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.229413087 seconds)
  done (took 2.005397042 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402383105 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098255392 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082266473 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081106949 seconds)
  done (took 1.416694047 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079623894 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099233528 seconds)
  done (took 0.93314346 seconds)
done (took 5.24902068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080837145 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131454985 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080487513 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097148191 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080519809 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09592342 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078105737 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.099177497 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080400872 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094351842 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096550099 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08086633 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096832622 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077255566 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094105853 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078055189 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096346915 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07842704 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095008478 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078159573 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096821173 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078247345 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094671777 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081824044 seconds)
  done (took 2.92916992 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099342889 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098765846 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103418962 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085114415 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102502305 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086264829 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10181372 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097633531 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086144248 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098986169 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084735781 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.101082797 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099531243 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08478267 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10044234 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100935467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086747518 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097890302 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083517826 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102343318 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102482783 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081470351 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102224364 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086054478 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102114174 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101725941 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082524407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098885377 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102959911 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085592101 seconds)
  done (took 3.604921242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08574983 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09442962 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079421537 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101633555 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077631433 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096983126 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077174334 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096079316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078898986 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094715919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079525087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094900341 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077563178 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096579123 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078734875 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098336131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10721581 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078846015 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095375739 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078848599 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098427778 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078070941 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095253183 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077776507 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096636533 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077650331 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095788132 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078528531 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095854028 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078083923 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098707793 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08112001 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09669783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084772735 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099135748 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077670204 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098809881 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07810252 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096233413 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077978395 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.095274593 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095539036 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078485743 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102293572 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078102362 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097374294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078509322 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09705036 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079887508 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098660333 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077678795 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095513393 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080277388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097096979 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082968798 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094968894 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080062338 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095149491 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096308424 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078473477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095418802 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079483763 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098193305 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078785501 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.11182271 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086537769 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096616061 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080322202 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09734705 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081082675 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098899382 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092492916 seconds)
  done (took 7.167493364 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084017057 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10729291 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079970903 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098707177 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07641525 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09667383 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099216254 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078948163 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097748207 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085600161 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097466353 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079774092 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09832752 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108261151 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079439511 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098022571 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085269505 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094384231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078488244 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099934847 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079106866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100355941 seconds)
  done (took 2.769329605 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209652985 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106564783 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142475078 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108255728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083166591 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107347898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10285107 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086944416 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103392188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085557467 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101098422 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102817563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083844627 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10149254 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101496545 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08570571 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103063967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085088916 seconds)
  done (took 2.667478572 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093477774 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.210324163 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102332301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098308627 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099018557 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083609254 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104606275 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107856406 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083856198 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099193136 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09060912 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101388115 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100646828 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081612981 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101402155 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08114115 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.101983568 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082183544 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107132263 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104848701 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087950859 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108908832 seconds)
  done (took 3.001343585 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097408926 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10180065 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119367222 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084012014 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095913937 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080190935 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106843469 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082117275 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108290381 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101084611 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082229022 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09715231 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088468548 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098655616 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104032982 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081825239 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100822973 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081031169 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101045638 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077371185 seconds)
  done (took 2.65587605 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102272387 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100603473 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099253471 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09181106 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100592803 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081559845 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109674829 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100097735 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082431698 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125420053 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10023353 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082884086 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109240375 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105983092 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09995497 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091494238 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109316227 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108988387 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083260675 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100906283 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125207238 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082996997 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110068529 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100657713 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082598693 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100735884 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099806953 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088390395 seconds)
  done (took 3.545068125 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081027123 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099651146 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081235938 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097556482 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07962907 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096880751 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078172495 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096293567 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081063703 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096246566 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080468371 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098642886 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080940602 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098712367 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081324462 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0987327 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080235349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096711632 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078944897 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09659433 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080998906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098721509 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081249681 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096788294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078700014 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099791358 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078366015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096693293 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080960083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097393025 seconds)
  done (took 3.439614994 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090416216 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107340707 seconds)
  done (took 0.96791582 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078554383 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115727204 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078686589 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103173086 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085879104 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099995262 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107719268 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085918706 seconds)
  done (took 1.525471473 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096156284 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110732383 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083164334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112845378 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110227012 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099220031 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171293236 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.101307934 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08738912 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09823554 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113298756 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081532815 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105523202 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081767924 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105835386 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087876603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098845848 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105872239 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084553911 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098727887 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083574886 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108471099 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086901712 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096176292 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101431059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09130657 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112842054 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083898873 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10337272 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10730795 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0875194 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093969849 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082045662 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101504064 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080263999 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109453446 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117076872 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08525389 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110370703 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08320222 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110533769 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095964475 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086921205 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.1063002 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092649719 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100513233 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1012899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077491677 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097185839 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08504337 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095501884 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082241122 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095235356 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090095469 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103140737 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110961715 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081188336 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101403607 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084290855 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103784816 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088821441 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101931155 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102302683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081784564 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107136469 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086005829 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110310814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077122741 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094427377 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080058181 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.1094132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123761714 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088519838 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100921334 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101081998 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080351269 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104585431 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083413114 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105844353 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0888448 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100446367 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107401603 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089775602 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100629363 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084151502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108291382 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098693613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084122916 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097932463 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118130778 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080733848 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098117134 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079933573 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111471229 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085398404 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100481534 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079551545 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107496395 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075895846 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100759435 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101703836 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082271017 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112828823 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10634417 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08802203 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110772593 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090455035 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100781573 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103577489 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079176419 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101880343 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084367086 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10807761 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076287941 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103265435 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083328724 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102082999 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109137361 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080207282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101280762 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089897902 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106746179 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080882484 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097182267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084927163 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100056868 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104435141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090276195 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099731966 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077369532 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095318856 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085547409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100895518 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104186099 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087744478 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103797944 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076278295 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099430958 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105634441 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09124571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101688394 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083024244 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106804279 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083627382 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099070966 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106946623 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084167111 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099097283 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088065909 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101456957 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077383655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104211997 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103486206 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081291619 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104129044 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086378196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102949962 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084315889 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099553562 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.106669816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084548915 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099564377 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08226863 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099813782 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092765621 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102532492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077645504 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097639514 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108517251 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080400402 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101102207 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081677727 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103619513 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083696173 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099141665 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082238381 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10253002 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113685741 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087239822 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102284263 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106216238 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093921173 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100970072 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.085000648 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100424264 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083514664 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102256585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11015134 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088380002 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10670192 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084505774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097648179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107045053 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09076483 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.100134106 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080708308 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100547067 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086043315 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106809202 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105274912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084158939 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099707093 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08327969 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105819791 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085887683 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100811832 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081506673 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10649014 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100138558 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089448947 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102364619 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111460167 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086388387 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095974431 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087293982 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099874947 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08816138 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095799555 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080268486 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100257394 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102261764 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081508009 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103481517 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076635988 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108222235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090726166 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101917006 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081714953 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101298283 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10778229 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084320452 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105811504 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085999664 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107535589 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111967265 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.082004458 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10502312 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093230356 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101878031 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076053748 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107480421 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080921475 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101180908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099535314 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080603638 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103375701 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091370131 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110266858 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094536591 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085533036 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099489178 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081864321 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096770379 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087531744 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104318091 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083571991 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107616391 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102496216 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086446155 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104903918 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.082949149 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102962975 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084587095 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104435684 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10219111 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085662686 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10020011 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086870175 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101163387 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080409683 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103606029 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083528634 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101315261 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107558995 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082572588 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101595091 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085971146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.1023847 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084218958 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102938815 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08197342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104040163 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083447681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10142616 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103602905 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078140703 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109210746 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082699014 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110057785 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082309921 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098448954 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10767191 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085532375 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107732116 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083691003 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102337045 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083430329 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101750904 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104025759 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09054906 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09949346 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094460542 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110787509 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101698757 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085471195 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101253886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084519058 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100929405 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083831268 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.10313746 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082933718 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101147653 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106410755 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085631622 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101691113 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085443087 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102805534 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08321054 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104145712 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077864925 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101587154 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083173065 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10200769 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113474721 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084207755 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10505214 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.080928217 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103132332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082136048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099082155 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109833543 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092425704 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.10263066 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109462239 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082358547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103256921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094958664 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095860053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081399807 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100569866 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080624902 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110465773 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10296658 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100966247 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101620486 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081936292 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098786773 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084406074 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100014891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077659779 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.1000843 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105210297 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085795757 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100093127 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083469493 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105265534 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083969221 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112624348 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101750632 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084319658 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102595618 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080594559 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100552409 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081953723 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10494022 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084649268 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099971595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079935164 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101795804 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.08408731 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.102982745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101775796 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085412923 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108852034 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083318693 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105217353 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086822463 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096181721 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105545312 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08317638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102294943 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082739938 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.1055762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086847793 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104275547 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111261755 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083531542 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102468048 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083416384 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100482639 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082797137 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103313214 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.08363786 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102089884 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103455882 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091094678 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100825595 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086281109 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102466547 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083419592 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.109648151 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103211088 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086409443 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111171482 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.08690999 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103822385 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109777633 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087376009 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106240453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084398077 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104801629 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089535092 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101219217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108514637 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083542737 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10412781 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085053062 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100302518 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083630809 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103818947 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081940623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.10967679 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10341076 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082507411 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101535037 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082265868 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103345323 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087515288 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11019093 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104855202 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086856186 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097990181 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08099335 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103955463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080807052 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104648212 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087399236 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108663309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085287591 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103219594 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101920459 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093001873 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108640983 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087462989 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100275056 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088113851 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104103961 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104331192 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084324847 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102369776 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084823219 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107437393 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084754248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101975501 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109970209 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086964412 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104532675 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084809996 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103518793 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084249072 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097795895 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08420062 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104463599 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107600522 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086143935 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103398585 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094729625 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102343186 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083134789 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106817311 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102031232 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088222059 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098484048 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084950343 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105101276 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084828398 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098555337 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082312127 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10066091 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105401311 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083052015 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097592037 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094970967 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111517488 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086086095 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102117802 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101176499 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079271671 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098321652 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083444026 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104886402 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085139301 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113657456 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082463051 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102171779 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097683465 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083442082 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1054311 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087204312 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100796927 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079376343 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101905429 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086815258 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108960504 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082135635 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102997536 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106027638 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085886457 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.10124538 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087190198 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100675231 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087775795 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116918703 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104501384 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083862705 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110162675 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090815568 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104186843 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098578978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084691969 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106191289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084054169 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104798898 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084237516 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119401265 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106837182 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.082451004 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102341148 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086631865 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102426576 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111225355 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085570035 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08900582 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104991816 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09386298 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106060179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111368674 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086717417 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106157447 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082258307 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103407767 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082059563 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102164941 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104482497 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085503511 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108462015 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091838401 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102084427 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113507132 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093567898 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108673189 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.081182896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102153277 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083297826 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098883766 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105896776 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082637357 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100987266 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.08287081 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10212315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084615182 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109295822 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085089448 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104367987 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.08398419 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097393658 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084901343 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.10608642 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103281003 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081193956 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102797754 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085441154 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107638314 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08747889 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103815099 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084213776 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10453594 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103318873 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079565673 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11034477 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083637444 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106507584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082905684 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103611001 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085727884 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107085038 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108959018 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085853522 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105973716 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095533945 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106193197 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100739039 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081203546 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107972695 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081999875 seconds)
  done (took 57.902367626 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146564649 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080916499 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098269862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07939315 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113465517 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099919186 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079032669 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099727424 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081347677 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102736825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078948464 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098827584 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109414363 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124517941 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093540328 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10374935 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079809815 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099800563 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098544832 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080608293 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109229341 seconds)
  done (took 2.882587624 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104261611 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117750403 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115181559 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119128233 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090485372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115394883 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115208524 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115533418 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09879138 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111867743 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119682612 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115605934 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091422361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111611939 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111029163 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093275074 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11875091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110407483 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116831135 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095737249 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113029059 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115447856 seconds)
  done (took 3.235856573 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084073218 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103014877 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085145527 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097665332 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083369536 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098934436 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08813956 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101070076 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086210454 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102270112 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082069517 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101802083 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10441977 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.078377422 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101957995 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081420188 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152197704 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108493211 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082720035 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105052952 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.079185755 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105928082 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09850598 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079459915 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101565768 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087242085 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104386141 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081856225 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103285051 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082395837 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103235997 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.08187583 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104653479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102156813 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082855089 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101033986 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083295318 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103123254 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078777436 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101575117 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084274252 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099123662 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083562774 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105273181 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081663471 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101671913 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084822768 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102785379 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078254847 seconds)
  done (took 5.438683763 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.103590035 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162294913 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085776244 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142445693 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122298342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112943674 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087827511 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142074934 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102948011 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083088244 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123545107 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121247628 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103930406 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090065944 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107230891 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103725328 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086275145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102988616 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087734082 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103640672 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108404938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091188466 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119675136 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118366912 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108029897 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083414811 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103601928 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088101261 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118179124 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110063548 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108519959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090463521 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120619438 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11012859 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083724979 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106981655 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121985179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084646627 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106964173 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101510992 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086529715 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109394991 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110213154 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101555864 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104661292 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1090065 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084727835 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100875486 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117959088 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087622895 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113320185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.1206909 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08790432 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105170041 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109281738 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100860839 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103951314 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102686822 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087645502 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118511311 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101680811 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088720127 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119612876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106537671 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091989166 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119744267 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109477957 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108955482 seconds)
  done (took 8.138822148 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094065633 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111192112 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120067406 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121245712 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092070755 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111369643 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110004825 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090265121 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110900879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117010057 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111150234 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133485025 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085920917 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114568266 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110484112 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091572731 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111364321 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110932907 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091015848 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110941282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111366665 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120204127 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09090082 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120711954 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142084541 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106024947 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090926365 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111393168 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120824413 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111328218 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123987581 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090849514 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11105084 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121328065 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123781867 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090568192 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104083222 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110659046 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090707699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111022868 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106068918 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100630661 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11108592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105414059 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091287796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111812899 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120610762 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123180589 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114392809 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095984554 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111430088 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121167284 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111271062 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090297514 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120068988 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121192518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120912166 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110950502 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100144644 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120562996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129000818 seconds)
  done (took 7.668484828 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106869059 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114965314 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118170878 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100720428 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082290696 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109577678 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082416253 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102351805 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113317561 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095213347 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117496221 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108708625 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091984184 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117668907 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109145981 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112562577 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088243787 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108639977 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114773313 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088739962 seconds)
  done (took 2.919684473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092815679 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124148426 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085059833 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112218673 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108544303 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091236923 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106234188 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107114926 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085403491 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107774055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095135617 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116615656 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105685376 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091305883 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116483822 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111230574 seconds)
  done (took 2.496561873 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099335158 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117579133 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120956384 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084515302 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10367076 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081475267 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105060144 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101174883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080696396 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120560884 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084579553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108471919 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105119478 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083345916 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101679351 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087478611 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101264314 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082030183 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104928717 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119157701 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095933004 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104381395 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085136643 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106836863 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10523108 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090616563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104796928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103108848 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083045887 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105853875 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085971102 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112748774 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102455521 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083287598 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103154991 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083257268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105760545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084908434 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.1078608 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105078905 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082970445 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105225279 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084586625 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106902008 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081038201 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105812556 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080648458 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111794957 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103134009 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085056154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105627205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087123539 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106359644 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116718783 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088193233 seconds)
  done (took 6.243212598 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09924252 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109305947 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080710359 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103718599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087905637 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107836542 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10810837 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088386786 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10736558 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08288823 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107507377 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089508936 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107476039 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108487705 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086631587 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109532994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080486915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106745032 seconds)
  done (took 2.61837473 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089829794 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10526541 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092435088 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105405059 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084738563 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107658039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080553099 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104440959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103883373 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084690894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105204033 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087196769 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103740993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087783391 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105943684 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084938526 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107861212 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103777996 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085453696 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10107967 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087758367 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105409993 seconds)
  done (took 2.969237205 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118315355 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125099838 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093073413 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232498597 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104706805 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132556448 seconds)
  done (took 1.650373475 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109051744 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121565087 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10628416 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106722194 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116607481 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08699581 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1078441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107671697 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117953805 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101135455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108189046 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118988791 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117764829 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097385787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11414294 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11560954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107680144 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087294022 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106401185 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128277777 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088450783 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117240555 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10771753 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087511426 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10873767 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118611119 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118402531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102990229 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107324008 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117669847 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115329131 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088734326 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118069798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122669175 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088322001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119512092 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107692349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128772464 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115074018 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096434477 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109782428 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115861625 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098133425 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11479083 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119276979 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107745619 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092834877 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10810702 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108064484 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135281846 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09460573 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117849164 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115098565 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1185772 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098541685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1338167 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122494548 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118431266 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116021461 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123347031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117494386 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094829193 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117423719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123132586 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114928914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09724812 seconds)
  done (took 8.141863736 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10291466 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126020555 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108424747 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122517203 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097024422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108454157 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107932706 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087816497 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108615437 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106818676 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152001843 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08812298 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117684969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118983588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087313063 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107939994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107962868 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117707531 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087154318 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136550627 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109041731 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117934291 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097236638 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117727121 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122943329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115857455 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108536842 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088716337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108475705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087424491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114210634 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109589416 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117984382 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086724417 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11785158 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10872245 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087422735 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114335214 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108857481 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114853839 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097918135 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128885859 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108678938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108605269 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101020178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108073322 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108592966 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08758926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109710234 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108132525 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102316174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123589785 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123945189 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117841213 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108683056 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087679041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109297569 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108994227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088045613 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115192976 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118868136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088233801 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135964319 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108625376 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109778403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118491313 seconds)
  done (took 8.04099645 seconds)
done (took 155.369546392 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.250053122 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.20491997 seconds)
  done (took 1.304713526 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098410366 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137078578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096121256 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170302124 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107978726 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118445896 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138806206 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098696416 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107210925 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085285583 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10728012 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087243393 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.17187541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106911965 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086076808 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108986447 seconds)
  done (took 2.685121361 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11873067 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.232600089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.124472049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10598468 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089154027 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110091349 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084218279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112205418 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089098833 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106839464 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088558932 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107704089 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085100913 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107924404 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110185545 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087510287 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106710366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088975861 seconds)
  done (took 2.812617998 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113279657 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147984236 seconds)
  done (took 1.12316453 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241784999 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.161124988 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.229069284 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.466783698 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.272940832 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.365374099 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.201989601 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215483255 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.171915152 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209891942 seconds)
  done (took 3.392488827 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117989564 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180713903 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.31655654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156020985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107160172 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129377171 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156875785 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131396978 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122437601 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101387683 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123231325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117963428 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138651987 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094720584 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115034753 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119044167 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121471875 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11394171 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11550805 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095239219 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137918599 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085097956 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115816293 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114745336 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097417373 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118338007 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105454354 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085099321 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117856356 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093664163 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113328128 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125627908 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119637284 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.15526393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.12255329 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155944649 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11907876 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09132573 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115833352 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090887903 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119498149 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118665881 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124237996 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098409864 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107108705 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09737234 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106597215 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086030301 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11463513 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.119773077 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09408295 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113698301 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.1550487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119304915 seconds)
  done (took 7.393324365 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785669391 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155067704 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090648105 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.875602445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136264642 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103746397 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.7710765 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111570156 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255264891 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750132963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133461758 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119391041 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205645778 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257081926 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924367829 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2879058 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.665076318 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125489914 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152389749 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154392588 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117502629 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135256137 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10844447 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.428745693 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116834524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111538609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095938501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118658999 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159787957 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124943571 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113461485 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177345623 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.245566824 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203803236 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093985317 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110847307 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110307265 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169312119 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261363341 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.1923185 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178648132 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108663266 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088666999 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121982885 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131742815 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08593269 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184111292 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174114715 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171042364 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11514658 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118041357 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097406881 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120213804 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164174321 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121470305 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.308888308 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321945191 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088733843 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121022556 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126562831 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258384799 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102292504 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224474163 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139084609 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211075623 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.08985299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.779338923 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169475958 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110970981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095186082 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119545192 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114593875 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.099247122 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16696443 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.4084916 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12401879 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113694082 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089582394 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226550317 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102654158 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112036925 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161350345 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117642706 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120243586 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1025558 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121951123 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169217343 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250332691 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1009629 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119981496 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115304503 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102882245 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116211134 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210636132 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21878965 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161561296 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.231020959 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10009523 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183591471 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.167356985 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118516518 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171457707 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119772415 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101871948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121998801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217317091 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144583625 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122654667 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093241 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118460762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146661713 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126352988 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096952617 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190225356 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46027976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.1679539 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109561644 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127264739 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09802992 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16020231 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118220166 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259763476 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121632791 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169575527 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118409416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087374506 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120399595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162813282 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122334702 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09858671 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121636767 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118868858 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232050877 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215922506 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120740178 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220837339 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182982982 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118068306 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173161406 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120809705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167434424 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119514227 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098735286 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116918397 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770938043 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100719503 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119834447 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116209209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187179827 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089865541 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12388872 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125706497 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08676169 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80599626 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126395247 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099078115 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124839815 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117736266 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120283543 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096377757 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116098409 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162815412 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23059208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118985512 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098254812 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123803439 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15983389 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116823902 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12498083 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102897408 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124985186 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121990716 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092159512 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124618129 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167340695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18335642 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21867624 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574394907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111543514 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101866651 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226823522 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112312316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284872391 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097130024 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225221027 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161559302 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120397954 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31737876 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164241578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.186126045 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126658734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171822324 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108471753 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117010733 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16444843 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089821338 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117300998 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161432455 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124692402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122935917 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956347178 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09037882 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224457582 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108357316 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17086722 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117148715 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119219198 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26510996 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111886058 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127198624 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164308348 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113242037 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102511161 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.872004828 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124009254 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09947441 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117305892 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22225875 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162505112 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119477671 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095796113 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11933904 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161896357 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.229241067 seconds)
  done (took 43.911826948 seconds)
done (took 63.474600229 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.277517507 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215976479 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267901997 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169848824 seconds)
  done (took 1.894368361 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170976785 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150784484 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121689447 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10709532 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151036699 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085263738 seconds)
  done (took 1.674404358 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359062459 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274898045 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.243558255 seconds)
  done (took 1.770898599 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320492959 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250593422 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471680557 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324009845 seconds)
  done (took 2.355451353 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212570152 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132950331 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111013921 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104708007 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198041805 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245510328 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142458374 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200681931 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099174747 seconds)
  done (took 2.38312678 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197903387 seconds)
done (took 11.164588666 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.259133231 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.170257461 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.239706578 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.237967425 seconds)
    (5/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.169131984 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.101999871 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.213469106 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101650524 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123479019 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.183136642 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120251754 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.102730883 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.289361388 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117915458 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.204684042 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.136323632 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.148875053 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.13917355 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095880723 seconds)
    (20/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.182796844 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.204919641 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0939334 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.19581031 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.259658186 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22394956 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.11396063 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137014111 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125294871 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.167923812 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097438699 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.207387686 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119079525 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095143633 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.160627969 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.164253374 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.171430392 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116862185 seconds)
    (38/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111333726 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1976554 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.200661251 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.117240461 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.147888281 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.204168518 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191632 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185200557 seconds)
    (46/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088096379 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090532058 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111569161 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.149233947 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091458406 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.119466416 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.204664968 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132119135 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.072595434 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.096357021 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.12086829 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077338441 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.108603504 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090233845 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.118843893 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.189957325 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101615769 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153987724 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187172127 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.189348068 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215357999 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.113691287 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.19722209 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.112013591 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.087985614 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176065693 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183647384 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.17727926 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174414355 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 0.1722692 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087956465 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091084403 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.096539427 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116455011 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086124574 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213055168 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.109764812 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139742745 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.228465 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156835151 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136119611 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218482303 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.101787099 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137317322 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109608437 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.114899664 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117113567 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.215402876 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095228185 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11856826 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092218308 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.09138159 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.194608555 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169981787 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.090455293 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130166833 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.133268096 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.115993207 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086993593 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.18656177 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081858916 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 0.183014103 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118531718 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18837983 seconds)
    (110/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094088354 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.090404215 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.131069748 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.1846694 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.174063357 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.090651549 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.141075116 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092209986 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.111389459 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092992521 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147921157 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.29017389 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.148992562 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075135306 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110100137 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093949368 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.090030918 seconds)
    (127/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.124970534 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.214640184 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117736099 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08710373 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.138591133 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08516894 seconds)
    (133/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116540651 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094101827 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.108505784 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215426366 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135455227 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09271397 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121427884 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112925734 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109547459 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11055034 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117797109 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120667014 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.169211143 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.22109053 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111364952 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155450373 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086035195 seconds)
    (150/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.091587338 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103484658 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089675881 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106464332 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134574952 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082403324 seconds)
    (156/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.090260912 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066886004 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140691679 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097364656 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.140823158 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102412608 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.090007956 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07547371 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090062045 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.093788174 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077594005 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092933426 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066451324 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.11748735 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067056256 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109110484 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09686183 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.172803271 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.124445223 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138993024 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113731549 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092888795 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.096144617 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085750825 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117318725 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146950181 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090153495 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096868197 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118696264 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086664292 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.133637501 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 0.187691841 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111687539 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066790768 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087390376 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112081635 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084698825 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148189134 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066184686 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091653784 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08600708 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173288642 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066103399 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120710771 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.165509366 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.166078952 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099955233 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095231701 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117346598 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.091921586 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133288596 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125572968 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093695324 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108657523 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092480908 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.13533894 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066595024 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.090256989 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087708575 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108876955 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068166322 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11589436 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085385105 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.124498911 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101225295 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109019662 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097490723 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109573386 seconds)
    (224/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.088893501 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.105556329 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222391473 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194458026 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164207575 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092728069 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094060309 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091330471 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067837976 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110762016 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130002886 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091341323 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110684203 seconds)
    (237/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.106464793 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067599572 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094738984 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133956125 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121935272 seconds)
    (242/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184906717 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088681497 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066821391 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11242019 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125230085 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174340978 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067718232 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117190763 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.153331112 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086622714 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084846874 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090887114 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068334317 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137197866 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08849905 seconds)
    (257/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137893593 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092136846 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117009912 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132199169 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11974527 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067242123 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111564219 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111000299 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.067984365 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086634411 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 0.246328081 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093174152 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067364648 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116907402 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096564368 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113485708 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.068003236 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.136678095 seconds)
    (275/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067455827 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.099552955 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.159978226 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115385362 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.085828617 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.138235321 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067285069 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118257944 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108380252 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091958659 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110053495 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086067578 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118420427 seconds)
    (288/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067021739 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068578302 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092725091 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066353925 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116697529 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108655085 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067601539 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.157284036 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111074426 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06783432 seconds)
    (298/309) benchmarking ("sort", Float64, false)...
    done (took 0.171706047 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067235204 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067821579 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.111511754 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116746404 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08657187 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11625968 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090746612 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067957985 seconds)
    (307/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.112277469 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068136953 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111850708 seconds)
  done (took 39.606059704 seconds)
done (took 40.498575488 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100267299 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149170323 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096020549 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136278538 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124317257 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091723583 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118742198 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09746058 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123394154 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.12498168 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099470959 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093204592 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096549378 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120972425 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097558413 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138878931 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123670872 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094361338 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11942687 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.087164915 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.11892142 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086907951 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111918802 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070110727 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122225641 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094368336 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116868055 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120881955 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087458259 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110969604 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09050952 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118358411 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08625365 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124418486 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094071354 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118625281 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097301876 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120898964 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088653615 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110602033 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118636218 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087845822 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117588212 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095131499 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116334053 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092974725 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120309974 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099424019 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139191387 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115816662 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09518739 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121606222 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096388281 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118518449 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090879683 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120088082 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092278786 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139421224 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119980723 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092509334 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119157638 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095191425 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116551475 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095772187 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119683182 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097897673 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121726673 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11843351 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097335163 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117872131 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086642929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122440269 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090971904 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110873628 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096257027 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121871177 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086754499 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117138723 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117631027 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092476761 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.11057632 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090278828 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112334313 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092895557 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113194673 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070026404 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090966981 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116683727 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110380678 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095948122 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117109983 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094118327 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112375721 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098631252 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110001266 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093371653 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110983858 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08725813 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113111825 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091689509 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.1112395 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089705799 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120418041 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088895712 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.11752403 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122752915 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088017425 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117386176 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087026424 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110328924 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101649431 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121224942 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086806541 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117050944 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08620228 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118375539 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086381453 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110853354 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087693016 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110781778 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093336238 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111208582 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090852171 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118583324 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125028698 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087391204 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114951402 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089390552 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111172909 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092714436 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11063204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087197133 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112996578 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078410846 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115190137 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087803531 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119142932 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090399156 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119995645 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088602822 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120432025 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091442755 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116971079 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092847835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111435581 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074888176 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116757894 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089068233 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11357987 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087118366 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112764321 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087068724 seconds)
done (took 16.979119416 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087756349 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185851201 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151498382 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142332373 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107383212 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112141856 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121759179 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11994848 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113437849 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143677238 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110925263 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131702098 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147897343 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087086374 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11207548 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091353517 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113575287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102818582 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14583822 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133567646 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164584685 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087141636 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147277308 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136032436 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120824064 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114209472 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112580302 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091858952 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115432043 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104306529 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132599081 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090996036 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111266495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134194542 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105071739 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.1205591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087395558 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119413655 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087559188 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111364356 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141288096 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.109963613 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116997943 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117722941 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092043396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113873816 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089725896 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121382304 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098864054 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116274232 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126537534 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156324785 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092314243 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122144217 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087233289 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122639856 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121189529 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090050523 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112089653 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090803896 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111481032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091170314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127094974 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141311525 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09234028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121746687 seconds)
  done (took 8.629850785 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105190363 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140343953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10537582 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.146699635 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111218492 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088034415 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112720015 seconds)
  done (took 1.772871929 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088484405 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133762165 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111468107 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135897642 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.131884715 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108962409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122688133 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08816987 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132140539 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089975013 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134457583 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152477969 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090127968 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120329009 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137595717 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089008332 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136587032 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088371407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116608624 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112577623 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116227039 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13491354 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091012896 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114150927 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10245435 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113600723 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16154496 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093829388 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114920563 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092122678 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111578314 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.16638295 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105797671 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124654665 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088926848 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12854079 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127792965 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086923697 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129981804 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094156366 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128127942 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089392304 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114603377 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.08711654 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117945573 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.123815029 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090477969 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114372398 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092447701 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134063954 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089517246 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129666622 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088734867 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117815194 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090338167 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118869072 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12382102 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090864081 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133697456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091434377 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131348828 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105570189 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127898114 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129692761 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091962446 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127587435 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102721846 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116832904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091301305 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116923357 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130560245 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087017701 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115343847 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099859725 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115493543 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.1136051 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138429201 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09047764 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12533417 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113535219 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089943012 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114814323 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112658292 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118085008 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088924896 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119638668 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092479209 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112287145 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088257849 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11827727 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087962676 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115177339 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092392649 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114131424 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116621216 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107250724 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114894289 seconds)
  done (took 11.831554304 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090275892 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114416133 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093386786 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114302423 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090105838 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115491731 seconds)
  done (took 1.59382487 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114790548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118755358 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104847434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121119393 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157315809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.1040521 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130624422 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124618804 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108377908 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127392975 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13014598 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10564258 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.137158339 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121731367 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104608528 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121321446 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104830649 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125805995 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127852947 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09742696 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139001663 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121835668 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096776981 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133725747 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119042343 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096269563 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12664997 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103022326 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12834503 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124524951 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096028561 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119681874 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096974085 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125185166 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131366323 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095839987 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121852096 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120013854 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101606992 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119437285 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105877818 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122701543 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127884791 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094229952 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123975206 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121427595 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094408024 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125540167 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104479583 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094811009 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120355801 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09544056 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119503531 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094240589 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122675762 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124715499 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095444759 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130119372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121200434 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097580943 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119187912 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093699698 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125209678 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118377895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105424295 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120126271 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09723996 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123006488 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121826757 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096970566 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120790687 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092829663 seconds)
  done (took 9.281320501 seconds)
done (took 34.062964871 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686601695 seconds)
  done (took 1.660536476 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.723473904 seconds)
  done (took 1.699737392 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.734315918 seconds)
  done (took 17.709020805 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497090994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.581936568 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.884762192 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.18172535 seconds)
  done (took 3.119295766 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947493495 seconds)
  done (took 1.937944114 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296238831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258488358 seconds)
  done (took 1.533240209 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.779888941 seconds)
  done (took 1.762610324 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.34709842 seconds)
  done (took 2.3290787 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333021434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18769664 seconds)
  done (took 1.506538903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544642737 seconds)
  done (took 1.531754716 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.767126238 seconds)
  done (took 7.758673368 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269547404 seconds)
  done (took 1.267137131 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303096079 seconds)
  done (took 1.292228711 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.475865343 seconds)
  done (took 4.464213649 seconds)
done (took 50.555387345 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099327456 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127643618 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101628459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125548372 seconds)
  done (took 1.435800303 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101185368 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121531649 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101585375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121033364 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126714895 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096577058 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123034944 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101070671 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121112518 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096709418 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121743942 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120740828 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09943062 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122499938 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093355659 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124738847 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099119801 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121702783 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124245062 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096804971 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11908648 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098019033 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125733744 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095119373 seconds)
  done (took 3.666062448 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100311558 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119042905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096867111 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117949239 seconds)
  done (took 1.433101719 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100904552 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142430098 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138296533 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100646304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142829041 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136589237 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092501912 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117374086 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094595646 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.12544424 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091480593 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150365655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137802003 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099987162 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127785331 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089607019 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117125186 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137172414 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100351203 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126843388 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095433179 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125604975 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091158063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140184427 seconds)
  done (took 3.818764784 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171104695 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128163903 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139368295 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095251741 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161100209 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140948751 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088480712 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14152832 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088410289 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131956695 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117751664 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13362493 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130532055 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087841238 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114359942 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087365807 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129775868 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129276267 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091183876 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127822229 seconds)
  done (took 3.43893267 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098676371 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117877652 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088982172 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116313819 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099771572 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.12151938 seconds)
  done (took 1.645548974 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090868705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115385198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090794882 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114897939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094824949 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115416812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088970388 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115725986 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090486701 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115593408 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09062079 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114302643 seconds)
  done (took 2.239813508 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493813811 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118807034 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117206037 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089809342 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122811227 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090174267 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129264309 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092225098 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141258115 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088942968 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11612839 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09139714 seconds)
  done (took 2.694324574 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234152906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125798779 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2882207 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367652109 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155197432 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178294259 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.278552108 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161229383 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224057128 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167965222 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204480386 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223990409 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151924286 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191054335 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139308468 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.12007396 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232285058 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248389379 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154191539 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209226956 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229465151 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169047363 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18090437 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151802096 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139316016 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173378257 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095799451 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131315236 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233409368 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177900184 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190079374 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187917628 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120838962 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236600101 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253013904 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220216475 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285234115 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109475594 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176952032 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170339391 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262450133 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137860697 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203809228 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155182362 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13113606 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191168367 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164186869 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200901366 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152389199 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113561284 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221489511 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239888546 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192016355 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137554943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30524012 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151450108 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.174363415 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194642956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251180609 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226733568 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188536399 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119393613 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189530798 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191271223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210255462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.176557396 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18060055 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149213599 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227256428 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189137908 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164768126 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21983309 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187136664 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141164516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171269525 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173577632 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17372396 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258973521 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184405903 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122434277 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170497123 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150444443 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133710861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168359232 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126053387 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238951178 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117800509 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163915702 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245177923 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159348539 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160513089 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205279099 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230119658 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121244061 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111927048 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155769134 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155443418 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195671837 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141892791 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159770687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16437664 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13063832 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185886494 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09685313 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21256908 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091072611 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173289373 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210192652 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099364917 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162475597 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151431798 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151019402 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174474256 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22535452 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115503785 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134168059 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208729217 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204145472 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150539017 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178047104 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202402746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145271048 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1494247 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200588057 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245002066 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140403301 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204380352 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15667219 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136515979 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105017175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209020737 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155176314 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161738405 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107770097 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209627497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207703239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125600194 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111492637 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221991847 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134152553 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10519307 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163151553 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149092601 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139979549 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153911361 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.15347465 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183705558 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178205603 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155339185 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164676551 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153196545 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254741587 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142879649 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151286913 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148133977 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09488375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219830882 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20024543 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130776199 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207739888 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17246481 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232117349 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171794446 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134677523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177470404 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103929471 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120841226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195718356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169246857 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161353295 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224030739 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201345245 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208820987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183929215 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175658362 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17546421 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167365674 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157831162 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139014179 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159947439 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173072203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096945559 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145204255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135548493 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149519098 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143158918 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107669793 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225156308 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170899497 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190775862 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158607902 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150960142 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181918038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128688737 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173657165 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204778622 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121514604 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226396336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196001999 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187824866 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143883366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22933482 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.093802585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126003995 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142873012 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171121606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106278798 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137004462 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163901811 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182736742 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208578524 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179080995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238148773 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17441683 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192533226 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094895682 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16893249 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18554009 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203984086 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.168635773 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138829959 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151334408 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179020613 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159689219 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257445682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169764269 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17576637 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235446421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150121704 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104734155 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153506605 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22331389 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155330096 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17848318 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147276936 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114103259 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162003267 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134441091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160643491 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211323484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163039666 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189305803 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151474679 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185850792 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12879295 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164788868 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160337318 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166076717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081758153 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174921499 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232726077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149798571 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169547664 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189646249 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132611713 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306762315 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242763009 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196176459 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138798199 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156730768 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162155479 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163764462 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172964449 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178985592 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160234753 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187651548 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160258479 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13801686 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141293157 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121333053 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150999166 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132757906 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150029018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177519655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140152152 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185351148 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163513423 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160214187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172950296 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151732864 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144682847 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151930593 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217140549 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184041168 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238809642 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151353071 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181424139 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232515611 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099258566 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13301816 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133308115 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178256722 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109394196 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220822484 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188340825 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230385095 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183936613 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195736144 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140613657 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120448748 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129833896 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203363262 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209965975 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151631238 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161223288 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230376552 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120667921 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133606693 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180133828 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293265357 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143777465 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224328861 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080947727 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.282508149 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125740574 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106143089 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165496653 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23753211 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136223959 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186362353 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172651026 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172203107 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16589184 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149712069 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191838012 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21710287 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230884193 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180814676 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134094094 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157937355 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178797267 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193226095 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158254765 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141350392 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233210566 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195376798 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197074386 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143749607 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172233037 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169218008 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158680897 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213306146 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108086181 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234651216 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107636797 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223834917 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154483155 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145323835 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177508252 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189851655 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14191767 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188378371 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211603389 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108825783 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134118149 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170852107 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178219433 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15855598 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128178132 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181025627 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126252747 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19491642 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25978686 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136178544 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156062012 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148404837 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108816165 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155831267 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15936298 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142498605 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.161658561 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20717932 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136076901 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193064346 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230630209 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170563766 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175989593 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145691221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694756871 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130951841 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197026011 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160508151 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206641009 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151188558 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17421405 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1596347 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169053797 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226513062 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161393764 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232199355 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195586904 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.204944888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106362046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160286176 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163826707 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145637825 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151781879 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170456989 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160406355 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153819797 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180057328 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171556848 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136290762 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140279038 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201190502 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16180966 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183830416 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181074392 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140868622 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175497695 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215087027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106657429 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.206260847 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208840443 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144438114 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152322421 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134577016 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156750559 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235144666 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125166737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233480792 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186244847 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160538442 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170992701 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148089611 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194118748 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158748664 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21403513 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120198542 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159772249 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15710172 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139505877 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130430459 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156277383 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169397186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150528936 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160396642 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.13983671 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194219971 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124514034 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146089018 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293283394 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220332452 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217689815 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136266752 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107352516 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164377346 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152549524 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17834849 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206019182 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108729209 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138083785 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137441461 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133220122 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137196905 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156007068 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199582515 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167428177 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207138702 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138371122 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279320982 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140269343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157001999 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089751084 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132219942 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151390311 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119440284 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159908465 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22033766 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26199239 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120109587 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133960608 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151457512 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126705973 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110048304 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166277497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165074255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178058817 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146228608 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109233823 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158656677 seconds)
  done (took 83.630350123 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172323359 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147474058 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164415978 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.218552336 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195190597 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286840048 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231486252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.274385793 seconds)
  done (took 2.782145887 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094385477 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146233907 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157423807 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133100948 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09201319 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119672615 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.346108111 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133303142 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117020204 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.12259498 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175127265 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094738573 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.551970234 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091523481 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120118287 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108631082 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092172234 seconds)
  done (took 3.787288818 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.479622758 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717336198 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.512097941 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098755737 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.13467669 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.114069668 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.715297727 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196893696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115072889 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484220407 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.778832634 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159767987 seconds)
  done (took 18.602765878 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100643672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122167144 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.109471201 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.13677824 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096920008 seconds)
  done (took 1.666677873 seconds)
done (took 131.822119158 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104791324 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404788156 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072511923 seconds)
  done (took 1.60804743 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108463847 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138086932 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109111316 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136210741 seconds)
  done (took 1.597224959 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098357316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127425982 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110711523 seconds)
  done (took 1.43678302 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325069904 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19148582 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164744621 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107078558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130589328 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10334495 seconds)
  done (took 1.442526855 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098100801 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127832552 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098999719 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130394679 seconds)
  done (took 1.559194645 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094949322 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071493366 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103602416 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075799056 seconds)
  done (took 1.444968299 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115171919 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132479845 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104743079 seconds)
  done (took 1.456278213 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13140652 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139427998 seconds)
  done (took 1.375260084 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106481737 seconds)
  done (took 1.207022824 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118567316 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170806157 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190597002 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166654652 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.234771278 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166780912 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142851439 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.114002269 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132617168 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145647682 seconds)
  done (took 2.687998962 seconds)
done (took 17.697601835 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103593221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.518583617 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413721813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11689932 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72540334 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38109963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034706624 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147183604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167017548 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094480893 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140392594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.68710135 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022274118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.468077076 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983313168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372676764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678626255 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121271823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119585823 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094644665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015992665 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092583239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122560674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093719303 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703627331 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427003145 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095141031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371589723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092887632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127569539 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.384642413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123592662 seconds)
  done (took 17.135588158 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095945531 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174988765 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09974481 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138871368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124667762 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094697124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124340546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093986492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180821474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122945923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11196651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122115164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127210459 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09520565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142226091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092894324 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125406572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092949579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122023703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122797025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113088142 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121774358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094908062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121775187 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09436037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135982766 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095288459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122294783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121280188 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099168857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128497753 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095283282 seconds)
  done (took 4.859933146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141660558 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183791751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128948887 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12787615 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170597718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123973911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200156892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119565762 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183608494 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122819155 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140589054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093654735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158046706 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094917968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143433316 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121648789 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097788193 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122540873 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093862991 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122910086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141660895 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093558382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122141654 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09359593 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123269558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10978303 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12436756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121704087 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093503816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127447869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101106742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12389649 seconds)
  done (took 5.184778858 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097631223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127124856 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110219711 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138337885 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096475378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126122614 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098182039 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125299485 seconds)
  done (took 2.033646369 seconds)
done (took 30.312929567 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112467632 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127761942 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108518748 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136293876 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103038322 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132744237 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.0928685 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134568535 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134944387 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102710107 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138445823 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092762518 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123625205 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092874125 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136207929 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098556605 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133318395 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102450956 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135413647 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133509761 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095522943 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134484162 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103619674 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13352507 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.105383384 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134634702 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13846561 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099905939 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122308958 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095493515 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125471827 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105158853 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124225776 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106322808 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126872259 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098774989 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12494058 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094736244 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133547725 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134835847 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10031167 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133832193 seconds)
  done (took 6.052555989 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108298568 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141296658 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105870903 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08174088 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118144732 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081375548 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138207315 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080189286 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111217991 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108387177 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074406441 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106392395 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079585993 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102893143 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077040067 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075702214 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109376761 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075794493 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076759095 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106536474 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080901416 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07293444 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109179207 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079490229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074921991 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110562106 seconds)
  done (took 3.603551513 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100431124 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136387706 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113233031 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185874018 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162243423 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100674033 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133669558 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.111394281 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138908359 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121148104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096596604 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150320182 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111375298 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129614698 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093311181 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137679918 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136692751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094396017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128774686 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.115036848 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139132689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103767842 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143792941 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134201334 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092152762 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124735668 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097871692 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135346339 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.099329057 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131691674 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098270471 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126357113 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124161653 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105690536 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126389766 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094669788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14306403 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103618362 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.133114912 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093202374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126639801 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122702687 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114183102 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168279225 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09299592 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132684514 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.100974872 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13344498 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12234248 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112029772 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132538992 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093112016 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126183318 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092027329 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122641658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10754346 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124859079 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095941715 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131810663 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125912201 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10650612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.1263742 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109033423 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12210162 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101206949 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122976953 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094075317 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121918553 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.115961965 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123984692 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164133028 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094525831 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123794043 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103054773 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130667278 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129261752 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093441806 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13823158 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103258787 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126348866 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103509378 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127047949 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096883167 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141223241 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095346968 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124278395 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094808004 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129444336 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124830311 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094899665 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136564876 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094017728 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125905443 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111174397 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122216898 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094997807 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130019669 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127863721 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093203856 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135441677 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099176257 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123494704 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104271269 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122659499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096828491 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133002202 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127431261 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.093246854 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127563238 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100255413 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122885721 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09444909 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125542653 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095465275 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133503429 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100386118 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128632068 seconds)
  done (took 14.93714016 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229354696 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217226031 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.209169375 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265262424 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135116511 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115620074 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21302164 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156824512 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124969804 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161249986 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162998509 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183844752 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140745264 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181037009 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142236557 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122993875 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113408277 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165769759 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216741048 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291968632 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113746412 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133395022 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162695756 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161416127 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.107479253 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133779162 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140852431 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106084195 seconds)
  done (took 5.769308594 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108476817 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157861295 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099007696 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144800049 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149193773 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093092443 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129261522 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095557397 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136883615 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136655398 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093425272 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130373413 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.1008939 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133044847 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124286853 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104025855 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133607008 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096416454 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127324561 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098499515 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130294898 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.103163413 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128380624 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.093256118 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133419584 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122979745 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086836931 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143496383 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093561034 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146065658 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122582336 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100720866 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134033627 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094532336 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123927367 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.096266365 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12538863 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.096839073 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125161491 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092902913 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123193066 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078456854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122616036 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108798593 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129718731 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080862695 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13067774 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129495033 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094818457 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121964501 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097498626 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126277424 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097893251 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131392206 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100175428 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124372466 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097378587 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116780199 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101291163 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126191131 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085323347 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092493812 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128744451 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118492014 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101928082 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128630641 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093005433 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126116203 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.09816292 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129961099 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096960309 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127619812 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091314428 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126509317 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096717993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128719649 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.097287078 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122446199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094125862 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123866973 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076002959 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123603112 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075378601 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127146329 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092708792 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122628168 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096184791 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130965492 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138661119 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095767878 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132381065 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094840277 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122708725 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097691966 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113751646 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097588324 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.13983038 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143028101 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094322859 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122404303 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107626028 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126591818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093802506 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107228848 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10189412 seconds)
  done (took 13.053693978 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128529876 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154656556 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096344511 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.143536759 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157576028 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15882742 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10151542 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131739944 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095833467 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143021011 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094529807 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132381466 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098384299 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137692041 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157678525 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104347728 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126749132 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107799302 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132410434 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172033276 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112627321 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143114135 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108577887 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.124679039 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.099538935 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141843709 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162628925 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108202076 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138135829 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142846848 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108704732 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161261424 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.113372914 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129018957 seconds)
  done (took 5.520376394 seconds)
done (took 50.047522455 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.233876849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.429187934 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.206175385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.107947373 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.259671048 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.232366081 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219008839 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.206894751 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.726543496 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.207350385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436960712 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.895292482 seconds)
done (took 60.2995827 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.272720147 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343488184 seconds)
    (2/2) benchmarking "String"...
    done (took 1.48014335 seconds)
  done (took 3.969086703 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.562525707 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.162163126 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467763898 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.206908013 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.224315035 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.495232431 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.87564873 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.562071853 seconds)
  done (took 28.131132198 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.20772735 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.602530396 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.915454199 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.923059917 seconds)
  done (took 18.786681919 seconds)
done (took 60.865045291 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.192960247 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.233726074 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228573862 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194925396 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.320930122 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228779798 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.449619743 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.302238156 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.222234822 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189244457 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.230502369 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.209170666 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232997388 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.466930905 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.217640759 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21979593 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.28611395 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.86764597 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616604032 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.216053062 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.231732711 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.273609993 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.230737054 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216744167 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236696859 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.208113335 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208483683 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.216958952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.800302692 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.211382215 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.228289141 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.637359349 seconds)
  done (took 190.966341553 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210201134 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.279667526 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.363020299 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.243397302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.822437318 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.407388891 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345893174 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.886197787 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.22663215 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.238328078 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.50732956 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.211178188 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.570270931 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.183585316 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.218608442 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.319037447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.395399123 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.565015124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226127977 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.447986755 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234581385 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.489851892 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.414926198 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.457118323 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.228724119 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.300924107 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.230453951 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.22104962 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.403319846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.337372352 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.265774661 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256874933 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.849176485 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.072433507 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219868222 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.219352477 seconds)
  done (took 151.009986619 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.506378616 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.211101738 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.212429064 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211631683 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.244588116 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.212627696 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.794467936 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80087346 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.757634292 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.516512429 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.610326723 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534183814 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.216068513 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307542122 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226603738 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.213087833 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.228439026 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255065596 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.217886255 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213822385 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798127806 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.229314522 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.210540477 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.394546443 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.228892346 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245993485 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60393073 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.213694426 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246171231 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.546917361 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.263119758 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214203507 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.615749486 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.028913821 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.216304142 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.328131493 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.217031152 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.246315298 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.215311831 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.495740842 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.213359864 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.214092209 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.216088122 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.901679947 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218662761 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799470003 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21847716 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.169395227 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.214901896 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.215208104 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.871769338 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.963814076 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.234395719 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.214574742 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216448343 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.214444368 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215132943 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247074468 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.828226459 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.311290327 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.231808915 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.215942753 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.219321544 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249035703 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215894378 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.56143169 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220365699 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.420937484 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.289844354 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.327562019 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803162179 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219891661 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315277201 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337199594 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.216531874 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.215342051 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216449289 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215941208 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328734258 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.216323994 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.653390067 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.394036586 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235045359 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.620058355 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.31835162 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.216385044 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639772952 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.220176359 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.216682027 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.986984654 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314279981 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.217449472 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.217398724 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217562178 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652595909 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803752035 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480461453 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.220644244 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.217441836 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.78219467 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220847511 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.673270758 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78614373 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935762204 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.222817327 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331606213 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.396129733 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233250291 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217890262 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.218180968 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.630630453 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.221702285 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276975596 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.218482292 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.616765926 seconds)
  done (took 369.252381576 seconds)
done (took 713.879038189 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.893682575 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.881667432 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.996075246 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.878059045 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83696904 seconds)
  done (took 10.634138806 seconds)
done (took 11.786954939 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.41011425 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.408952154 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280502323 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.41169533 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248195098 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.428079946 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388196033 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.240211578 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.32134138 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302161839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321129385 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.274316933 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.246819757 seconds)
  done (took 18.43072325 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.547977987 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539612514 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28269592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524609177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260017105 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.578595703 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421382211 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429748276 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.433419898 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25193537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234327569 seconds)
  done (took 16.653524881 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55238845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.579600709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28728772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564994794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261930492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546798476 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422957512 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.458557036 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435020602 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253575342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23423861 seconds)
  done (took 16.746014793 seconds)
done (took 52.98271372 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.229289046 seconds)
  done (took 2.379502351 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264573238 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431873667 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.247591593 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23460002 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230621137 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.231455167 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.236462772 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230775019 seconds)
  done (took 11.259633923 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.230643545 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.228897696 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.226139329 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227005415 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230742121 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.230573197 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.227256569 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.227485871 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230701137 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22822817 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.227882256 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.230687588 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230649446 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230350839 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227306512 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227567343 seconds)
  done (took 20.812959994 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.229966816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.227250599 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.22889859 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.230074437 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228892378 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.228370823 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228850007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227627556 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.228426434 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.229399375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229210784 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228464505 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.229423092 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228283179 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.228423998 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.229208858 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.229428702 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228698562 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.233042054 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.228612493 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.229538195 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.22987076 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.229396706 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229276835 seconds)
  done (took 30.65173406 seconds)
done (took 66.258501185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.41139476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.988373432 seconds)
  done (took 9.551139191 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.232403417 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.230622859 seconds)
  done (took 3.615691365 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.232521745 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232309845 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.231487449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.231817543 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.232658171 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.232168507 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.231668136 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.23280446 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.231951143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.23204813 seconds)
  done (took 13.47461977 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232236413 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.231889191 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.230030617 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231635082 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231639344 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.229820233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.232506266 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232953353 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.232376017 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229830989 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.23430706 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.230877725 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232746888 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.230344259 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.233521564 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.230402573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.232267045 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230420575 seconds)
  done (took 23.323193411 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233469451 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.234167394 seconds)
  done (took 3.622105422 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.23157908 seconds)
    (2/7) benchmarking "second"...
    done (took 1.232518373 seconds)
    (3/7) benchmarking "month"...
    done (took 1.23230929 seconds)
    (4/7) benchmarking "year"...
    done (took 1.231639647 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.232418795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.231822523 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.231037946 seconds)
  done (took 9.77755326 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.235111807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.412405039 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.502166349 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.863138434 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.236068739 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236911269 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.094588201 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.237104231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.239572839 seconds)
  done (took 14.211603099 seconds)
done (took 78.732324286 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.257103719 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.247968385 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.407158689 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241893924 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.245533541 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.574193853 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.25497344 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.35979641 seconds)
done (took 37.748757831 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.249158622 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.981613827 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.988548377 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.246974118 seconds)
  done (took 11.373272108 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.213264787 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.172992436 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.211782649 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.275318071 seconds)
  done (took 18.029862666 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.276855997 seconds)
    (2/2) benchmarking "read"...
    done (took 1.565409182 seconds)
  done (took 4.999368048 seconds)
done (took 41.811978909 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237439931 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23647346 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.236604402 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.234051113 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.237458962 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.233902148 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.234062355 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.237047844 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.237140517 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.234232961 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.236112117 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.236431147 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235336874 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.234554207 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232980025 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233445909 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236875829 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233976661 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233037684 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233942606 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237020168 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234783612 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.234684531 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.237287393 seconds)
  done (took 30.806125953 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.237144694 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.236703561 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.237906785 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.237348535 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.234998019 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237596689 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236912971 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.234337081 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.237183032 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.237346809 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234463611 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.235400999 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.238254379 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.235052053 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237838872 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.234721495 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.238722965 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.236341113 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.239111146 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.235808569 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.237907163 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.234951807 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235681614 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237921085 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.236087984 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236437168 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.238743135 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.237721132 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238587982 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235882998 seconds)
  done (took 38.262646408 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243865121 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.24617313 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.238636264 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.238906089 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239201811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.238344522 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.239197136 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.238989599 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.239230205 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.239879673 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.239077823 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.239202409 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239494169 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.238741509 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.238191493 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.238652967 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.239038208 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.239519288 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238685655 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.239689382 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.240574253 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.240274204 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.238254544 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.240475943 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.240001745 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.239345169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.240100238 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.240782944 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.239771282 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.239304755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.24121899 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.23980987 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.240839886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.241080354 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.240262175 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.240495373 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.245698527 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248177538 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.24147935 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.242933456 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.242111648 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.240758166 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.240299625 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.242268658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242327744 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240696294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.240850006 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.242351519 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.240809894 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.241058759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.241383539 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.241770628 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.242822791 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.241758823 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.242899212 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.241348355 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241677001 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.242653989 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.242380139 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.24193888 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241961271 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.242596335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.243123311 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.242217038 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.244047682 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24243128 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.24239799 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.241997291 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.243108982 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.242526342 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.242835539 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.242126525 seconds)
  done (took 90.521091196 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.243672873 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.241349297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.240375771 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241307149 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2407026 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.243734379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.241771783 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244202208 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240458391 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.243297558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243473339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242049943 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240250699 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24348637 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243682815 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.24209706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243347884 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240972697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245177184 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245097283 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245673569 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242053708 seconds)
  done (took 28.501849209 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244975314 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246152321 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.242798008 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.243673881 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242258896 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.245738068 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.245835731 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24738786 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245544917 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.243853247 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243393621 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245284796 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.242089935 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243023687 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244719818 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.245133441 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245207175 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250450817 seconds)
  done (took 23.572689858 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243049028 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.242807293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.245904814 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24441085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.244581647 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.245856093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242910643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.247091004 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.247744791 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.24372483 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.246181497 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246945196 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.246391391 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244676425 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24668466 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244366569 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.246648944 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243824625 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247350727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243822744 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.244026199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247561249 seconds)
  done (took 28.562325986 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247221206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.246933645 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.245392067 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243762138 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.243866403 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.247584448 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246509648 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244361799 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.248396113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24659868 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245911161 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247665392 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247438599 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.245766028 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.245173034 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244272713 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247290602 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.245492631 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2476896 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.245680373 seconds)
  done (took 26.089466175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248814135 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248317574 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248007944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248419221 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248011177 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.249647413 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248195945 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249411536 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249415752 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249593456 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248571646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249423857 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24964483 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249223926 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249513314 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249527101 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249311158 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.250275683 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250655763 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250516965 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.249966585 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24992995 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250895837 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250732387 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250933276 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24979864 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250819541 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250646841 seconds)
  done (took 36.157669546 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251545696 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249487816 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.248074994 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.248084972 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.24753376 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.248253613 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.248272226 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248967547 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251264301 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249190788 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249906025 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.251422447 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250774331 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.25088055 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251871189 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25243812 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25246894 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.249800396 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250061041 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249227102 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.2528677 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251899714 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.252392976 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.249301076 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249966842 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252555226 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249828196 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.249144809 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.252073321 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.250115035 seconds)
  done (took 38.68116053 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270026969 seconds)
    (2/2) benchmarking "in"...
    done (took 1.27098212 seconds)
  done (took 3.712602692 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.250584525 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252467887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253621033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.24936934 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250776853 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253273651 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252644713 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25049186 seconds)
  done (took 11.186006505 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252946372 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.253708405 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253948863 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253462592 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.253680315 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.253623428 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.259589886 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.273471924 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.254685616 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.255405548 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.261247213 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260316989 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.254822186 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254268271 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253674945 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256029189 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25524315 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.253697518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.254583793 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25436093 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.25426373 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25668567 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255846043 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253108113 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255755397 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.265075864 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.27808017 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2551792 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254919827 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.259049728 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.253698669 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251616074 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254654718 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.256300645 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.256910326 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255056288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.264051088 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273539856 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.261315343 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27483499 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256635648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.254574733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256730653 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.256796118 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257555741 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.255719713 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.25745839 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.253894444 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257111891 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.259427889 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.261544193 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254895913 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.254209311 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259173115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257800157 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263503301 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.276727126 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.260537811 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265288817 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266355243 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.288863436 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281217533 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257445906 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256829489 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267765523 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282039547 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263783004 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.274332964 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.255551839 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.2573662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263766601 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290199029 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.283492265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.257886683 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257271153 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.258650814 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258423216 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258211381 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265225713 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279820885 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257672246 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258816877 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269883252 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28137177 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.259384534 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.259624948 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.258327578 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259231253 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.260012534 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269573553 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278628958 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259202326 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257796828 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.260037429 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26036729 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259415874 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257995845 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260123166 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.257498853 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259728732 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259584635 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263837796 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269397394 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259777915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259882345 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265958941 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280657779 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.259600497 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.266545834 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.260810163 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260602168 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261439457 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266793229 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.258717687 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2643099 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.270696108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.261160547 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.262060289 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259872362 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261170267 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272791408 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287225925 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261183501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.262411106 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265832077 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.273562894 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.261411509 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263749343 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261057012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259085285 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.259899315 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.262772951 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262477714 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262359368 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260855119 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26280485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.261482683 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.262892571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.262804634 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.263401258 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.263529339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261763312 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262483326 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265614544 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.262201995 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263385609 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268866499 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.282308905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265367762 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.263192763 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.260470717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263604708 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.263059675 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.263052184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.263502617 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26371458 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.263269234 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.263071384 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264357702 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.263062839 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264507285 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.265726356 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268747395 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264637773 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.267104295 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.264376916 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262343827 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.264542516 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265208804 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263911354 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264478751 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263311467 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267855123 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272167267 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.264753417 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263903752 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266507535 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26498027 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26528971 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264603994 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.267289396 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.27264395 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265810793 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.270814724 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.284922669 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265531709 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266352038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264930705 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265239565 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266459841 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.26940125 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.2739629 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277679197 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289545713 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.266004556 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.271183963 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.26721349 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270468505 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.269821597 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.266043931 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266272825 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265529396 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266693863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265963812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267754983 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.26661233 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.265176849 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.267820918 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.267119324 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.266877073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266987392 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266314274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267848928 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.264425048 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268363928 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268004158 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26685779 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26422009 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.267293937 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.267882161 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.268445489 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.267119 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272232267 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.266146145 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2684341 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269435999 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267747991 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.266155188 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.269263976 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270504243 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.267320153 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274519948 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28638469 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268969566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274650941 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288009183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268002472 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.271666926 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.268841288 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.266219335 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.272934768 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275977218 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.268805762 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.269740207 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269196197 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268196029 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271715011 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.275304935 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286443274 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.269843462 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.269877308 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270963739 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.267603795 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270486082 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.27190323 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270151354 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271835732 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27027199 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.270597394 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27078595 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.270324915 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270124123 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.271977318 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273392912 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278386468 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.274910153 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270822271 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.273254012 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272258974 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.275476963 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.270525546 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.271643267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.270947565 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283917314 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.296455668 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277327806 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.2927107 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.274611971 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27646307 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.292086198 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.276005937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.271792484 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271298677 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.272439958 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.272923417 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.27068362 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273106435 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.273342367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273287703 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.273735155 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27771836 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274254566 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27235837 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.272586943 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27237315 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.274414478 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.272129397 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273871105 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.275198074 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.275108105 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.271921594 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.274767049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279955636 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293451361 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272367097 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273808853 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.273655793 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.273271637 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274221871 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274569051 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.277497253 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.282114159 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278166703 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281919112 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275991064 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.282944226 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.274469856 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.277401996 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.282151087 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272829011 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27345527 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.273688394 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275773686 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281968395 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.293639994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.276872479 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.278070781 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.274366424 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.275370875 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275613268 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27454724 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275245947 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.276246542 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284156153 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296854537 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.280367084 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.277165873 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.273005227 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.2754597 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27660295 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.274642275 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279715177 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.275827766 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.276466245 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.276714199 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275400851 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.276985202 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.276483447 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275673548 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.2749179 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27715306 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283479216 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.298408528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281497442 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.277187221 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281983502 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296885871 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.283242278 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.297352125 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.276925523 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276995828 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.277809674 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.278855897 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.277325977 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.278064998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276303405 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2790773 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280774045 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.277851754 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280159476 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.277436875 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277156461 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.277816397 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289958245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303316415 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279185969 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283917208 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275968849 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.279882597 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283548181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.27952768 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275988181 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.281685403 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287973683 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286805648 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.278851626 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278090386 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279215237 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.279673324 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279880042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279917747 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.279909829 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281361108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278921679 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.280082122 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281607506 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.279070697 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279939339 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280451742 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280811942 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.289265404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300285622 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.280586069 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281226729 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.281639934 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279973166 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279846932 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280402398 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280058928 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282062616 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282037464 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287900607 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287131799 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283348833 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.280101218 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280137584 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280750046 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.280051791 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281204183 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280324868 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.281218799 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.28065063 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280787136 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.280706398 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279627451 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.282489613 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.28150961 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283113798 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.284545029 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.288383616 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281471047 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279017635 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282017393 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281823376 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.281417106 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282126372 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289667989 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305265407 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293330891 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.290732273 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286014363 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283151527 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286910053 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290414145 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282662608 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283639136 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.28371053 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283289979 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285062837 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.286376786 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283525944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.288699767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.303853744 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.283692688 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292139034 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.303862328 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282988435 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.284064143 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286243111 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283370077 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281427045 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.284751717 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283997209 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290137586 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303822926 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283453179 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284413938 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.283319959 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.285361695 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288094452 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.28430781 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285457837 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.282875496 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.284319203 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284444026 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28518031 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.282673818 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284435868 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284003106 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288844944 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.290573085 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281414587 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286821706 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.284736649 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.285535918 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285214429 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.286029028 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.284378076 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.283467264 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.284771932 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.285627273 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284925319 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.288804568 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283931914 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.287051394 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.28705095 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28610172 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289264998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296855904 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294502437 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.284526752 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.28491392 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.28698766 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.288400693 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28718872 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28712391 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286155683 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287981837 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.287521805 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286820196 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288195399 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.292129277 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302096243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.307705388 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286918458 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.288768698 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291692776 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288277943 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.285692454 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289656004 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290159337 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291474917 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29593987 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.288305154 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294040233 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306329706 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289784137 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.292704813 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.291884685 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295285234 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.29000911 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.288095219 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.287954773 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.293405601 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305276083 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289082798 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298182861 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319642888 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.309007744 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2895124 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.289835662 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288015693 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287946777 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290926835 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.290078216 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.289253574 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.290263356 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288691122 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.291121069 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.295582516 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.290143515 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28990529 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.290269895 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.2887748 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290356375 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.28745384 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.288820107 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290168533 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290590179 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.289927761 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.290045582 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.290048206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.302766761 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317517708 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.291414329 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289925872 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287625912 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293129118 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.293548457 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.302303705 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298728812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.292767418 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.290029779 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.291973253 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291353219 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289897931 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.291187257 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.291551055 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290693834 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.289490517 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.304810067 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317528186 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295420413 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290958179 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.292819435 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.292678421 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291424948 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291306385 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.292389828 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292007053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.293869438 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296654299 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.292669972 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29268156 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295839619 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300528922 seconds)
  done (took 761.663220472 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290057807 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289932184 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289974638 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290432137 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29010103 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290548664 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291941843 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292774765 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.290571055 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.29072256 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290088109 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292017741 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290912103 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290888409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291688808 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291709929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29064936 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292146727 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291432387 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290791641 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291679472 seconds)
  done (took 28.320623359 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.294012168 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.291732294 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292115652 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29484767 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.291504116 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295003934 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292252664 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294637653 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294266986 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292768823 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295178387 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294553092 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291533384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292242564 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292431678 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295170014 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295851957 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292734977 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295752485 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292442727 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295763349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293340905 seconds)
  done (took 29.670600596 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.294756649 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295917418 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.293745593 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.292738722 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295727729 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.293490246 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.296616927 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296229224 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.296040653 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29613779 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294454636 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297693718 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303211276 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302473404 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.29788177 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.29678748 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.439492867 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.296484018 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297768423 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296700466 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.293899423 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.302069282 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316147988 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.29494016 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.295933009 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297170524 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297519917 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.297302757 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296966711 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.298615087 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301043532 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296616815 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297757706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299312637 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.295857566 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299203223 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302046766 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.29826107 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.294959738 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.297977998 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.30909361 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.31915483 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.297774894 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304368271 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.320175136 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.298809434 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.303930114 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306256705 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295686848 seconds)
  done (took 65.017363206 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298137398 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299952665 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295327651 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298221029 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298619827 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299220123 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.299345726 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298446773 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.296686297 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.296243331 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299713491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296980454 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295927024 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299242616 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.299851731 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297752786 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297756377 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297583039 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.297901827 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297610711 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297901184 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301105691 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.30021699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298824794 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300553804 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29874506 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298120936 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.301344716 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.297320067 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297898967 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301134959 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300958472 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300573959 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299207985 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29893054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302117729 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302385854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.298626162 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301300768 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.298921932 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301170129 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301387092 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300781159 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.302355895 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298138706 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299451619 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29928574 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300404183 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299808988 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.301970253 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301699187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.300504938 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302795123 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.30042826 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30288623 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30185022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301473218 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298579652 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.303719863 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.301050731 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299206135 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303267599 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.300531114 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302976458 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.303355741 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.30009411 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.302680698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.303891009 seconds)
  done (took 89.608117005 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302905857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.30292464 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301941682 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302826596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302255015 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303274325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301893868 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302873558 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303262719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302627037 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303852753 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303142681 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303608364 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304454162 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303945044 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302970022 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303451495 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302912212 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.303201704 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303397725 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.304107309 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303244727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303068288 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302821166 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304357066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303618683 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303439125 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303612958 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302379227 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303332221 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303238094 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30402493 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303951008 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304656055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304062103 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.303270282 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304442072 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305038984 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30535051 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.304537797 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.30443547 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304550233 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304786598 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305541085 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305016086 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304273392 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304453466 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304641293 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.305341753 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304909806 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305136333 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.304314573 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305343678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305079468 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305906223 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306090512 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305717484 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305153917 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305482936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.305573378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305876378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.306186999 seconds)
  done (took 82.072209931 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306428979 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.307617455 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303695813 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304053887 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.30605623 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304981511 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307145946 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30812231 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30705674 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.308477068 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308491767 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30429647 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304499622 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308198619 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305883143 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305665254 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304230991 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305044011 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30821468 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305097059 seconds)
  done (took 27.345713394 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305476763 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.308099017 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.306206088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.305467371 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308498694 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.305790066 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30831891 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308008788 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306144231 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309646498 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307812198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30902694 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306545163 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306635737 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309448349 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306154039 seconds)
  done (took 22.141419959 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.306642849 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.309624754 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308197069 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308167094 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306597085 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306861689 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309244012 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.306874017 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.306699714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309176896 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310247904 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309698733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30911424 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308495995 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306834542 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310143543 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30671639 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307099425 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.309592682 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.309311014 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.307115834 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307870658 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.310817868 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.310178915 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.308505211 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308743849 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309700498 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.3076001 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308451848 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311581478 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306999005 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309484267 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.309194836 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.308649264 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.31154617 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.308785672 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312672695 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.311964927 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.311458858 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311590958 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.311420535 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.309358664 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312387064 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.311399441 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309956145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.3117365 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.309508336 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.310977211 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310862558 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309636073 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313960474 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312382792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.312506188 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312267303 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312758886 seconds)
  done (took 73.254660466 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311944623 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314009021 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309782178 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312010781 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.31329888 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310618221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.312360114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311467892 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310521234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312508936 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311956717 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.313848074 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310043947 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313974945 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312448924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313758948 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310803003 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.310673237 seconds)
  done (took 24.84358027 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311551814 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311658119 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.313809817 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309320633 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311523261 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313255784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311276822 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313213863 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314062192 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31296332 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311125134 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314151945 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314642847 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314566218 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311865854 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310204772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313754195 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314144528 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312335463 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312202916 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314435762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315188732 seconds)
  done (took 30.109719076 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.313811654 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.313497798 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.313125255 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331365437 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.333762238 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.337353324 seconds)
  done (took 9.17213047 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323103189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316144495 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312600826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315738276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314424165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31181053 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312750906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313080053 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315544882 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313979467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31307964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316343662 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31629329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313061338 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315545984 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315512112 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31419114 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313875684 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314405516 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317569821 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315807478 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315728776 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314100601 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315563588 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314441041 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314544262 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317394131 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314713708 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315116765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317999015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316652257 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315180892 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316312524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314052575 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318572437 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319221706 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313898191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318157489 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318078255 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314651761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317040167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319304453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318943382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315311403 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318466294 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315094522 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314830647 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314228135 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315939345 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318606276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318454997 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316741957 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318884789 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318518027 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319255443 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320346107 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317687714 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315237638 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318774128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316942238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316366487 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319276776 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316583025 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317661392 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318669811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317377486 seconds)
  done (took 88.129085369 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318514404 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316820215 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31681709 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317960458 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316813708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317453813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317601436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316438272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316501912 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317206808 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320620276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317206932 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316892062 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317730177 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318278388 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317549853 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317144365 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319697741 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318747374 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320900333 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319242456 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317498465 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319410268 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318438549 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319230178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322718817 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319000357 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319158091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319141695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317847085 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318476293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319584611 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32050636 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319387088 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319664746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31929587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319218342 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319253163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320001653 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32246735 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320335551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322300918 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319432935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319950542 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319985307 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319652009 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320015764 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320020126 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319668779 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320196947 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321188111 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321547353 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320844541 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.321144195 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320458383 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320280675 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321055148 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320366318 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319267478 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323313933 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321303519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320349042 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323750828 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32023123 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321659023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321592511 seconds)
  done (took 88.321995465 seconds)
done (took 1776.88613618 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.32336525 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.432763805 seconds)
  done (took 13.993031034 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485191918 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443628827 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321306011 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.353935183 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.321846044 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.317209735 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.316433754 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322865138 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.322142582 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.322232576 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321213718 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511882965 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.316236093 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.322546993 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322040126 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.41647884 seconds)
  done (took 42.981038241 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.352226353 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.327576414 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.449335355 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345826708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351149317 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.527725915 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.387286252 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.326717998 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.512648457 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371226143 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.022052945 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.353067478 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326677076 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.532847315 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.347703812 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.528901143 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.595006249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.028311488 seconds)
  done (took 30.925214558 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.820226221 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.34880723 seconds)
  done (took 9.408456134 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.337604428 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.328073456 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.356526594 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.36057794 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.388009887 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.356914367 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.406147546 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.385797225 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.320916207 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.322125323 seconds)
  done (took 64.809904179 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.348572159 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328894551 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.329050002 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.326471564 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.319199896 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.31872333 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.32590822 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.323956096 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.37317167 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.470467156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.330300678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336424779 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.350361467 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.330931199 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.326811593 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365473433 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.484817274 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.32772869 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.326725964 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334145254 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328737259 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.42473995 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.373801508 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.328184463 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.465950303 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.378660216 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.336952084 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33600243 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.465771011 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.32976272 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.329581053 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.330652535 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.33168067 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.956972021 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.874208005 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.341462953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355423329 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338363993 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.328527011 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.506086555 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.331901439 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.337375243 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.323056564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.866871326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.465489826 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.451755049 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.670209681 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.349484023 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333273799 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.395156777 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.332215394 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.331236729 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360768451 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.111989403 seconds)
  done (took 112.344019441 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355163836 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.717823765 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493112093 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346861348 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004914663 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.008556851 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.342960088 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.640295788 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.401268993 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325300942 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.664403393 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860141721 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.350128497 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368962013 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.988239362 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384650243 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327553675 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.108065237 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.344106675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.330064639 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840623659 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.32662048 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.343617208 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.502338131 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.366120384 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807951113 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.853744002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.802481367 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.346023799 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.32602901 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.819491342 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351210249 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.336832019 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.326267453 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.60237861 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712200349 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.710950481 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.350220227 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333802118 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.330742922 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.350669995 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.805631871 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.71550458 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.360333044 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.326983244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827586725 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34547738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.335745607 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.326662857 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531653664 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.971359432 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.326839934 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.845428946 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.326983689 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.637931563 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.341350595 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.379674398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839751383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.345359991 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.436983893 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37327867 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.327132039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327804441 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329268851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327480669 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.703541881 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.480245243 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330890322 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.701313436 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.833433982 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.346248161 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.897275796 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.209478847 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.34456175 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.446888916 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328077644 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.923012644 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.850171519 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.377020836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.32686065 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.689846174 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.351286113 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.664388353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344662031 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.3462095 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852913913 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.333895118 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.377751111 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.32997022 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.329525776 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.947471797 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329232875 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.632339267 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.40174645 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.329452941 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.330371442 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.380945883 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342154262 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.329286119 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.334768383 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881435721 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.353150466 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.314675693 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.350478053 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.336815762 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330061703 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.332947402 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.331075821 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.55156565 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.738734043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.356688482 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.330519722 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.330987799 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.330292325 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.498099015 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.332824491 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.667622716 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.349839367 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330071467 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.350528239 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.096903241 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.379391661 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332162082 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.33151435 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.261682033 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.537170646 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.352131405 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.332004762 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331816397 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.350032772 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.680803099 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351697034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.381248265 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.332858828 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069542283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.386377971 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.342566005 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.628363515 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338963412 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.332364569 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.356917827 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.334205596 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647356607 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.613454613 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.388069754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.333938352 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.353287555 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.040420015 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.380130454 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48222037 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352684316 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376427723 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.533087478 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715651398 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.333526534 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.933896354 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.335757894 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550003223 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334467575 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.642077978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.849334882 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.352026439 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.34153939 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.06087081 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.046060246 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.990798017 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.334684477 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.674460018 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.316901622 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.818880917 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.333118999 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333161047 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.766569333 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.335425608 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337121433 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.335197751 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.336294938 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.478643855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511003296 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.688296838 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338405201 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814785192 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390065167 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.33523366 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.355849901 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.336051057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.68255425 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398350869 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.34213429 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.336445864 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.336882729 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339116405 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836265883 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.257760341 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.337430658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.491692142 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.996667199 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.354076297 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.343614582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.875618042 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.592019363 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877344493 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.418503418 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.674622571 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.356006244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.37692556 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.942780704 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.409556163 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.837835291 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357963044 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.337265619 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956312959 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.356418317 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.690596476 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.338380081 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33862736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.914011761 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.357130403 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.337853823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.698055824 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.359166765 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606491535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.338138411 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.366816907 seconds)
  done (took 1112.309255597 seconds)
done (took 1388.013294807 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.338099204 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.344566559 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.323008522 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.346225508 seconds)
  done (took 26.609912548 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.349317324 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.345301813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.347677871 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.344248529 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.346514252 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.344620399 seconds)
  done (took 9.337496559 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.438181685 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.346429611 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.34626022 seconds)
  done (took 19.390871525 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567122775 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.752436835 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.73859015 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.800290203 seconds)
  done (took 11.119199628 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.346780628 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.347022596 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.346358477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.350485052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.350495416 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.350927698 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.351050583 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.349825214 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.351594732 seconds)
  done (took 13.40286992 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.698540854 seconds)
done (took 86.821279109 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.320241578 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426652401 seconds)
    (3/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.871751798 seconds)
    (4/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.979524051 seconds)
    (5/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.370004678 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.832102771 seconds)
    (7/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.340183237 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.622250854 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.399772182 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.759043162 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.383873955 seconds)
    (12/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.348692873 seconds)
    (13/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.418042462 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.358341033 seconds)
    (15/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.118461325 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.035561409 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.273734245 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.14451076 seconds)
    (19/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.367686864 seconds)
    (20/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.341633787 seconds)
    (21/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.785595219 seconds)
    (22/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44485005 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433869356 seconds)
    (24/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.298451376 seconds)
    (25/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.335876962 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.342186225 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.350659105 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456869331 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.33775988 seconds)
    (30/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.343661185 seconds)
    (31/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.721089337 seconds)
    (32/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.352427938 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450853772 seconds)
    (34/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.798672798 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.037454687 seconds)
    (36/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.770130992 seconds)
    (37/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.454091069 seconds)
    (38/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.603704456 seconds)
    (39/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.063623521 seconds)
    (40/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.531564309 seconds)
    (41/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.468617995 seconds)
    (42/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12109104 seconds)
    (43/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.739996337 seconds)
    (44/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.91235961 seconds)
    (45/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325156964 seconds)
    (46/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.402582599 seconds)
    (47/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.63943122 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.566851037 seconds)
    (49/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.165971394 seconds)
    (50/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.425229168 seconds)
    (51/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.477011099 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.323452387 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.838174542 seconds)
    (54/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.353226321 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.345127388 seconds)
    (56/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.489136106 seconds)
    (57/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.937042262 seconds)
    (58/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.367063364 seconds)
    (59/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.409726008 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.455672069 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.344983583 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.949659756 seconds)
    (63/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.341011806 seconds)
    (64/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.325661011 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.450661718 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.344070017 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.251407392 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.333962593 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.603642575 seconds)
    (70/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.433279501 seconds)
    (71/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.662411327 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.36559607 seconds)
    (73/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.36305524 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.787181066 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 5.38369114 seconds)
    (76/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.42435195 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.089167824 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.392787479 seconds)
    (79/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.8938629 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.087427718 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.346454526 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.357403619 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348482195 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.330033857 seconds)
    (85/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.206967951 seconds)
    (86/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.555289129 seconds)
    (87/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.365861414 seconds)
    (88/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.51190536 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.337475791 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.037913394 seconds)
    (91/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.374901425 seconds)
    (92/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.372651692 seconds)
    (93/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.349805086 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.476594709 seconds)
    (95/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.552148268 seconds)
    (96/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.372984854 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.325739284 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.347562378 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.356278831 seconds)
    (100/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.336762915 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.414592553 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.024785583 seconds)
    (103/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.257458308 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.350044563 seconds)
    (105/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.328221672 seconds)
    (106/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.326789824 seconds)
    (107/309) benchmarking ("sort", Bool, false)...
    done (took 1.871815912 seconds)
    (108/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.389838804 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.327428816 seconds)
    (110/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.626455251 seconds)
    (111/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.029325589 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.292884534 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.827469238 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.330778599 seconds)
    (115/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.434103782 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.392284933 seconds)
    (117/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.182481062 seconds)
    (118/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423532783 seconds)
    (119/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.631472086 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.916197711 seconds)
    (121/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.348691825 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.383361289 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.73632927 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.726187876 seconds)
    (125/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.469512883 seconds)
    (126/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.328474896 seconds)
    (127/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.222677206 seconds)
    (128/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.349252844 seconds)
    (129/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.473354727 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.35432817 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.950524172 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.208327451 seconds)
    (133/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.375362206 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.376605663 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.775470197 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.491426023 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.092853224 seconds)
    (138/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.256600474 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.43759109 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.349136012 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.86945772 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.394085211 seconds)
    (143/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.372345742 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.375913089 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.366392929 seconds)
    (146/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.348881976 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.350142838 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.349746593 seconds)
    (149/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.386139786 seconds)
    (150/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.23504995 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.099671155 seconds)
    (152/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.350112623 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.018510496 seconds)
    (154/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.350376312 seconds)
    (155/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.343963259 seconds)
    (156/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.043129201 seconds)
    (157/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.345731623 seconds)
    (158/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.401067729 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.495113388 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.949266568 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.837614566 seconds)
    (162/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.756742736 seconds)
    (163/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.738241773 seconds)
    (164/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.987685725 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.354009949 seconds)
    (166/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.371777005 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.372172054 seconds)
    (168/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.608730717 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.476363546 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.332875365 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.372266298 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.781146281 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.472477078 seconds)
    (174/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.777408367 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.936968316 seconds)
    (176/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416815261 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.378906147 seconds)
    (178/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.332521922 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.001950182 seconds)
    (180/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361185926 seconds)
    (181/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.621072067 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.035403894 seconds)
    (183/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.357778363 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.396387867 seconds)
    (185/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.16295696 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.60399596 seconds)
    (187/309) benchmarking ("sort", Int8, false)...
    done (took 4.380808371 seconds)
    (188/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.478495387 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.334063617 seconds)
    (190/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438503379 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.416830852 seconds)
    (192/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.411266556 seconds)
    (193/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.225977869 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.644106831 seconds)
    (195/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.332977982 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.239189977 seconds)
    (197/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.644018535 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.818618346 seconds)
    (199/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.47521941 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.373701582 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.353647939 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.935119302 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.022460277 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.571703027 seconds)
    (205/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.443656087 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.370408991 seconds)
    (207/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.839589004 seconds)
    (208/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.380979171 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.437983098 seconds)
    (210/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.377025262 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.607125638 seconds)
    (212/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.569666271 seconds)
    (213/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.355598387 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.383199841 seconds)
    (215/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.403816772 seconds)
    (216/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.308349854 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.381591952 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.724904097 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.881212717 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.095522264 seconds)
    (221/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.934479114 seconds)
    (222/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.363903562 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.304612222 seconds)
    (224/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.472067283 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.338397893 seconds)
    (226/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.355513514 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.382120188 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.355212507 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.355181078 seconds)
    (230/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.373253777 seconds)
    (231/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.335960832 seconds)
    (232/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.495591451 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.384066877 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.112072926 seconds)
    (235/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.37347736 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.099821787 seconds)
    (237/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.990295382 seconds)
    (238/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.336288542 seconds)
    (239/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.382004005 seconds)
    (240/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.372786683 seconds)
    (241/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.359762022 seconds)
    (242/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.170299317 seconds)
    (243/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.504574137 seconds)
    (244/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.628688683 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.362424072 seconds)
    (246/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.818807377 seconds)
    (247/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.337975818 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.336646031 seconds)
    (249/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.383251667 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.429366607 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.586387321 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.114144252 seconds)
    (253/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.353535299 seconds)
    (254/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.950317562 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.23785873 seconds)
    (256/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.427735051 seconds)
    (257/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.549185907 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.220572138 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.384073304 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.824346024 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.444455335 seconds)
    (262/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.0661308 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.363553415 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.358759358 seconds)
    (265/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.616782492 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.459491168 seconds)
    (267/309) benchmarking ("sort", BigInt, false)...
    done (took 6.356927283 seconds)
    (268/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.385558485 seconds)
    (269/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.661600678 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.484489537 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.746414876 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.423352722 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.338478026 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.028274352 seconds)
    (275/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.346687047 seconds)
    (276/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.762643783 seconds)
    (277/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.172169704 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.650076769 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.202580976 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.238153282 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.358846394 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.442817278 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.441795043 seconds)
    (284/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.375575834 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.199952732 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.474070292 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.198428119 seconds)
    (288/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.766993555 seconds)
    (289/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359688559 seconds)
    (290/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.344080499 seconds)
    (291/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.380321139 seconds)
    (292/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.421359486 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.402061132 seconds)
    (294/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.340647311 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.495763333 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.374440775 seconds)
    (297/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.36279971 seconds)
    (298/309) benchmarking ("sort", Float64, false)...
    done (took 5.729123262 seconds)
    (299/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.34274766 seconds)
    (300/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.093480925 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.792500837 seconds)
    (302/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404713819 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.590714077 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.40093883 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.380280506 seconds)
    (306/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.506666123 seconds)
    (307/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.464108481 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.342553661 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.439710634 seconds)
  done (took 1054.229168979 seconds)
done (took 1055.495452123 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.396288934 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39275508 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.374886181 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.39689717 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.485528975 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.400017025 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.385282896 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.37704651 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.422070307 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.423348683 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.373268707 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.3995241 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.376173213 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.374680589 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.373525157 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390517771 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.507472698 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.3748931 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.391737882 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.38456182 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.391652454 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373926916 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.425331618 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.401047063 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.379658723 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.377997446 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.379862264 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394636757 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.487525268 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.379446326 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.379543872 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.386005872 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.506986241 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.375070795 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.371573729 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.394151914 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.388179612 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.38550034 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.380105374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407709121 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.952924697 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.394855073 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.377054514 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.377769754 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.377177524 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.382092058 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.377883111 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.384574083 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391181571 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.391794904 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.945028305 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.411086089 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379541038 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.379202361 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.38858501 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.377230216 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.38185984 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394111439 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.396247726 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.395498217 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.496388361 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.383257834 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.380788823 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.394201334 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.384541039 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.982972175 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.392552026 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.383126647 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.957025615 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.403826061 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.984480235 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40572896 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.380026899 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391952539 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.410670055 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.511976317 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.374667601 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.378126505 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.385445199 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.378382093 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389718447 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392785498 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.384727174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.380999133 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394641074 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.40615366 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.389626707 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380760985 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.38890271 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.399727687 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.386751003 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.390822428 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384899121 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375982327 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.390304961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.384549706 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.383555823 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383048503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.386271428 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392381437 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.960694263 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417954507 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.377867384 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.379049832 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.380098177 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.395432736 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.958449896 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.400818143 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.40378555 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.428513399 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.382730931 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.501892202 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.385480392 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399396938 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.391300345 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.383868062 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.377650172 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.502142826 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.954602447 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.415948769 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.383619009 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.380484709 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400666522 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.3841157 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.381158369 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.518919075 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.384629984 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397818588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.503818378 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.393643567 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414947301 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.380476174 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.386678968 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.408206318 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.400370784 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.413680116 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.385867061 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40073115 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.398995781 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.379459032 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.393291765 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.394980503 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.385880016 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.390620925 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.378470378 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.408958462 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397802274 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398803403 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.406322693 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.503616219 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.381943278 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.505563044 seconds)
done (took 234.48249721 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.453198016 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.370967587 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.479336547 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.379099883 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.497225747 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.48354016 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.376554259 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.37737007 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.376286923 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.810197803 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.37679053 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.377758706 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.37827698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.375803036 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.477797403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.379544863 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.376041109 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.739355299 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.379533576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.46272645 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.377862828 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.377626816 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378060635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.781235383 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.378217867 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.378764246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.449626776 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.380149932 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.770721132 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.380949318 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.377044684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.74365756 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46818548 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.397256816 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.390133505 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.387951988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.487952088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400839575 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.463822045 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.476611037 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.471273535 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.419401866 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.38271206 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.374358942 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380465664 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.381628167 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.378466529 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.407853233 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.378658112 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.378104189 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.768253071 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.390486215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.379038854 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.379807162 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.379349353 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.412010148 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.378517868 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.382114163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.484481915 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.382497036 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443554564 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.814548712 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78424973 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.381899617 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.382431026 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379859516 seconds)
  done (took 151.942067846 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.447140269 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453333886 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.501132219 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.400414376 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430102089 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.506213644 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.401933539 seconds)
  done (took 11.433113909 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.387464327 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382164067 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.438347744 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441915105 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.383038358 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.564929934 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384372066 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.394840765 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.380074819 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.450532292 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.385102448 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383397602 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.390918171 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.375654816 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438141113 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.394477537 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.498101344 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.384659854 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384248353 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.540830309 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381954051 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.391901723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435527465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.395055149 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.38695784 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.389629353 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.023950068 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385737464 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.382070071 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.384846142 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382518635 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422783316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385506007 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.382747844 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383059697 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533879076 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38358611 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.383467956 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.386037399 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.382416203 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.385068375 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.386462496 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.386539847 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.384636548 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384929563 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407435216 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.386406091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385811222 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.386291627 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386987897 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.448636336 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385302601 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.384399542 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383496488 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.456368564 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392285538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.386795926 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.383822369 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386603458 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384780197 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.543161045 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440680545 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.387037452 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441066804 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388442697 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.386473471 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.386466579 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.38634664 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451822133 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.386858245 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.441734932 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.384702263 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.588452203 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409035236 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.389571399 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.389274691 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.390243255 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387022204 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380643991 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.392610381 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.384606781 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.387190186 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.39366339 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.394619523 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.386460645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.523295839 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.526279341 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.387147802 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.40159986 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.393337779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.386558844 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.454086805 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.388899884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.386583018 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451456588 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502569618 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44177986 seconds)
  done (took 158.677172189 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394452361 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396811602 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389080474 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.405388881 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.38868883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.389631454 seconds)
  done (took 9.661612163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.393292324 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.391496614 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.390151377 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.389835172 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.389829068 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.390609247 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390299273 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391119788 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392244077 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.389899873 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391260105 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.391219447 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.392081532 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.389689337 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.38803378 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388555785 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.389498186 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388199832 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389918396 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39002174 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.484894055 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389288747 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390217323 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.392872101 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.396757438 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.390954946 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.398936536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.390315005 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.391477109 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.395512316 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.413339396 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.392073347 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.392563122 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.397510097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.396405313 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.393105929 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396279428 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.393743102 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389195183 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393351066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.394613777 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392623158 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.392059592 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.395188438 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.394160124 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.397065804 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.398995014 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.400746426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.392647405 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394228576 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.393714392 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.393421532 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.394790759 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.395232859 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393691668 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.416547797 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398983737 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.393247401 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.392623068 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.394853343 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.396819257 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.393933321 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.397591498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.397491913 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.40103704 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.394358913 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.395373042 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399259053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393429529 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.393604811 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.395548306 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.391513818 seconds)
  done (took 102.756259776 seconds)
done (took 435.765088158 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.503495226 seconds)
  done (took 7.808228618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.610153704 seconds)
  done (took 7.916512973 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.845441382 seconds)
  done (took 24.157330721 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.466715927 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.507102497 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.394333415 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.413391246 seconds)
  done (took 27.08831898 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.595814101 seconds)
  done (took 7.903617687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.403663528 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.399893955 seconds)
  done (took 14.111817226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.60539286 seconds)
  done (took 7.912212535 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.999419406 seconds)
  done (took 8.311891929 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.401416882 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.415040745 seconds)
  done (took 14.397897041 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.370284634 seconds)
  done (took 7.677032698 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.621960799 seconds)
  done (took 8.929706856 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.872221962 seconds)
  done (took 8.180478626 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.395612731 seconds)
  done (took 7.702787516 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.159078871 seconds)
  done (took 10.465546082 seconds)
done (took 163.872784317 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.391583845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.393009385 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.389597678 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.390120704 seconds)
  done (took 26.871753619 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.432019555 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.434627586 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.434097252 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.443071637 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.435060878 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.433688347 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424269008 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.424640966 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.442791603 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.435264346 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.43445135 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436158211 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.432614103 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.426476043 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43577701 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.434201905 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445156264 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.434416825 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.425903906 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.436183614 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.401053408 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.443208825 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437049104 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.40064677 seconds)
  done (took 35.671320145 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.924467753 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.474673454 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.554288551 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453806488 seconds)
  done (took 7.716689343 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.451344485 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.453882848 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.469320959 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.505043175 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.532632773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.462291942 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.427581349 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.422130966 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.408438196 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.454237577 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.530827892 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.47085276 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.542159193 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.401990766 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.592644436 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.400215103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.402428139 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.454729234 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.505924771 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.518239288 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.403318713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.454041674 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.46351262 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.471642206 seconds)
  done (took 36.509409474 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.40241974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.420344573 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.401545844 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.401604846 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.410221031 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.401490381 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402289508 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.402969322 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.40223427 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.406933797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.400199664 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.413962845 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.401686253 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.401144649 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.408918104 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.402971668 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.408005946 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.401167911 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.40283873 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.408771169 seconds)
  done (took 29.412274718 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.395865312 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.254340664 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.746813412 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.654551624 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.397651985 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.402005776 seconds)
  done (took 28.16357793 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.481652088 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.645022354 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.401813569 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.814387949 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.907177986 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.422143552 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.403041259 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.670386538 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.042294741 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.044666218 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.470555759 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.480016458 seconds)
  done (took 21.097779614 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.405535449 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.39879677 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.412936495 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.414833901 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.468155474 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.427863394 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.412175488 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.398451602 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.471509427 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.490977424 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.428582954 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.469490732 seconds)
  done (took 38.515695306 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48843636 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45044014 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.551530707 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47232807 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126829086 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613180633 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449810395 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.855058233 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.407212426 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676662104 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407771433 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491276621 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.659738699 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409104562 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40684589 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.485435441 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651485282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960826077 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404888655 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.830773272 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428389413 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402154002 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898492359 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.440551645 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615460597 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549524323 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.664971416 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180779446 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73646665 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417050072 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414262567 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40383842 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678413673 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131100994 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522016501 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415094302 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40713152 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.954227698 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.391884118 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.874570659 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416305304 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405971478 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415496876 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404471423 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.339820294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416704183 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865932593 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.410861868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.116323294 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40541573 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416061193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49901543 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.409233154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.979769808 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471197393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.41067585 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.401734754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501924629 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995276299 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370865596 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420008102 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.342995408 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404708198 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.784474507 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113004168 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.528115177 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.409152071 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41036096 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341144238 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.782584591 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427428665 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544547305 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.429551313 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069668485 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2503378 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445164481 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.33901331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029560145 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412268341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.347757895 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635607526 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.18545682 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346634067 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.358870453 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341948313 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.221822207 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416004486 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.931392257 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428648458 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880504621 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.419453033 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425655689 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430902567 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632595658 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.286265934 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408084206 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.420108174 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52267474 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430253171 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.859855645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343377125 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.411930204 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665276168 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.620253474 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42348619 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.509267679 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653785657 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413437758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.430038291 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.421680354 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.426242747 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.055246069 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441062195 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.216489489 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427181245 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.188412136 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242144425 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413302743 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.514714832 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.412388468 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679406162 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.264376081 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.57069745 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476876824 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414213727 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.410378687 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.891347656 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009652354 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.569099149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.405404051 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409466833 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.444066694 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.41090816 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369552806 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.413144336 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420138279 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.189003088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.635476455 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418878867 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687821943 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346107671 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549308937 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.427043977 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.635194065 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.731163201 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.428447852 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672720215 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423226467 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415501643 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.427165209 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430360967 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512244173 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433799694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.414419083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.672580053 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.416719231 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.417205845 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935553832 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.194302794 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420724426 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.419691447 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418211188 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077647323 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405796123 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416657811 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.306469775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.42732939 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481745435 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420204258 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425949262 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.491400717 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436548989 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.417714784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.409535786 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639023257 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425663331 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.831742231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496799417 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.63111226 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079616248 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447207352 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.348280235 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.125787386 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.106012836 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413236235 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.605629868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414078403 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426709483 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425678404 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417257004 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.071502981 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43553735 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.789249418 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.422171407 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427061787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.419924478 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41584919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.470042167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.437533482 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422783517 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.432788885 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559094768 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.429704453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.349627302 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932631702 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.420559805 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415630643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.194308036 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450456298 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.783212947 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927376968 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678175025 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417070164 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427773565 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.890844635 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.451021935 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.417667621 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422872114 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426107526 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.434387522 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424388981 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.428246225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.826435009 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.789206505 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982817148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227713584 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054107139 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.460755979 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.43090773 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302442381 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873900125 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353255861 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07634975 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629955944 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891216687 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3753099 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640089654 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.741706073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.299405961 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42980492 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64788307 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4425894 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.428434443 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430056902 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.629777888 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451644005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418244061 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.352120425 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.699296175 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677248947 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419592434 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497062591 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876789419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434713513 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.196171798 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.461046928 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.918935529 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633414862 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050814442 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.815236233 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418662739 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.436453877 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931191984 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422811095 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948490709 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114814027 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455944672 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.643607421 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360876902 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430319868 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.430383241 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.416515422 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.971031631 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.427002411 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677622757 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432669945 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355322543 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437456724 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028039361 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.296247049 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.426002596 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420718821 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280803391 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434577134 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755959973 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421720902 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.463825203 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444148951 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354824644 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355712722 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.113817694 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42994152 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390233107 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991266436 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.421838059 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454313172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427038843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.275776177 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.679235711 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.436610685 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.085587037 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668554123 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42214337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44557838 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.52274378 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435425096 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.403702329 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.316006024 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65856113 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427613673 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.648381494 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.612667246 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322899829 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.471302166 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635850438 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.314328205 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431515598 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711331791 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.158917412 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.423297553 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209958997 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467933315 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433689058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.442712874 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.425878062 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44396997 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517285473 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435139129 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.434690712 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.4344249 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616058008 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425808463 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425346519 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.438938316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518225254 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275562875 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.468659697 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.199011426 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096526503 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319983879 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.107472222 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457857159 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425170048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426361999 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360185294 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577668141 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.953832889 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699686282 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545492007 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.442292012 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449268757 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429308788 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439004575 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640845993 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700084538 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.400716613 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427099245 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.219107162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.308616633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43878882 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.639016506 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999187759 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064143451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547366517 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426477367 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884466605 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701968467 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.517816897 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427645301 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021735304 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435826182 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.937393861 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.45512102 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430681236 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574629195 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438590146 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14921522 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.458803825 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.591932775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.199745243 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.921658605 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.686063616 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.989615514 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.439434402 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097227684 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243134815 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694668057 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498772757 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438686394 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.535191987 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579302202 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.429395363 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.310480411 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427782764 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277865464 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.139834466 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.439576978 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096484508 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713856728 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.425798325 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.433477263 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451283608 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.438437472 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.654834623 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.235165038 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654560877 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.441260782 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438402085 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003329452 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.091953885 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463542104 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363763818 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4341835 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716824114 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.690670414 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451985968 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.88361054 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.140914663 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050485111 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.407460147 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453709708 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431364369 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.226731973 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094452253 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.502591561 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037107861 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.094762693 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43128508 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710461357 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.437414036 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.447024572 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710876789 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.43564399 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.436929235 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446955818 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.101432667 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.32233786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.439806386 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.000043512 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.371789857 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.660119258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469278386 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389162212 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432033015 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.626402321 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43188129 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.553347869 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444869547 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.433228945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432031397 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.189308235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.713892043 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.440208825 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.416730057 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.452441655 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444911579 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532921869 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692908128 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438499529 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.106028767 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.783992141 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689397555 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444602322 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.416801989 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.436555213 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434872083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158999241 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454536311 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435549977 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072352524 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.447869819 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.447973 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.438320353 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.651880896 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646149818 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446837803 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446516134 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434033646 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453982402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.33381367 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.208097767 seconds)
  done (took 1696.492002358 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488692676 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.481051704 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.473495661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.451035126 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456103392 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547370248 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.459995689 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.566063741 seconds)
  done (took 53.272333732 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.44582577 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.59518954 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.467971161 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.443641596 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.443587801 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.434559288 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.94594173 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.453771096 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.463544315 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.44402608 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.454090301 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.43710775 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.153795146 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.443885803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.441013867 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.434985774 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.443516639 seconds)
  done (took 67.299891179 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.440901192 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.079862429 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.483411588 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.440531476 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.097228577 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.46207895 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.007504739 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.497927366 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.439088483 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.556359836 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.096533039 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.492248442 seconds)
  done (took 82.443605391 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.444554858 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.445290935 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.44538056 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.445756019 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445267498 seconds)
  done (took 8.576768586 seconds)
done (took 2133.357422551 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.685070522 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.238374685 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.133909992 seconds)
  done (took 5.722906319 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.574324899 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.628195969 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.780335806 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.769652242 seconds)
  done (took 8.097890161 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.716974239 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.824368304 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623458629 seconds)
  done (took 6.51030651 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.060753116 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.436863194 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.467010235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.432180319 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.434596571 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.434674314 seconds)
  done (took 20.648683161 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.438506897 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.441053416 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.437102957 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.440052947 seconds)
  done (took 7.103492131 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.413561741 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.157903725 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.414178617 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.429597753 seconds)
  done (took 18.761408454 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.183671759 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.196452982 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.181692498 seconds)
  done (took 7.90883068 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.4505118 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.2785298 seconds)
  done (took 10.07563522 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.740662185 seconds)
  done (took 3.088350503 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.569781471 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.767085244 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.602174294 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.581741473 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.176876885 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.01936076 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.388449671 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.887556226 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.551792634 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.080506234 seconds)
  done (took 33.973601001 seconds)
done (took 140.898069051 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.738626496 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834507618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.639085831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.709932207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.677725013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.640067415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.723469217 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.678975858 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.215189143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.208498719 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.754289887 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.680112808 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.670001582 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.835525977 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.670614359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.460197024 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.670049364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.780747384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.401577822 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.440999807 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.723686993 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.345766027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.58288152 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.365319595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.670719677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.592052957 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.927922464 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.462277419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.449581209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.943597609 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.591665722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.436116124 seconds)
  done (took 200.870721987 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.44076332 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.436838541 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.454502951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.461911446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.43538909 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.470837131 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436253177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.456865843 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448435184 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.436440309 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.444240648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.439002595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.438709205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.453071211 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.439293641 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450449334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.442707257 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.437235662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.437500717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.461075249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.437523088 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.456456297 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.457172878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.464317369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438069236 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.43896261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.458523717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.437636862 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.43782974 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.447459827 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.438823693 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.456623544 seconds)
  done (took 207.642461818 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.438901397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439764162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437993998 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.437855985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.455567244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.439259164 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.439396502 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454108587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448483432 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.446101069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.438186056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.439181251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.439183254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438989808 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.457700852 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446063883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.443966239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.439654107 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.470380952 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.438371284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.460616149 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.45091671 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.448268631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.438731069 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.459013837 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.440243526 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.457852257 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.439396338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.438347782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.455876191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.440286919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471775612 seconds)
  done (took 207.64217391 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.644690591 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.448709559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.450150482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.404264687 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.448514374 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.44891386 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.447961717 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.638530237 seconds)
  done (took 15.285566566 seconds)
done (took 632.795564749 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.890832419 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.593830435 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.664268162 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.470069135 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.315727392 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.489967585 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.469660294 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656683409 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.426335369 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.668389525 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.839965916 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.486050883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.997269534 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.467996584 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745467197 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.576323729 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.385616267 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.510086305 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.814639094 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.082099159 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.753247609 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.020065062 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.681143755 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.407021677 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.0115667 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.019508086 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.296317502 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.372100404 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.489130245 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820605431 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.251231413 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.56182202 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.54252262 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.541179383 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.597838709 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.578512966 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.533204864 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.538704021 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.684383374 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.779513805 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.0757484 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.236096539 seconds)
  done (took 98.698237251 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.434804222 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.435641941 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.434501827 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.433894481 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.43492886 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.43510043 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.434285092 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.433665757 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.433406787 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.433560048 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.433386078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.435375339 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.434961454 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.43525011 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.434833484 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.433427566 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.434352633 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.43794717 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.434789686 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.435423021 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.43571814 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.438221205 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.435581862 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.434004674 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.435545927 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.436609071 seconds)
  done (took 38.668425646 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453683201 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.720851327 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.899213347 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.458949724 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.453065018 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.457330398 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542621589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45567726 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.455488416 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.457266432 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.635184355 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.457606975 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491803574 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.930762108 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.455932553 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.456775957 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.456153789 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.453611896 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.728580813 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463179483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566919377 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.458193506 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.543566332 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.46475351 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47812828 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.456012672 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.460833299 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983941917 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.476381314 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637608047 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.39537888 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545736475 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.933050212 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.933998485 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.405631125 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.461730924 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.45642734 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.64132145 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.458231217 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.456196712 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.546034353 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.456924923 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.914895874 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.106969321 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.478036001 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.458268355 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.009004341 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.661972371 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.7410459 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464768661 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936575032 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.459447724 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.459712739 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.459048641 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.741304184 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.463771584 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.458179886 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.019899998 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.483287698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.54744578 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.457880704 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.457907059 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.73826863 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.458242715 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.726919508 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.460013305 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.466394529 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.481432148 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.914323763 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.460028475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13368652 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.479201469 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.459336199 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.638861922 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.724858271 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.046405032 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.48405967 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742161841 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.946721258 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.565838101 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.462805261 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.975723548 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.568965061 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.463867352 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.462483469 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.461330719 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.460171094 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.508226159 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.546119098 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.053230189 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.140324278 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043465482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.572355283 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.471347884 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.461107815 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.023027861 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.482681978 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.460533543 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.910456216 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.130315107 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.480794784 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.469403166 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.137282846 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.483811008 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.551886891 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.466279433 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.922409319 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.461647727 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512790572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.460978937 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.467461569 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.487101042 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.551650419 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.465506676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463342894 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.100830791 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.668771776 seconds)
  done (took 191.980611452 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.462649508 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.4550964 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.457167456 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.454606225 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.454391865 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.462549126 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.455139934 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.45407451 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.460966465 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.455985107 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.454925388 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.455941502 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.455785316 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.46993747 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.467602676 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.461715086 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.066257683 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.454744118 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.471660992 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.455868923 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.294431717 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.459938477 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.454598529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.479210513 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.456501014 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.457683826 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.474922832 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.459103184 seconds)
  done (took 155.692263298 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.465396973 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.114557832 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.485674741 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.614074037 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.488099921 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.461399261 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.613038446 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.529001263 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.483651929 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.461368615 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.463124825 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.811373522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.465159725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.056744585 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.687407052 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.634813891 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.054847276 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.485785516 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.462015007 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.46434224 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.6160345 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.470480857 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.812609582 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.114188644 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.486615691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.11670277 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.450292404 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.466393307 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.464042728 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.115632332 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.484175196 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.813858948 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.554391228 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.532700789 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.136749036 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.077340124 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.078521491 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.636629722 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.464494482 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.462916061 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.464606225 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.44922455 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.120376017 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.489471115 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.466187762 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107119692 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.487929955 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.46721507 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.471056825 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.463910353 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533659545 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.554787284 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.836708446 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.122171877 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.57513227 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.482019884 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.616367987 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.874724192 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.468208367 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.060628722 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.453594054 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.123150069 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.489528128 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.450327813 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469970375 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.476431254 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.639937452 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617732563 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.062937047 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487646067 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061444991 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.660556438 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.467215904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.466831683 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.472036947 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.126035434 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.084832039 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.660318871 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.623088964 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.694367042 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.454000319 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.467913985 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.453187796 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.55716093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.466970381 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.12698219 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08388702 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488147368 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.470302542 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.470462329 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.470678725 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.675523503 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.147547937 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.577378694 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.051215513 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.841504881 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.822153888 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.47167377 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.536212614 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.488336301 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.823145308 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472607403 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.535605281 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.920342046 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.823049931 seconds)
  done (took 176.425967566 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.741039651 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.825177956 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.567163557 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.614599874 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.117869362 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.061261256 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.776925822 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.6196399 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.590333611 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.752269713 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.755651961 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.561598957 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.67145841 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552200951 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.252744501 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.565512628 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.590405989 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620525435 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.596341827 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.574565145 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.173517325 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.775312228 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.658134377 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.505108525 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.570263749 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.351845536 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.069811414 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.041963784 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.657562569 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.946277684 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.030578996 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.674182654 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.520985393 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.2194308 seconds)
  done (took 70.978147814 seconds)
done (took 733.803120979 seconds)
SAVING RESULT...
DONE!
