cset: moving following pidspec: 19518
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.348548964 seconds)
loading group "string"... done (took 0.54500976 seconds)
loading group "linalg"... done (took 7.036458891 seconds)
loading group "parallel"... done (took 0.155391237 seconds)
loading group "find"... done (took 1.12101704 seconds)
loading group "tuple"... done (took 1.715582775 seconds)
loading group "dates"... done (took 1.212381736 seconds)
loading group "micro"... done (took 0.216807964 seconds)
loading group "io"... done (took 0.989407981 seconds)
loading group "scalar"... done (took 37.772865861 seconds)
loading group "sparse"... done (took 11.718752642 seconds)
loading group "broadcast"... done (took 0.89805216 seconds)
loading group "union"... done (took 12.439902181 seconds)
loading group "simd"... done (took 4.505338593 seconds)
loading group "random"... done (took 8.810502787 seconds)
loading group "problem"... done (took 1.850322726 seconds)
loading group "array"... done (took 20.288700378 seconds)
loading group "misc"... done (took 1.626628686 seconds)
loading group "sort"... done (took 3.188782653 seconds)
loading group "collection"... done (took 16.828297665 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.496736486 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124192126 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114288167 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118561464 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146453992 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.110276838 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12325237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083256185 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.767181055 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145060693 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116343223 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41179468 seconds)
done (took 5.053746708 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174648465 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079735284 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078295473 seconds)
  done (took 1.286032143 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064151904 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119648943 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065419439 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065154378 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065481966 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064274761 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064301678 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064759319 seconds)
  done (took 1.64501806 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072758716 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068179872 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06724503 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066885877 seconds)
  done (took 1.4094236 seconds)
done (took 5.719207169 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753187098 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203412841 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.179283671 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412543296 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129455292 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156990184 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.630035186 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.307712717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.185598402 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081259345 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104985815 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.322900192 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107409965 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.63561884 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074395044 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089048082 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136281574 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.398900151 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064563018 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.078925238 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.086051018 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124938959 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08276312 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.071526031 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.139182508 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064780183 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132697773 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.076853048 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063433385 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204465182 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.169255094 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649252281 seconds)
  done (took 10.088437087 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09684774 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097715131 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067845471 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122548416 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09676552 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068454044 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.06958686 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065831782 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086757059 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128678695 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088356995 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101244043 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065036298 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067544988 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083543745 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204158219 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080277577 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080318662 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069314067 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073813808 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108569036 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077340117 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07735616 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077100561 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127720787 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176162072 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093142158 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09636969 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066200328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080461008 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113507683 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125869415 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064566534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065115464 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124570537 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093173466 seconds)
  done (took 4.548857574 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.955479647 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138946239 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090385931 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133807247 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.063433058 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107338741 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064424477 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.078065612 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197672174 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.425178307 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.571159815 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.080996075 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108903396 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10048498 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064150861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.065080501 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.087988225 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065485466 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.348271788 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.093262078 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100453771 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077328943 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066601257 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065696116 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33776805 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06463731 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060479955 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064481515 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.054319064 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.119845648 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065040933 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917560931 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122095204 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.064025532 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097785232 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166724111 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087152669 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.269173936 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065916814 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061841333 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147030657 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.067317402 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063894028 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081180788 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100643705 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.110230257 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062322386 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064701572 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.157322282 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062010025 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07606162 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061090437 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.619635592 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.151075 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076063592 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063234586 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250106643 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082435476 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06624348 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062116432 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.171244694 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137088914 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066877847 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065993173 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067580542 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069024436 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360120252 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065198028 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.720712584 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067493235 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076128122 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06675539 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066518172 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072300221 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069455359 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083628846 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065044176 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074716663 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064711302 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064763991 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065554787 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084403303 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354043336 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.064204923 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065537164 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060836911 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062717452 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085059021 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095113913 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063623699 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.062333449 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097368174 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065091681 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.063238268 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102365975 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063496187 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.081143828 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.066204994 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109971421 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.164502055 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.07917471 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064885672 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097053009 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069916675 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102761293 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080733952 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065870992 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.393344816 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062913723 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.061536716 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065394903 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.062238929 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064736259 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063414843 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07696502 seconds)
  done (took 20.32009414 seconds)
done (took 37.04823031 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.23861245 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.076288576 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076206061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079664328 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074881555 seconds)
  done (took 1.767304011 seconds)
done (took 2.968952536 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120483812 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098500457 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063430479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094774734 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062952174 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099840124 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098873236 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078545723 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096427408 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.061026912 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092779514 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06103612 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060984469 seconds)
  done (took 2.314770298 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082402838 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082690452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068552185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081011944 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063251306 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080451019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077636255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08561565 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077369101 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069335625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060780441 seconds)
  done (took 2.029049195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081061976 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081975668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068751959 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08094868 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065511469 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080327248 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080222708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084276445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080365806 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072092646 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062730662 seconds)
  done (took 2.034446619 seconds)
done (took 7.572688056 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076469582 seconds)
  done (took 1.26063399 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59493382 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.078272824 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079032949 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109465275 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182504461 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118813883 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.28081101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086959856 seconds)
  done (took 8.897359034 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088257551 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.081642129 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070900701 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070950084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070603952 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071462315 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069539083 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067922455 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070512333 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.067816497 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067377879 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065332371 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065547729 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065249075 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068889616 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066026037 seconds)
  done (took 2.392891924 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.08957763 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.087685631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071046338 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07285079 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070811529 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070638957 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.070953372 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070323774 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067756811 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069067726 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071457003 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070505029 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068458787 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062195103 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.0708151 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072468392 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067947951 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070652037 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071437219 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071369527 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.071809557 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061392406 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068438945 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070935632 seconds)
  done (took 3.001995787 seconds)
done (took 16.749096979 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113084339 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069386411 seconds)
  done (took 1.375066085 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079653376 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081342687 seconds)
  done (took 1.359024583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083570777 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063255363 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089209439 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077009887 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063251058 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063044193 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086485312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063131124 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062824357 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.063339405 seconds)
  done (took 1.915594992 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068285565 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075946275 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068166157 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078633997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.071150535 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061266044 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069829887 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.064895524 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075725561 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060166919 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068837686 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079746499 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068522903 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081557993 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069766952 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065970518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069691633 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066751922 seconds)
  done (took 2.465616375 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065268203 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065946274 seconds)
  done (took 1.335857277 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066825773 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062990262 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066855785 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066619044 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062455409 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061257232 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062642608 seconds)
  done (took 1.648313658 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38221538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109532531 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303549573 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069701127 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0813279 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252099506 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064097908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069660471 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069367535 seconds)
  done (took 2.647748135 seconds)
done (took 13.955486558 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078149548 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084971555 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095081049 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.369360235 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091234844 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064418031 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112552487 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191383214 seconds)
done (took 2.306600539 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211091373 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.60886988 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384049061 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.199584737 seconds)
  done (took 2.400775345 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325245866 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085744043 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.057221417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066170905 seconds)
  done (took 1.748581176 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065034493 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067891174 seconds)
  done (took 1.351708572 seconds)
done (took 6.928014573 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065638876 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064512833 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063343781 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08439096 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064629601 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062137129 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06236404 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062570415 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064438468 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064970664 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067730287 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06496984 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064865296 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064755172 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062234431 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062382446 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06516757 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062246272 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062892079 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062564788 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064660107 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062307141 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062536993 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063820404 seconds)
  done (took 2.804672464 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083136623 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066120466 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07125043 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071079264 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069351605 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070214614 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070316643 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065290411 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070348491 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067188386 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06935849 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06911997 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067059605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069359422 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066990472 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069652237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070308714 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065335801 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067610289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069219994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07022139 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065765262 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069037992 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070176969 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069291492 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07063082 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067173587 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065747836 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070156077 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068575513 seconds)
  done (took 3.303381944 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068994314 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062763968 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063672949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069684956 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063622578 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062885635 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062289826 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063158634 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063280643 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062385839 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063892142 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062129324 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062648602 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063499264 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063444256 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065993739 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078322285 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063198314 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062480082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.062773723 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065570666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062648959 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062941434 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06262329 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062685579 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062435312 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063244998 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062590228 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063192041 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062354771 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.065304565 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065972675 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062087349 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068847483 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066030095 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062060066 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066483768 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061826049 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063130386 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061987255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062130193 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0621775 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062440983 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068547576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062201473 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064158947 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062477356 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063381051 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062271669 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064874151 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061775107 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061750768 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064156557 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063739194 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06598315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061720052 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062916851 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061483063 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063393889 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062061563 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061819337 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062181267 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064502126 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062699354 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076772834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.06899883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062216969 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063919659 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.062639866 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065075632 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063788516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075161542 seconds)
  done (took 5.847715339 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091408749 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086786686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064618455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064105388 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060960322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062972054 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066635038 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0631303 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06452509 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068827955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063078808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063913467 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.178660746 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076039821 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063321648 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064386151 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069092051 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061146766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063025156 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066202476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063110345 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066246354 seconds)
  done (took 2.830866728 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154468613 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068912257 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105222225 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072450835 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066914736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072333232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068697595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068788541 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069093649 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06721647 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066961294 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06860541 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066589286 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067050549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066979024 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067049098 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068833845 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066832819 seconds)
  done (took 2.579985647 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077364213 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065307118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085686129 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065152817 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065215285 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067381644 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070098446 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073573191 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067044338 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06473414 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073511325 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06698056 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067464889 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064703275 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066812805 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.064555856 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06690653 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064659971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073016264 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069355377 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069522025 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073355413 seconds)
  done (took 2.752847763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078616247 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.065817649 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08098986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066139145 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059881087 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062241784 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067469007 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.063174884 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066936621 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06445635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063313092 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061513407 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06648747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062714708 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066154238 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062827849 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064560389 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064217588 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065942888 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060610071 seconds)
  done (took 2.54693799 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086571282 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067154849 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06574968 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07353767 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0651615 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064714843 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072740891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064359372 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064501692 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084491152 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064378597 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064213195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0721629 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070297984 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066116719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0741712 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074038362 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074224542 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06607209 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06640949 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086113815 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066051383 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074145581 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066062773 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066611346 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066313346 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066604354 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071573479 seconds)
  done (took 3.200317648 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065144062 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064746427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06343781 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062746524 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06290394 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062301879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062640978 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062360742 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064617189 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062266912 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064588433 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064518703 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064632002 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064364795 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064440377 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064691392 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064926915 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062471118 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0620859 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062487944 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064358749 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064784028 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064760744 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062039408 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06233499 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064557843 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062169869 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062230654 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064621571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062145022 seconds)
  done (took 3.146153314 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074607677 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071905846 seconds)
  done (took 1.386740829 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062484325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080082216 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062740347 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068475699 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069010816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06530544 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072487655 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06893099 seconds)
  done (took 1.783239994 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08166444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076960976 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066872814 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080185515 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075614015 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081486509 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131644853 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066253797 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071431961 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062657197 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078441579 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064044019 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070784015 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0653627 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070758141 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071094488 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.062741445 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071766351 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067155754 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063420397 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066276934 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073588381 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067040064 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060655514 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065785035 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087039164 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076198451 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064648269 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067744041 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07196441 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070403875 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.058949449 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064891345 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065227675 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062460264 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074874892 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080433057 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067173434 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.072903701 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066342099 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076442613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060199845 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06990256 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071808704 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075003634 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066037919 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065846946 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060297464 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062912121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067659257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060336396 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065521816 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059821429 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074605591 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068467295 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07585251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063690817 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066394407 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067631864 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068143651 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071711933 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067145098 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067303656 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06471088 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0747739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069354094 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074295893 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060049904 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059071731 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063017871 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074772514 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087691088 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071068953 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065639085 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066022698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06274566 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067953342 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066091235 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070656381 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071251422 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065387789 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070797986 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072401165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065423631 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067474796 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073625728 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063429126 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068392646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063671436 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082117498 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064756046 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063504923 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06274727 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075929206 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068681126 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065246808 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062997588 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072148458 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059511273 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066104791 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066601557 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065543195 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075905411 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06898029 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069280062 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072705405 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071526428 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064423073 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067028433 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060994299 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064971012 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063258045 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071047135 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058673344 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066695264 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065148039 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065024609 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072689263 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06225558 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064050436 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071528965 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069916675 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.063120908 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061023204 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066838554 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064148656 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06726125 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071637165 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062860439 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059302889 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059127055 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067170156 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063944302 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.066920839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068469058 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.066322879 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058405812 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062333919 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068669461 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.072430308 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.0639674 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.064404842 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069547404 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.064941359 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063059752 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.069871984 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066290176 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062875877 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069263976 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064630473 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059192486 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066694145 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.066228841 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062516259 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067215168 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066814578 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.065750183 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064686387 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062428354 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070687221 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06457768 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062690229 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063722584 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062991845 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.072952662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.064437234 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.056966543 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059032662 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.06899205 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059146723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06082142 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060172157 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.063269763 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.062041402 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059521117 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.060613949 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.063418946 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070826004 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06521188 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062720662 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.065980083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07183614 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.060674851 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.063394478 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.061543466 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06241511 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061862015 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.069146406 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.066207834 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065203196 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.063633263 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.058799916 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066318918 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.067878433 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061089269 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058776368 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.059812853 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.065341692 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.066389285 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06435973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063125421 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060073926 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.062058991 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064525406 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.063848332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.061163366 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060125494 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.06712329 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059693401 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067734498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.061892988 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.070869418 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.064359717 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.056554109 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06463134 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060559696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.066776403 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056891956 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.059003871 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.060695292 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062174153 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060451196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.063509692 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.055747704 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068270808 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068778857 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06137624 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061072877 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.061471977 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.068155313 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062391547 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064574186 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.064856635 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.067595442 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070823743 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.060804668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.064371046 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07136158 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060937342 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055221035 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066219119 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060679539 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060092392 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06049442 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.059349154 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.294856226 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075034653 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071833326 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059451527 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068029149 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064377819 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06512988 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060716727 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.0694585 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068737082 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066023151 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072479779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066710196 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066972813 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068758065 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.064843821 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066246861 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066596467 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068997085 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065839703 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066997164 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065274238 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067726915 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063912659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062389252 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067120314 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.064929546 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065562273 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070354671 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064214801 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065176073 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066954085 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065768595 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066291843 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064923976 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064483194 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066818233 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065559377 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064899746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067060953 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.059829505 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072073253 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064429227 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072150843 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065316434 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061729092 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072435328 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066540937 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070076154 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065439265 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064808721 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065793452 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064642093 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067425664 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071293512 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062991714 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074880133 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072421247 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066530814 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069469068 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065299887 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066245565 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06506155 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066926033 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067186227 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066784906 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065714967 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071176775 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068460236 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067037556 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067814231 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067433118 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066772887 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066970963 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060837502 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065306108 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065185906 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066152095 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076275704 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066591021 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065695083 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065834394 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066722409 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064768115 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06226913 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074455561 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076102819 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066480289 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072769746 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064577769 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066562453 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075306908 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057964954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062110355 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06167222 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061785876 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071017212 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064242402 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.073015413 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063987741 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062895005 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061180115 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064541626 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063009034 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058737342 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061489586 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067292062 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062836199 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063351713 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064135737 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066191518 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065190241 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073236243 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063078764 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06504636 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063843236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061014993 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063446096 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064122717 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067283541 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066268024 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06305583 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062272914 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064615014 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065725896 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066079498 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064610476 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066631124 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.208923518 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063767151 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066401354 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068152193 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060909388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069636048 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065647146 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066164429 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065097315 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069599437 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068530447 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066947496 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074012248 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064927028 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065428009 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064799894 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06257147 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064721047 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064227365 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064215501 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063371307 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066187385 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073516084 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063456904 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069016728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065541013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065887905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073076283 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066563159 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067592366 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072211917 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065104982 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066185543 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073780647 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070667171 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069350514 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067079268 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067532327 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070846625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064975981 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070820954 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064508994 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065287803 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065381924 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061571469 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064009409 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064335796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063088237 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069912944 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064864267 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062957852 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063273858 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06211177 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064775346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06695902 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070796042 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066039986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0665713 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058900748 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061375074 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064952107 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061404152 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065184908 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06632564 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069391237 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065894484 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06415674 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062945916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.072821918 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069231026 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067792505 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061938873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.068776453 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066327111 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066442364 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065088737 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064437643 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066136594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068417473 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066575193 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064614999 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072067949 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068683061 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065922489 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066550897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065694923 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06546197 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060505886 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06582371 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066786823 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070201739 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067113504 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06506615 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07555112 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062695379 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065224584 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068242969 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06455489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.069408929 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060566584 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066182807 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066451559 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066019125 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060654651 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064381442 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062812878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067479614 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064073465 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060816382 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076164837 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074242467 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068307831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064433561 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06396359 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060491462 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060522338 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064424735 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066245346 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066460507 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074850814 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063807521 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064021543 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060295305 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064946373 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067750421 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067879032 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062101827 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059921433 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.19972239 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068007577 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.069560431 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063140131 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064010764 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066745102 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.06677361 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062741881 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068985901 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062728782 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069750783 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077574651 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065473443 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065809504 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072384643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072867386 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066902081 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061397191 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067195304 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068656923 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065303412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067035954 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066935909 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080923007 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069505632 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065542411 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065016921 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067897667 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064113244 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071525812 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065026782 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064565613 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068708088 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065685169 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073168444 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06698837 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072119047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066892192 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067306937 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063178949 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064260965 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062614375 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062998305 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066163962 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064524351 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069849976 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072391559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062725495 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074041283 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072612986 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065462647 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061412572 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064007454 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064212145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060463323 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066263363 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063966085 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063753959 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063696716 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064208016 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065994222 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070841237 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06655588 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066099851 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065131788 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059440186 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067572859 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067752011 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066078973 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061654215 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065158205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06610595 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069475319 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068832904 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063061281 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066726019 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066884376 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066047104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060756297 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07173459 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064165839 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067245263 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064533411 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065855277 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066160889 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068557374 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071185524 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066517078 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067176975 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069007607 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067234242 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062308348 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062184771 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070212388 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062975025 seconds)
  done (took 41.326475561 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099805774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061635544 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059993054 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060495396 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072055995 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061450158 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06110347 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061324529 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060519883 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063607416 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059675644 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060199036 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069236269 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076704487 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071536824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064128478 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059370749 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060599073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05984231 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060591328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068465481 seconds)
  done (took 2.746029532 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073889895 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068330296 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071532279 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073894849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065247874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068881611 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071061789 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068787644 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074627174 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064621711 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074427299 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068683961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065605169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.064791716 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065712996 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069447008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073821383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065908509 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.068379967 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070354427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068449715 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070256515 seconds)
  done (took 2.869833876 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066339009 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063897872 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065981014 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059424841 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064589282 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.059673704 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06757018 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063095472 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068927784 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073885247 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063973236 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064115778 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066514813 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060717111 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064815485 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063263401 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109173282 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068733691 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064685424 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066086446 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060195845 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066631325 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06057792 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060585641 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063351001 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068374871 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065359852 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062334561 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063811415 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.062376907 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06395908 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062544256 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065867212 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064993909 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06350432 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.063921508 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064529787 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064539269 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060205069 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062965539 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065466427 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06077808 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065339619 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066347679 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063071192 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062910558 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066423665 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064709563 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060291081 seconds)
  done (took 4.537984033 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079087699 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108643464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067623041 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087957738 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08006618 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075396576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06761786 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087444671 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062491948 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063655454 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081243288 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079669767 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065133312 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069782076 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071419016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065243673 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066318119 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063737278 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068888082 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064390412 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068975947 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071112963 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079345384 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078230355 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068860256 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063775982 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063646672 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069012318 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077849128 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.06937037 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069247263 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069319227 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080015268 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069806232 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063753677 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066636523 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080754836 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064767663 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067547995 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06233752 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066764128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069320202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070818715 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081159009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065132631 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070038878 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064632085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061954618 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077956588 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06717065 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072486631 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079319446 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068489608 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064808805 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069980801 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080053973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064876404 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063319626 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068122449 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077760537 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062654666 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068930473 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078613922 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066754517 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072005528 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079379076 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069933633 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068368974 seconds)
  done (took 6.342132365 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074478691 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.069020097 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078187625 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077702076 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069868003 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.06983382 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069316385 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.06918153 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069278487 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074657584 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070549758 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091741072 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067044111 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074641572 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071875473 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071980973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071810303 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070588949 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069971125 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069373878 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069887404 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077335446 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069455972 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077673831 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095453351 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066911166 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071221397 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071562927 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079738014 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071632355 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078845343 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071665306 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072039673 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079889208 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078715534 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070933835 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063978158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071080638 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071131627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071162643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066198015 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079390014 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071389291 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066748956 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071568909 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070821423 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079400171 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07819126 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072024075 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074233787 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.06955873 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077361823 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069123369 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069719013 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077537074 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10243397 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077657801 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077774368 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069822543 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077969908 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078311619 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084587355 seconds)
  done (took 5.965358731 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082501448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073260635 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074904066 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058738403 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06149144 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067125624 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061586607 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061894537 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071936724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071824711 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074645923 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067258547 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069850073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074262574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067025332 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070276126 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067029946 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066984286 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071783655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067245485 seconds)
  done (took 2.752954115 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073693481 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081793758 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065697341 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071113532 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068061955 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070945151 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067576038 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068089417 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06566647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0669738 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073847547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073535379 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064081319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069101423 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073097792 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068914333 seconds)
  done (took 2.486415042 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073455265 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069257787 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076985976 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.064615236 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061320311 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059508378 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063611228 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.05922079 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059695744 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.074837782 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062978056 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.065279286 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062762871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061391677 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060369745 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066137419 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059170829 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060383573 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063417743 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076328389 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075184264 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063230534 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065301981 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064844537 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0653207 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07002794 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064312222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.061734423 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061823742 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064864475 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065793069 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068320819 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06186149 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063038276 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063377858 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062639923 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064618406 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06497379 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06737307 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06459962 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062456084 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064496987 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064422826 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065776936 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061073598 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065233618 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061192974 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066924678 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062993332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065592293 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064681537 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067441374 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065692951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072112343 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068245247 seconds)
  done (took 4.947563881 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078212155 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067289608 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059834647 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062737059 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067759803 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066685672 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06862241 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066790052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066829129 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063071106 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066528608 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066700689 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065616882 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067374538 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065360851 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06748574 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059298929 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064601425 seconds)
  done (took 2.568438548 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070204891 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064185228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070175153 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062977304 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062956898 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06535692 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058992883 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062277764 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062395257 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063463641 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063504203 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065640545 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061943773 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066868825 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065311183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064944174 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066983739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06332064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064388417 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060688555 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066703657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063561542 seconds)
  done (took 2.784562373 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092112472 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.079689381 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137856387 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078356122 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082608117 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070648649 seconds)
  done (took 1.913510384 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088122013 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077428767 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063947106 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086573407 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072427697 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06653476 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066475947 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066379361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075295247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075544107 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066668959 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075501039 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075096764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075275176 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072346288 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072836397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066553672 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066775527 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065297963 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083562583 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066857112 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075320683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06668328 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066550665 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066598811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075322848 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075953757 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075767317 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066527995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075370367 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07281091 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066130618 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074888201 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074469155 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067111083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074653399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06679839 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084409366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072977442 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075403668 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06818322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072440645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075870105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072208123 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075551283 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066349732 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069703494 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065935242 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067123298 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086201181 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073259596 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075082775 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073109693 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075956311 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076060197 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086108078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074891688 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073481554 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071124968 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076298433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073335837 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071333446 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073804258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074146573 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071930359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075287582 seconds)
  done (took 6.184898555 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081712779 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084668991 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065504537 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07404348 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073098627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065116366 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065152431 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064829705 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06530374 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064614521 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105150647 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065446043 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073330404 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073287574 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065460028 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065232898 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065207646 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073888839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064753419 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083814866 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065331992 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073042016 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073056803 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074773063 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07588002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073505542 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067535528 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06721903 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067158971 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066957083 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072214928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06717667 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075012264 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066363023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075334212 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067136283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066974966 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071914086 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06688103 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072632402 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075480735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083717422 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067075747 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066589434 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075562161 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066917912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066487741 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066061262 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066818052 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06654282 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075429471 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076046808 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075800842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075013342 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066937389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067229602 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066690307 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066694878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066947618 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071668906 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074955185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066490107 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08613892 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066924731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066720357 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075007577 seconds)
  done (took 6.078167708 seconds)
done (took 126.901866385 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183843859 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.162201072 seconds)
  done (took 1.707416843 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066789357 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095091863 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074435053 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125993195 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.064073357 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097294454 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096594891 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.075176079 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06355376 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063286624 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063206349 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065886055 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128424981 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.063703138 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063282692 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.066040715 seconds)
  done (took 2.649500177 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09533065 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.154644778 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.096916982 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062194084 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.094131533 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.070000314 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061853877 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.072528464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06786795 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.062355636 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070125503 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067756016 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.062131951 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067740576 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067930077 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069743604 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061967193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.070237923 seconds)
  done (took 2.754349175 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100535947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08848565 seconds)
  done (took 1.577307629 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15973099 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103381678 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142689789 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.341600077 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166402507 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226422939 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.131302777 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127419952 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120386023 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122066726 seconds)
  done (took 3.022119509 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09617318 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.149962896 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.251794391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112218561 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069833525 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092735383 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.113336784 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.075100473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078048887 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077829673 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077836119 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073919345 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096067713 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070753779 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071152302 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073207036 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099703887 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069674391 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071433435 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074216471 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096255874 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.062876514 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07148799 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.070521285 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074868759 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075089168 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062846913 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062796281 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074033725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071773298 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.074530326 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091439277 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075039047 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105224717 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068005958 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106207193 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.073902909 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071224388 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071807685 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071124682 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076137442 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076342834 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.06964039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073346772 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.062355165 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073714285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06261306 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.063341394 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077403172 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065048403 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076075139 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.074127315 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10469088 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.064122947 seconds)
  done (took 5.855977454 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10155817 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101682208 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068956841 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109181519 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097128991 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069364411 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098568498 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090613345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.099910398 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067285067 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065307454 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067797615 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08013402 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080211127 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110397551 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101784962 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071450466 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068373728 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101498088 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.099839283 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065946199 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092490151 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086705165 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.099021132 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.065008315 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067456908 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065221785 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06736072 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074134127 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075988364 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067088876 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078174069 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082763768 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076034692 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064370252 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065165112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065418569 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077599931 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077436069 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076744468 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.075448029 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065163326 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065193881 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066567889 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067437894 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064812838 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076923265 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078476393 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076705662 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06665267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067145659 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065553733 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066499643 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077651925 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075048677 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07855086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077702912 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065455601 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065628639 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069959215 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078708293 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077021723 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076667928 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067135261 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076458391 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06529504 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077893238 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082291119 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06555552 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066877697 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065780746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067037841 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066780262 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075278251 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075348048 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066358052 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066743079 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065761893 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078349104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077006343 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066990486 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076411649 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06486276 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066024259 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066954667 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066705437 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075171066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077411693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066712553 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065147431 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066385449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065482076 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064945881 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075572542 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078731273 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07713911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076718995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06684688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076062306 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07615547 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066796255 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076427932 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065098717 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066382513 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066060464 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074919387 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.203123424 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077423658 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067768956 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066199334 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076279837 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07998678 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066439916 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076167411 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077986051 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077952576 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066079335 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079320858 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066833805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077877572 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068114045 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07834239 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066378853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077698106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066623785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066113242 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069205194 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.077770369 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068668155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0667556 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068753527 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066979328 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078312288 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081349388 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06857454 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079677517 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077922831 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068104063 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077800427 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066071979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077360618 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067448532 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067200702 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064843245 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080135761 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066056441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065828411 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0670847 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078978687 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066208862 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078048597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07682206 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066521986 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080010023 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079210466 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075328757 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078520247 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06800805 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066229939 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066270034 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067497246 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077663662 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080636299 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070240994 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068035793 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078019942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080789896 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065423061 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077416155 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076731355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07667562 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065580503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06754563 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077985453 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078351753 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075991264 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075550078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076016556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065344389 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074987916 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07553577 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065303921 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081716462 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065288646 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08027831 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077414402 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074336163 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077552198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078247168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079994108 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079664721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08082837 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067193159 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067230026 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079604493 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06738369 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06778073 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07677606 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066619354 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066687782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08090861 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065740091 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077296119 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065050699 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076705746 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06431379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067183625 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080552589 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065424289 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067233161 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07780117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06672499 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076087485 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080042311 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.208564156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066466824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068525599 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080368674 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079885895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067530253 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06769938 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070550905 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079223721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077381951 seconds)
  done (took 18.197422975 seconds)
done (took 37.151342042 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211538762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147222781 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178998077 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115376083 seconds)
  done (took 2.133589618 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119671479 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100050211 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094498905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064200578 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102346648 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064274997 seconds)
  done (took 1.960474256 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3093814 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208382489 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179205115 seconds)
  done (took 2.109876967 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200530343 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190715915 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.392422096 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251605189 seconds)
  done (took 2.563563548 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142214286 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088207282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06441179 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080524738 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1343929 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159894194 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099124936 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123830552 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075732447 seconds)
  done (took 2.433304166 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144478434 seconds)
done (took 12.761267445 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100161788 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.247200441 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196163175 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12657816 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191157146 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112510836 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.119901285 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100794022 seconds)
    (9/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107381613 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.173041572 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101074559 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081098041 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114880472 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.074254895 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071521281 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.195420704 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071738198 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138322477 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199765007 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099610209 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.193702545 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.165806584 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094581991 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088416067 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063227903 seconds)
    (26/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070608646 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088765262 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087007604 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068367964 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071638814 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064239807 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070067443 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071176937 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 0.124704279 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068163702 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075268814 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063931965 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076202822 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198242987 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079870351 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169818091 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100889666 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.143314312 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.194315686 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078266488 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086599146 seconds)
    (47/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144889095 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07111719 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069796513 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.18935431 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.0694634 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.086188694 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191997879 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.130897479 seconds)
    (55/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.086644398 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193158833 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070011484 seconds)
    (58/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.105576243 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.188478351 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.146871135 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060335245 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109164756 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.074077034 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07258056 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066265564 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068604857 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107694656 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176434942 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159726214 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153514349 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160248506 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134720941 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.169280612 seconds)
    (74/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076115683 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084288984 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069302241 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.049231124 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.073759492 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065073755 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140346824 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107971403 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.217704885 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.195927176 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147714689 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.134975635 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09130009 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050175827 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050229013 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 0.0640622 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063256851 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.07824885 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130704687 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06950437 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063176668 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099968869 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07672106 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06519231 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072466551 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077378326 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066274442 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07425366 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072782466 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.096218991 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070131226 seconds)
    (105/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062314346 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107174632 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114090241 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075440686 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.19389901 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132641827 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.1152657 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10513714 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.069406037 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165180654 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.195357721 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086203056 seconds)
    (117/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.098200024 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148124857 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.130866943 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072375546 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077259474 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.155350052 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052418742 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.146608819 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069175602 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.076903444 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.049745492 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.0675139 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070326964 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0824765 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.062535286 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.192409473 seconds)
    (133/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070312237 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088625731 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191945398 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070622524 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.084732802 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 0.124064182 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069285833 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069861329 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087903857 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.048003339 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183321356 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.048415854 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.05034966 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.147292587 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062281337 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069494834 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.048037919 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155746237 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.102865166 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049378735 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073488593 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100665713 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.095744875 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.062187979 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062002873 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070997067 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102482878 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063437818 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.144460989 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073269824 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062535962 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.048579286 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.097775303 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137193477 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.048957738 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.089277094 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.048316608 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086681762 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050054566 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.094862224 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.135005757 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054261896 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.04827242 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070900866 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.04866427 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.049668954 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168978715 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062329979 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072128746 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.049572417 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.063127261 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.146415254 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.047939351 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067496614 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.06811707 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049118758 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086127542 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.132789897 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068441041 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084148509 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.057518629 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.1017572 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049230375 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.292364307 seconds)
    (197/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.047926815 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07129047 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048318414 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066130492 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074212331 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.058821813 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.049354732 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.085292544 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.065453592 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.066952056 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068090771 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.060327069 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075902592 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.047657846 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064320629 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.047296548 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.068861988 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.070201249 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.06839072 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.065433743 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.04802236 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.04764623 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.048772458 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061472768 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.106055934 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062816421 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.159189783 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.047745072 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.047567331 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.0571747 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130382498 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.066997787 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.059263284 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.105048575 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.104252106 seconds)
    (232/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062019835 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.167315348 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.059878994 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.062907668 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.063256267 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.048104253 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063797945 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.081912126 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.126236095 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.063345509 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.081216057 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.082328553 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.047513077 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08492698 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.047912744 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.060161657 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.060643259 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.103240389 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.047086435 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.047467872 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.085547403 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.056955411 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.047512316 seconds)
    (255/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.082757647 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.047824978 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.060831748 seconds)
    (258/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.047910024 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.04770785 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.063611757 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.058056945 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.067713692 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062225515 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070766388 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.069017697 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.047417198 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.047941201 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.166632362 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.049545443 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.04795893 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061167131 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.057848723 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070877993 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.06848845 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 0.132972139 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.047303694 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.060715422 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06876037 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.065474112 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063081262 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.067949994 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.068005465 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.060207292 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.061023991 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061832844 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061058368 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.059924616 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061537558 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16096562 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.068257126 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062176855 seconds)
    (292/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.049551135 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.048484975 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061234812 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.047334121 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.047505784 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061040658 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.080534478 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.0669811 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.067462666 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070681196 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062922897 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.062492705 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.067872802 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062332234 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067120023 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063615643 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.048327309 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.049875586 seconds)
  done (took 29.413145268 seconds)
done (took 30.838886711 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087604854 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090490916 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073487368 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090361286 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079640325 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.074929778 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07075711 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076921755 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078389998 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080048294 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076794436 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053099854 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072769249 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072545675 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072761563 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090319568 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076412857 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071047212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07078639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062813213 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.070946114 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063596968 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065743498 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.052596865 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075848182 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.069777404 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069978531 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07162934 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063541858 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063542958 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067028321 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070509284 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063159805 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075410514 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069490737 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.070632515 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072222251 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074248643 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065647051 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063295517 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071481995 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06296134 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.070167378 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071101273 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069092689 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068812561 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.070622739 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075146372 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089187107 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065554821 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071587016 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073015521 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073310638 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069731337 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066572833 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070074891 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067764672 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088535106 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070234782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065168865 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.070922935 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.071612472 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.067963464 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069687209 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.070394552 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072624689 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07260505 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06826855 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.071614525 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068220984 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062573202 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07004338 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066208042 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062634239 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073016895 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074009833 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062127986 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068577175 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.069799975 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.068363629 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062260821 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064857382 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.064329197 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.069045433 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064640736 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.051621687 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.066550387 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068691173 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061891303 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07061237 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068648291 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.069322503 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064777548 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07281369 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062174625 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.067896244 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063008851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062929878 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06449991 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066926266 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062835553 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064876013 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07207936 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064718384 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068670687 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076177866 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062607006 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.069266387 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061753217 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062238804 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076399507 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071796158 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062669966 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065524085 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062139558 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069798746 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062534503 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062589243 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062595513 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063409267 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068713302 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062706012 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065020936 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069527171 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075442158 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062549062 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065723906 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065027104 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062368829 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067493839 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062507669 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062045937 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064137549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.058406735 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064358211 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062448557 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069485842 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.199250403 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070323118 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.063872872 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070485441 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067566174 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068587797 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067544577 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06185061 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055892025 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065476802 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065109504 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064830744 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063076549 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064746547 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062840917 seconds)
done (took 12.22879884 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063380823 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141257922 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096707373 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092444208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083227905 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063717126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073125727 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099001592 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064666522 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099575078 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084397848 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081809904 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109460009 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061745259 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062464643 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06685811 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064030447 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078301452 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097747925 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083413654 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.113304964 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06229257 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091288617 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087370994 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083996168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.089268385 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063643464 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066480947 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06678022 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097482596 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083481378 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.066464604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063428676 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098293959 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089314893 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080453455 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063113355 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08007359 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063417933 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062898534 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064445606 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095251106 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076897027 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077365479 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066676239 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065836805 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064194382 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080601223 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085774979 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.076260595 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083720093 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100209326 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065671888 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062746021 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061911016 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082670357 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062482086 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065592019 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063235834 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.06554201 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06305926 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066014163 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.078256503 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.078956108 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066556653 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.077713282 seconds)
  done (took 6.661794309 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081324389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086350907 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080322498 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081075669 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063270877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063145403 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063158159 seconds)
  done (took 2.077680464 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064826599 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085099045 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085786505 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086013395 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081684531 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.084324979 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072628791 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063407823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.077306075 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064767358 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084244767 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098884027 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064644516 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.069572553 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08753679 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063355502 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086706016 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063467988 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066330185 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086884082 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065534962 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078871957 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066504454 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063827438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077766131 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0635224 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110090939 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067716037 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065372519 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066344913 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061550223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103915608 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077086159 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072334328 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063363925 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077772239 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077712576 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061869948 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079556296 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0683909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.07729263 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.064127501 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064354776 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061648873 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067825298 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073716915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064349741 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064262112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066192786 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083600069 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064203667 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077007358 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066799107 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.06634888 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.065048011 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067545357 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073246666 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064586782 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083497256 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065177626 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080702447 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079945021 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077452529 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079837708 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066020095 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077223325 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.078122422 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066281098 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065807617 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068098131 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082806686 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064160306 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06726374 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076201536 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06749246 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08908094 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088899232 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067520395 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075962844 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065944646 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065895352 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065743956 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088815657 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069179996 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065722366 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070332757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068793655 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063830637 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063517775 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066966611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061958464 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.065048524 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066939771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06642214 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065806025 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080074348 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.0659864 seconds)
  done (took 8.581517762 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065803793 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065297526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.066739037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06482439 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064484156 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065441737 seconds)
  done (took 1.976041487 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091877909 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.066257947 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077725806 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070057506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102107552 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083288034 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0841813 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075775834 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080612596 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075785864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083776848 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085577174 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089598536 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069644902 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083999495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068904009 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084010571 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072985247 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075344775 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07017108 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.083883215 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070416986 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070295376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078500801 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072703398 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069382947 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064255286 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075768957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075492226 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.075920771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069868278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072580421 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.068115201 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075470574 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.084093554 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067893341 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069041805 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074457153 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069368325 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072917381 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084876146 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07017526 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.071342374 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.073911089 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075248269 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067507535 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074148707 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072957593 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083047102 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073681311 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074102892 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068510998 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072283594 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07393264 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067392524 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0750384 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073979071 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083529414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069838954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.067619868 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066238756 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072565359 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075068793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072295568 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.076181528 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073919734 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.067882589 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069486907 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069895771 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068685261 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074230686 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066373976 seconds)
  done (took 6.939330308 seconds)
done (took 27.781634872 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539868257 seconds)
  done (took 2.089690336 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600947604 seconds)
  done (took 2.173255126 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.146352501 seconds)
  done (took 8.718369027 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396576839 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490368459 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68403983 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127847504 seconds)
  done (took 3.310451527 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.667486187 seconds)
  done (took 2.248395492 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.205525811 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.192037871 seconds)
  done (took 1.987009604 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.372672175 seconds)
  done (took 1.944476891 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102077461 seconds)
  done (took 2.67741794 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260946428 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160243665 seconds)
  done (took 2.001625694 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454527486 seconds)
  done (took 2.030989912 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.833897681 seconds)
  done (took 6.412512698 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211833673 seconds)
  done (took 1.833605026 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236834319 seconds)
  done (took 1.818433028 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.687120523 seconds)
  done (took 3.273122649 seconds)
done (took 44.098144112 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07732323 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.07843866 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078255226 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.074662765 seconds)
  done (took 1.877535223 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073101688 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069668923 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073560957 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.069643673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073056249 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.06943728 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071351731 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073673345 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.068823851 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069290842 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069188176 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069044573 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071874404 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070822746 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067488254 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.071504886 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072652081 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069096927 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072523664 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.068936171 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.0676475 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.072086861 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.071659638 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068693676 seconds)
  done (took 3.279392367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074528916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070152451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071415212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068903896 seconds)
  done (took 1.87481091 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074235962 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.089750583 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086133439 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.073953046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088673308 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082896168 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065761199 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.065572664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069671746 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.073328111 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065033051 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093146657 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08472636 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.073440539 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.075452505 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063020112 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.064786947 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.083598679 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074291683 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.073864643 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066723592 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073657434 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064668337 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.084928138 seconds)
  done (took 3.397566846 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.073658627 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.099614853 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075455018 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084745834 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.086482377 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062224234 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071128251 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.085750968 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119161103 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062164734 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06639688 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06218741 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.069400589 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06192784 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.072952415 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101334968 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.104563775 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065431635 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092070912 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061909621 seconds)
  done (took 3.175064687 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069965965 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066493302 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062340249 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065592368 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074815191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.069716757 seconds)
  done (took 2.003562977 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064789533 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064707797 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064312021 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064082318 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068725355 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064007116 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063110298 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063744983 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064133502 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063842462 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06324918 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062296587 seconds)
  done (took 2.361773548 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191755955 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06496734 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065970902 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063017345 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067533114 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063125015 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076358894 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06502252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086974851 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062787532 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063300696 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064957822 seconds)
  done (took 2.529860941 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203846662 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072794089 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234097296 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133289675 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109078051 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112492262 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100650578 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110299685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140645301 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099375801 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165082654 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163407614 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104261781 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134231909 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085540912 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094029314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153510794 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15977129 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100675326 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162904926 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141691255 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121565667 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144131455 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098367908 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103078515 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119006911 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06767777 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077201868 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168304485 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128770624 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144073566 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107761284 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090715854 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17332249 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167849093 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140110693 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131192375 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081283643 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.099422376 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13011891 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196482148 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085388381 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161800649 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10445441 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215783569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13149388 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118221718 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118158881 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104922475 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086716946 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1443655 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181297189 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137329536 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084586909 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109319165 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112724209 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113790434 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100591219 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180129363 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159791341 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130144675 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.068106596 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095906594 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150562282 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129372619 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106068875 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124997562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091553951 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131981723 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152014685 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116048419 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141792959 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125484684 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085231978 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115996543 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13675626 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125705832 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168492845 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121361439 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069538517 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122167064 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100479763 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078063223 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137456738 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072161777 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172994554 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095533592 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103325671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10991338 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105519769 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105869181 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159529821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141774542 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100710237 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06158647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242485977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11729072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146862621 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085483885 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106720418 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114534992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075076889 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13720001 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07169879 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121140202 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.071671729 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123464208 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130227894 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.072395079 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119221021 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097631268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097483013 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130949472 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15815729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086976802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079688831 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1661509 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118562289 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102897068 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14177576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155018955 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.096396027 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100285397 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147662093 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178594852 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086257359 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160758362 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104883306 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080575684 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.084103856 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120793583 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109243857 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118995401 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078879287 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116020161 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165867072 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072032393 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092275361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130292448 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076093467 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078309289 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101611502 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098804458 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.092270762 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097439247 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101695273 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134589925 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119961107 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10157786 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122097992 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094885625 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166949131 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084912027 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.095708226 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099358578 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06569489 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.132141044 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152335105 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075542668 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159260988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.118089987 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099582394 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112359807 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07753648 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132996313 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073357251 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.065431112 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135881258 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104407928 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103610193 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.143570148 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098365797 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.120314889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112522118 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126952448 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124448003 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.12241844 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099416711 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.082842664 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105660182 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119441828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.068469535 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08584133 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.074821219 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098066003 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089734431 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078006776 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134444734 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117598217 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094126832 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105234621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090490833 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139667352 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.071174541 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121361128 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.112349452 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088277971 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144195998 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144553943 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124110963 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093964505 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138042566 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.065436998 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069027813 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084593229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117358735 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077005804 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078049611 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.365810718 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14692671 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128679129 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138253079 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11077062 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120137416 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153616887 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067098407 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113701415 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146369715 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119723035 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099992435 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088498071 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.096740791 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140325066 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106605097 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182572337 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113530698 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124390222 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152102593 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097447748 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07782384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10055018 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134346228 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103225998 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144491681 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098373949 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085168281 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107747286 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071273171 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098892059 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126675811 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117437914 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13276345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111703187 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129635472 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074062326 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114411737 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116910255 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119646457 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060497182 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117675161 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159904586 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090905522 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116447985 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151692864 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076073648 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.120365213 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173122991 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142136274 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080781511 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25650369 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116790599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125885436 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118269781 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138016765 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107199394 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131782969 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105710174 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082324511 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084405971 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09402797 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101698802 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091223398 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104822504 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110671857 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091441145 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128244912 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099491366 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106452218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114414264 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.093358628 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.085853134 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093904083 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170450771 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116035334 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168690869 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095261731 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142702901 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1620064 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071599667 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075698297 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075605103 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137346887 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080986041 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128034967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09416728 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102689105 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121200945 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139195688 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091991451 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06539209 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10517938 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131887273 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109451273 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095026848 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101849946 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160498982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097489376 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076714688 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111201178 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10210692 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100394074 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170378815 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.057997825 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094406056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072342731 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077484325 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124078136 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296760766 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077664415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.097983532 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12013659 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109039463 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125284782 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099731126 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096239352 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112098099 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14680787 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126570267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08668961 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109539564 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126456337 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153535565 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102367318 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092929264 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168036019 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148821006 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158106309 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085762794 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111324836 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111252576 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105303254 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137173286 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080433198 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16225572 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078991505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133719682 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101524009 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08749929 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127970732 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095344868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085098138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161808204 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114817917 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079381903 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074713081 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115926459 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117343056 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103899574 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07289071 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137638772 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070024618 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130080738 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167082157 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078532412 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102359972 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092920803 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076383714 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104538589 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098857097 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086127135 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.237521351 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173448205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086873697 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149485555 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140488549 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111793977 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136714378 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096340886 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633036661 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075071407 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148425617 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113498091 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16954193 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09441718 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114908547 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105823125 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121102916 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141265024 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102368729 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171028025 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129553464 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11294746 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076480363 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099597334 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099871223 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086458446 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102033953 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110452443 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113579628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090871076 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113103508 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120535518 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079041381 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092498222 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153372222 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113824647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141136524 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136840252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081693423 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114863524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135987636 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076886849 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120815692 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151078303 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10423808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094937745 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077755402 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098689713 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165736562 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069981277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159101633 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262800104 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106678916 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11077298 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112454811 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129240996 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106204993 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119583607 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092039511 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108837595 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109252421 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079023492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073820249 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101060537 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109359786 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094192023 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095760611 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.093567319 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148820789 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.067754806 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093140118 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100379167 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142551886 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171570607 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.08476931 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079441613 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115855674 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109898144 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110761245 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117744636 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076259871 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07955919 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078787044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073302981 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.105104828 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109139288 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101263717 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108357669 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161766013 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.07984183 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.21786431 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092247131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101495018 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066090636 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075444081 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092628014 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094442717 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105672393 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097226141 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167383917 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091659588 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087523939 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090341836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070106248 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080085535 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125418624 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107984426 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116404451 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094612803 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.059360937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106176759 seconds)
  done (took 57.277249501 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106300766 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.079276027 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094260837 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.146560751 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119951051 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208562646 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154025511 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195947214 seconds)
  done (took 2.842522195 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064821682 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.090044325 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.096349978 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080319306 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.063726597 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066611893 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222463583 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077265475 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.062828975 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.084669809 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.075897812 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065514848 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.414354024 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062703077 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064216474 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.059675639 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063930477 seconds)
  done (took 3.428389775 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.363370898 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599581325 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368107328 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.069568333 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.420993788 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088021999 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.066772869 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126453113 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.07015901 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532109 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700129531 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.120667991 seconds)
  done (took 18.249395042 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072879154 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.066522949 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083490658 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08117551 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069237163 seconds)
  done (took 2.095522108 seconds)
done (took 106.010362693 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078556099 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377474582 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050544014 seconds)
  done (took 2.179547891 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079862124 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.081024783 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081566856 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079208608 seconds)
  done (took 2.049043401 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071388403 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072757938 seconds)
  done (took 1.867330347 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.221866589 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154288931 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083163139 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080305834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075642158 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076172419 seconds)
  done (took 1.95927352 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07048038 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073052415 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07045684 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073029992 seconds)
  done (took 2.008189276 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07460585 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051359112 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.051772956 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.052815822 seconds)
  done (took 1.950511639 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085432506 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.075718301 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075497516 seconds)
  done (took 1.958542908 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100378622 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081543546 seconds)
  done (took 1.905541952 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079469494 seconds)
  done (took 1.806294377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097411087 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110377581 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128340286 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107054122 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135557622 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105682551 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082756103 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.083766753 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074045072 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.084410094 seconds)
  done (took 2.737786447 seconds)
done (took 22.682496939 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076899397 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.362634786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357542304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086559661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667288937 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.3529627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.065442579 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088575863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11025713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064934814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080924977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646823518 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.045058066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317037674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.030144024 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320293152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648963401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065040363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064158786 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06442656 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.041433403 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064340215 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064499863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06481994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646637984 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367426483 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065023755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320944235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065434165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066325979 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351407307 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.064935579 seconds)
  done (took 16.410218846 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068629034 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114672787 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070790969 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08077567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067337336 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066490693 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068422814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065453555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11679948 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064720236 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081894877 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064801986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068871477 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065679822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083783705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064665485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065123554 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065771483 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065121847 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06517098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083223042 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064358495 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065208049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064947623 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064848912 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076269202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06527284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065047251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065194077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066661316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067534478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065445571 seconds)
  done (took 4.024755974 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111447029 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122613046 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071503156 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.100181697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.108940122 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066892449 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.139243311 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089224069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123694199 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064520165 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081159456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06483681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097475943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065728652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084533038 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065082631 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065751794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065544712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065496365 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065431839 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083889215 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066048535 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065079085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065340387 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065648259 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078379812 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065699851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065495192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066098905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067108115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068526659 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065840754 seconds)
  done (took 4.281832606 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070857967 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072110685 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079907386 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.080183061 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067021135 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069275878 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069823218 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066435032 seconds)
  done (took 2.318412091 seconds)
done (took 28.769586763 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076346628 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067744813 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.0717671 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.078865651 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069898149 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075813521 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066719185 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07371057 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069726879 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069466388 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071542258 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064161592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068339881 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064124028 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070251711 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064661345 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.075581586 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070557094 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078753027 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079001378 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06958194 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072293574 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073713688 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079284298 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079112885 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07889683 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077069428 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072575296 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068948002 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070311381 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076663394 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084154714 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068020737 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078788099 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067647826 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067446452 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070913935 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067213493 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079615471 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076371437 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069189269 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076138293 seconds)
  done (took 4.77012656 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086460708 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090890865 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085018335 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060758809 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066484652 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061391529 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085055786 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.056122573 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056765754 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084000733 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052787735 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.056245867 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.059179122 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.050786195 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.055909196 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053571104 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.058277594 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052536517 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.055976413 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05602204 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084703249 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.051112131 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073856368 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059585288 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055652719 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058787601 seconds)
  done (took 3.421106676 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072509093 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081622202 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085711924 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.123800765 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.09961145 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073859519 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076264198 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08926751 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.081770945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064574877 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070226534 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093647003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08827968 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073673077 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067146716 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084094069 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081913667 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06854631 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073410008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090750905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085201832 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084828696 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092682861 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080847994 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066619602 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069446597 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071157486 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081220532 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070196376 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.074046952 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069199214 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068241498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066639956 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076034831 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071405513 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069421361 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089651675 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075540584 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07496996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067608313 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070648558 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068134753 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091240944 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126239597 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066622421 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074944331 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075382279 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07654989 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067080452 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084315989 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075786669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064602092 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067605801 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063673476 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064372524 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077197317 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066408432 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066544447 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073305268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067515823 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085964337 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068222225 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079996387 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.063759507 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.071752239 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063495142 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064999874 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063340494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.089205454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.066013952 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.104878818 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065967638 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065695559 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07347333 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.072087189 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070061175 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064610885 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079260168 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085530241 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06773666 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072520956 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06758737 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067083118 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084082029 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066553269 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065716979 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065398479 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070596763 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.066844058 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065652262 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077436979 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064158574 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.066865913 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08069718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063986213 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.065767868 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070750615 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06935075 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064029459 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075379455 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069187961 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064998382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073516823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064127153 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067231757 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076103403 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070240028 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063250466 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068860743 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070484884 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065499671 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066011419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067052928 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066425249 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073168146 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070975661 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068974852 seconds)
  done (took 10.410173803 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157888802 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149670252 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067546356 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141610704 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073238569 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075531895 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14314363 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.091304571 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064518851 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065026715 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065656578 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.106738148 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102505987 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11177185 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075483908 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064278313 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.079833908 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110259068 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147652696 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.139047446 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.080197376 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073772553 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066541203 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065634278 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067085951 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074911422 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081831608 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073609565 seconds)
  done (took 4.390734531 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078875619 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093575816 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.071028487 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087048701 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088531667 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064772642 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066918948 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066895864 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077011253 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076186402 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064614942 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070241722 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071300313 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068324878 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06571371 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071610868 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07228608 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06605466 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068039618 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.06968022 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074368916 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088347641 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.06838769 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064058628 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069877936 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063848919 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061553532 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081658382 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065116767 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088238392 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062864091 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072437423 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078836312 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065473591 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06429287 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064602558 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064368499 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064309056 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06635659 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063387342 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063197533 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054650981 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06439605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076806601 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07115777 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053348139 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069693421 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069629654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.070328928 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062949963 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067367767 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067424443 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067831724 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072031088 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.06961686 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069798319 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065920631 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070651215 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.072559709 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065236377 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061660206 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06371957 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068995331 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063399242 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.072452812 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069366161 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063547512 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064463138 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06628684 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070892101 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064290907 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.067681639 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062543178 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066610979 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069194139 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066387561 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065615943 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063075768 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064135189 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064553846 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.0525062 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064598825 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050511902 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067629174 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063215169 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06330276 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.064184242 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069780585 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077033324 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065881075 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070549924 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065670595 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063944535 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068064355 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.057365518 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067260877 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079338897 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08040388 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064535312 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062758205 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078730031 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069289192 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063667923 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.053625136 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072069677 seconds)
  done (took 8.941975226 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08806903 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067410042 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081284082 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088165176 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083596859 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071387834 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.073222174 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066133561 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.07856873 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070360227 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.073015656 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06484506 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.073940096 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073272055 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067002606 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073290563 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068915904 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079023036 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078787144 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065174814 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07247171 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.076570402 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085528853 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076392047 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.074838521 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.076356528 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.086134672 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068832108 seconds)
  done (took 3.889914152 seconds)
done (took 37.558775045 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.830585735 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.995965908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.816251698 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.156863789 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.948791768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.838425968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.970687685 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.816767697 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.020786635 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.848321597 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.086091723 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.870444018 seconds)
done (took 65.950470472 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.855252543 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.967660063 seconds)
    (2/2) benchmarking "String"...
    done (took 2.093411418 seconds)
  done (took 5.81407123 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.192195164 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.402655125 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.048378815 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.815929267 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.820421674 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.048862602 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.611939519 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.342116891 seconds)
  done (took 30.844898868 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.916626048 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.047321398 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469925807 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.502545618 seconds)
  done (took 15.735708081 seconds)
done (took 64.269337902 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.834739975 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.853772973 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.82690235 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.800666742 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.874860129 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.823997267 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.118762099 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.862319334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.814551305 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.803672164 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.817002249 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.259650459 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.82698543 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.18614888 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.816012192 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.830141348 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.855268215 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.273674368 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.975029823 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.829528891 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.838903093 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.83258333 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.823403437 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.831552117 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.817739581 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.817647003 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.253648526 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.819958852 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.44462325 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.816869722 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.847563473 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.321227822 seconds)
  done (took 205.501413463 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.821166999 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.911540027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.969494911 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.856279331 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.31283597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.000463103 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.947863366 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.352726805 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.822922909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.848382911 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.937994419 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.818466364 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.95553813 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.850989085 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.849743888 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.912118128 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.096889229 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.971486903 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.850934144 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.995386699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.82884656 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.749315112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.721244968 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.925732425 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.865617949 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.871506096 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.97116493 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.854293773 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.014189411 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.062706119 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.848015937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.827501771 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.050131167 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.691603552 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.837397505 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.833272598 seconds)
  done (took 171.794049242 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.195982671 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.821500128 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.819577486 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.822938307 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.835123498 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.822372967 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.944885321 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.9459188 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.276512856 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.254533204 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.873805019 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.824087808 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.656182543 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.822141112 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889902342 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.832937908 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.817053344 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.822344241 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.838631527 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.851099771 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.822986924 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823811383 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.946606436 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.832068788 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.33858778 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.82896403 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.822865055 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82859255 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.192898323 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821631093 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.829728431 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.084245064 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.820334863 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.824270001 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.710728849 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.218044326 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.915427886 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.821751611 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831408424 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.825139621 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.042971889 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820446311 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.824558572 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.829308921 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.000497494 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.820707816 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.951003996 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.822704203 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.330698137 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820628966 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.824364145 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.82633281 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.533006928 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.500091895 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.82492448 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.824179528 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.830354844 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.823166767 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.82458519 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.830791256 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.427445936 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.898677254 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.827643961 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.829319075 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830274085 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.825027111 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.032980962 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.830299211 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.077220704 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.884334166 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.039797036 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.943451777 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.825966003 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894242587 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.915948186 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.821944248 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.824300649 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.824646327 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.825267622 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.90701291 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.8219329 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.949750751 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.829796879 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.827057851 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.876600588 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.826308604 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.895710261 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.823931735 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.714610989 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.827296982 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.827380484 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.142254976 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.890107683 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.824571471 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.826250982 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.825741595 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.952071213 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.945868509 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.610427045 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.827778029 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.416973603 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.829144839 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.971788954 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.824791832 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.0112072 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.824273873 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.908685138 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.829576714 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.827742798 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.827664861 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.85886626 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.82909738 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.887806793 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.823583997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.199229157 seconds)
  done (took 408.808824772 seconds)
done (took 790.107202936 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.497261202 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.453313686 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.56897574 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.477805414 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.444106247 seconds)
  done (took 14.201063638 seconds)
done (took 15.962462674 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.914625478 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916627585 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.849523126 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.919268126 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846573135 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.921285742 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.896944387 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.850781316 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.885039899 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.851885566 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.889076942 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.850213163 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.840767509 seconds)
  done (took 26.196278676 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.060581019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.06848736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.900154391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.052328654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.876510098 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.052864467 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.994345574 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.976372983 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.977135989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.842869442 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.841061923 seconds)
  done (took 23.40677338 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.061628468 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.059698621 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.905993786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.061647679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.878937323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.060812741 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.993024093 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.983251605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.97731561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.843660443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.845003511 seconds)
  done (took 23.433642926 seconds)
done (took 74.798483555 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.837823061 seconds)
  done (took 3.600557529 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.860194307 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.996713771 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.840250996 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.838861858 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.837852222 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.838127026 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.841613213 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.837026908 seconds)
  done (took 16.655123437 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.835430918 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.837602451 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.838972124 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.837524924 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.837762574 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.837129279 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.837769039 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.833988096 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.839314155 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.835079913 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.835233881 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.836047195 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.836242816 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.839570179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.837987017 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.834937702 seconds)
  done (took 31.155207119 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.837569841 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.839297703 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.834630903 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.835288984 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.835153884 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.835275236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.836461691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.837397937 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.836123751 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.836086504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.836508105 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.835411366 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.837941539 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.836120984 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.836470333 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.836881142 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.835685397 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.836790239 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.841765437 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.835781932 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.8372801 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.83588904 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.836714616 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839445278 seconds)
  done (took 45.849749552 seconds)
done (took 99.022162209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.73674445 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.235174637 seconds)
  done (took 8.736386408 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.840104018 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.839210577 seconds)
  done (took 5.4842636 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.842442078 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839416996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.840565105 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.839574578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.838929574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.840484149 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.84212954 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.839341407 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.839800424 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.839431835 seconds)
  done (took 20.168648884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.840725305 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.840248078 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.837673936 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.840168157 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.840233575 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.836874301 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.842832309 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.840553077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.839211794 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.838260178 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.839702909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.841105022 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.840494081 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.838303062 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.839922276 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.837632548 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839295115 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.839625765 seconds)
  done (took 34.87931256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.839142387 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.84043763 seconds)
  done (took 5.447153436 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.837830132 seconds)
    (2/7) benchmarking "second"...
    done (took 1.838016641 seconds)
    (3/7) benchmarking "month"...
    done (took 1.838581622 seconds)
    (4/7) benchmarking "year"...
    done (took 1.838068302 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.83755472 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.838086835 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.838861227 seconds)
  done (took 14.634132143 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.841516452 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.00059044 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.080038236 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.480817957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.842692127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.844750435 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.808494971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.8451309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.84653265 seconds)
  done (took 20.358122727 seconds)
done (took 111.47230366 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.666645476 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.833499899 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.2216011 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.893721033 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.895031606 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.134495376 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.842986766 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.057974936 seconds)
done (took 43.312238931 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.845733353 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.38896012 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.419055965 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.042364021 seconds)
  done (took 12.619350579 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.821323826 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.363950535 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.87556964 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.42993808 seconds)
  done (took 20.274495283 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.210428023 seconds)
    (2/2) benchmarking "read"...
    done (took 2.199950561 seconds)
  done (took 6.185670747 seconds)
done (took 47.695600913 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842642434 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.843027057 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.840606598 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.842914853 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.842652383 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.841228366 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.840723367 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.841405465 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.843504802 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.843390645 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.843783278 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.843316038 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.844660742 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843719329 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840578104 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841686249 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843302842 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.840322587 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841811028 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842425361 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843413736 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.842323521 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.841854312 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.842676113 seconds)
  done (took 45.986254115 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.843881246 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.84234751 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.844875464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.845284405 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.843294543 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.845938534 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.844039889 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.841447623 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.844150419 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.844975059 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841206048 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.841041447 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.844567926 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842405701 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844666514 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.842131992 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.845325619 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840908479 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844764877 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.842776555 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.844662501 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841807148 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842569171 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.84432116 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.843088349 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842455343 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.844334223 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.842826667 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.845442421 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.843498919 seconds)
  done (took 57.076746427 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.849368492 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.854627812 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.845876576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.845889569 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.846382843 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845273843 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.846560606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845463461 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.845946304 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.846538262 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.846253313 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.846951274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.84630276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.84661988 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.846163919 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.846282836 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847505004 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.847291341 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.846516716 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.844623984 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.847190961 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.84609637 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.846429669 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847032999 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.847287008 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.846575391 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.846644893 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.84691102 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.846801583 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.847727542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.846752994 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.846865961 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.849074014 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847194626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.848304222 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.847722531 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.852053707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.857908686 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.847985804 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.848475979 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.847408193 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.847936618 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.84784805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.849486006 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.84848348 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.848553771 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.848548456 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.848781152 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.849205466 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.848833247 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.848677031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.8485535 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.847664505 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.848643481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.848425647 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.850014552 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.849819897 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848770444 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.850212455 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.849384833 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.848347259 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.848503768 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849117518 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.848896574 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.850975825 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.84776213 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.850341072 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.848701716 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.850976995 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.85030877 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.85014195 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.850310226 seconds)
  done (took 134.841594829 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.851981748 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.848745278 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.849461493 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847933849 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846801811 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.850210034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847201152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851012119 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847313858 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849738197 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85131823 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847078482 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847232201 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.849882868 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8493703 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847141919 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849463281 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847472716 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.849130056 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850212003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.850046814 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.848298981 seconds)
  done (took 42.454208405 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850561659 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.849950048 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.84799705 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850642638 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.848659291 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.850464753 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.850002738 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849408851 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851329642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848778564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848579225 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85149135 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.849033199 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848156026 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848274465 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.848713712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851494858 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848317163 seconds)
  done (took 35.069387147 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.850111224 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.848792178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.850551798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848958458 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.849762039 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.852080595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.850296804 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.853444748 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852255633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.84939028 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.8522066 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852843998 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.854062684 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850457061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852845703 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850915659 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.853756432 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.849939701 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.853391922 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.850085114 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.851282653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852013588 seconds)
  done (took 42.506920984 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852739382 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.853608615 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848671272 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.849254926 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.84804534 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849077693 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.850045043 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.847857714 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.851125506 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.850051619 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848222467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.85012819 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.847316202 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849346115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.848188377 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84804954 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851402228 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849884406 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851395505 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.849703675 seconds)
  done (took 38.773106802 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.852055568 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852787463 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852296318 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.856693369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.851170146 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.851243884 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.85189809 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.850767816 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.852437778 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850370482 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.851351453 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.852045925 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.851288511 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.851518248 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.852218767 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853543155 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.851645975 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854686492 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.855366845 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857715259 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.852132159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850557696 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.851384452 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.851976235 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.852154642 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853902367 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.851847183 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852390112 seconds)
  done (took 53.647694873 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.852196896 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851802 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.845936663 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.848122977 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.846713738 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.846240449 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.847093601 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.846765487 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.847103367 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.845955173 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.846923462 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.846856391 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.849071215 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.847301014 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.848215278 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.847172211 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848605539 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.845712972 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.843994972 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84467556 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.847482552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846663587 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.846991854 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844648538 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842494186 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.845278499 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843244281 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84493017 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84866419 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.847044548 seconds)
  done (took 57.184152239 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.865809904 seconds)
    (2/2) benchmarking "in"...
    done (took 1.864682826 seconds)
  done (took 5.504857785 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.844856641 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.848201514 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.84645373 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.845410802 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8459754 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.848261693 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.848284725 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848720547 seconds)
  done (took 16.55233079 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.84779806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.849855493 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.850280852 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.849972606 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.851020517 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.851914805 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856268624 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.850814436 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.852579209 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.851026235 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.85697186 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.860202866 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.851446101 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847236336 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.848826586 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850459985 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.850332757 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.85390596 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.851976798 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.85008371 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848327911 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85175678 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.850806703 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.845740253 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.85381203 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.858707526 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.853604003 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.848709337 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.851349853 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.858395803 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.851772045 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.848257676 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.854347734 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.850356547 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.849020009 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.850344847 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856094927 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853142012 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.855325013 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.850415169 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.847716214 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.849750142 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.852415506 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.850219258 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.853795769 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.851883124 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849256122 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.847158938 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.85067754 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.853197101 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.856894736 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851590969 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.847757571 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.85824787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.853274624 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.858629304 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.853712492 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.855240839 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.862681695 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.863678364 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.864004423 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.861314379 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.853719517 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.853684433 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.863854942 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.878785917 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857092726 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.850503158 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.849809441 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.855270391 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.859740973 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.867988877 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.861186631 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.855153377 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.852956086 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.851790131 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.85108585 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.85077051 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.858264731 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.857710568 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.852287576 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.85224272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862750011 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.878758312 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.854177347 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.856733336 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.857205065 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.85109349 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.852279008 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.864204683 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.85492392 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.85094677 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.853916762 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.855818353 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.854071845 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.854893003 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.853703297 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.856480933 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.850768994 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.854829065 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.854019476 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.854598045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.865804668 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.8543083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.854227475 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.858379823 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852372103 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857116816 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.861960481 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.856854029 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.858840413 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.858909473 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.864785101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.851851852 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.860503273 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.868216602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.857153446 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.858773968 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.857121199 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.852602296 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.868098771 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.887472785 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.855939673 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.857940461 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.865517194 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.869866651 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.856041231 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.859959093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.855090417 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.855580837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.853415318 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.861185506 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.85453305 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.857348014 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.85669239 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854722347 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.855456817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.85620189 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.860167019 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.854612295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.857790696 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.857914481 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.856941355 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.858557469 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.857602366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.857689304 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.861837324 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.85619901 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.857602159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.857841437 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.855094033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.858990632 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.856918806 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.858307734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.857038883 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.861201423 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.856022687 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.859678799 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.855575634 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.855810083 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.861051458 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.862515079 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.862460242 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.861319186 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.862464054 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.860386501 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.857237576 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.860140357 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.859756073 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.860880589 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.860005135 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.858589284 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.863091816 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.864379066 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.861420132 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.859396133 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.862805182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859931208 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.858613948 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.862341679 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.862337576 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.869967707 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.859962981 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.866015754 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.859936467 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.857979649 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.85922358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.859675652 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.860104177 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.862020993 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.863210047 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.868722266 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.874079376 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869663911 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.859269586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.863846249 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.863133759 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.865132948 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.863210212 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.863392912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.860470631 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.862515724 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.860390964 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.861960849 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.862780534 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.860909953 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.859838127 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.858427509 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.863652956 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.864457519 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.861193819 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.861506106 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.866122583 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.857926124 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.861485602 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.864236423 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.863209359 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.860709194 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.861907614 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.865573609 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.8626462 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.864981556 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.866391184 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.860336123 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.866313785 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.864360558 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.861389479 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.859971483 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.862478546 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.866173254 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.862919194 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.868174655 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.866625614 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.866487262 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.869052399 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.862933614 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.865047186 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.864643963 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.863932149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.858815701 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.870362062 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.872990423 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.862962007 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.865479356 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.862382947 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.861649806 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864020092 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.870165116 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.862508646 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.865707376 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.862767971 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.865113776 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.864320049 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.86817591 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.865952915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.866559974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.867404533 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.86506551 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.863874124 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.867227957 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.867589086 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.862788738 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.864407639 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.866484619 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.868298119 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.868919075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.865092915 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.867147333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.867441162 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.866864229 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.864896435 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.867806106 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.86134242 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878010482 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.876066666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.868848031 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.86843185 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.86584806 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868671022 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.86576837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.867610344 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.865733013 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863148998 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.868540796 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.864875505 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.860431216 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.867781318 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.865896377 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865983104 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.865772378 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.870177619 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.86804392 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.866350957 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.862570056 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.865925241 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.866498103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.864746263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.866462834 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.86685189 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.869381973 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.864488993 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.865628145 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.868257663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.865153853 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.864680005 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.867153039 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.865358771 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.865003191 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.867572335 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.866419197 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.870679227 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871449241 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.869059492 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.877067009 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.867035139 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.875515497 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.866808343 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.87023168 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.873724036 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.862545636 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.868273638 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.867554149 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.870071806 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.877133074 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.867351909 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.867390032 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.874294199 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.86622454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.86787865 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.86587077 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.87114888 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867874932 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.868014933 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.87128437 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.870471154 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.872504679 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.872561729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.867706057 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.869940154 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.868066611 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.866345052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.870817977 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.869956578 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.869499794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.868045092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.868516842 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.869031834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.869233618 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.868174946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.866578139 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.87189807 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873943413 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.871484692 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.872507255 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.866341384 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.875138498 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.869957792 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.874570891 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.870795461 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.867705028 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.869621516 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.867772559 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.87258056 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.867641942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.871581078 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.872488253 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.870198167 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.876003739 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.870107496 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.869975978 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.870052731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.870765077 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.870314796 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.882639024 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.898922969 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.871116532 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.872797234 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.868745272 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.870408981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.878993115 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.87155211 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.870175671 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.875288052 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.880459051 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.879049691 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.871400132 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.870564319 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.867960265 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871591069 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.870704224 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.868720277 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.871754492 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.870944349 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.8720567 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.871366696 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.874112777 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.86907902 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.870657012 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.87030425 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.87340804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.879948798 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.871863009 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.871897031 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871220003 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.871535126 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.874496475 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.870853824 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.87147253 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.870510022 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.873739619 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.875576232 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.883004605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.882413151 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.873686629 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.872952687 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.87422583 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.873522368 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.872964258 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874244853 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.870194744 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.873773434 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.874166046 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.872588617 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.873439344 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.871746805 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.873160318 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.87366361 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.870677107 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.878122018 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.882543143 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.870781271 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.86880129 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.874423817 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870590075 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.872408044 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.873391737 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.880668587 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.875630531 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.886233476 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.882772776 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.875886948 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.876202232 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.879488598 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.882218719 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.871893042 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.874964682 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.876490642 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.875061568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.877387882 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.880137194 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.875255903 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.879203882 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.874860586 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.875238636 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.880876692 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.875746573 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.875197036 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.877180889 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.880805264 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.873293413 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.870893803 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.877308574 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.876609748 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.881301268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.876646314 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.874708 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.874234628 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.873942981 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.878578716 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.8789898 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.874257013 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.878959376 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.872912548 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.876443415 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.876848075 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872255196 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.873677335 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.875620066 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.874678709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.878550634 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.885438274 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.873179124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880510014 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.875112579 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.88030277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.877314669 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.876461396 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.874331929 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.875623952 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.878257179 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877541204 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.87594468 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.880783154 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.87810196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.877520175 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.879547377 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879351205 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.880924053 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.889460296 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.886611867 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.875708223 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.875570684 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.877819836 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.877425481 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.877948744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.876903967 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.875717801 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.880247117 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.876587264 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.879212626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.877848468 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.880936642 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.895139262 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.880215508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.877791434 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.878343655 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.880770004 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.879100428 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.872964016 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.875367254 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.877624817 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.881221454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.888604536 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.87796504 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.881580597 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.878154246 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.879145471 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.877358293 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.881449395 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.88775548 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.88159145 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.879449041 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.877858431 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.881234478 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.898682932 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.875117173 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.89291897 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.91409629 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.878182173 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.879969832 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.879588849 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.877245077 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.880736605 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.881345998 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.87912853 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.879900543 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.880912266 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.879713543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.878898967 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.884928767 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.879742331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.879548484 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.88092994 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.880092344 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.878825505 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.877780001 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.882464833 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.875706747 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.881627168 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.880294479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.879716026 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.879180637 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890058822 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.891549147 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.8809383 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.883533633 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.877186558 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.882672708 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.886383347 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.898301817 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.892797165 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.883373899 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.882924928 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.883252764 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.884630017 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.877636396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.880727945 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.88008545 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881093595 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.880898331 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.895660094 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88847646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.882614678 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.879280083 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.880037496 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.878417263 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.886192777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.881485711 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.880882163 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.880630091 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.88501261 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.886907327 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.880545203 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.880859356 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.886823222 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.891649693 seconds)
  done (took 1115.065520891 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877201106 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87987281 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.878120744 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.879575901 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.878257022 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.878541346 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880080788 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880934825 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879907331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.880092612 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.880919391 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880790256 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.881052766 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880931309 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.879583135 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.880046314 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.880143813 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.882375043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.881539354 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882008665 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.878463047 seconds)
  done (took 41.289604121 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.880952728 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.87780295 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880923398 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.883486742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.880424096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.88222142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.881138213 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884788072 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.883368724 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.882410626 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.881793114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88207908 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.88210177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.882953833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.881820045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.882751111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.883822826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.881696836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.885496971 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.878426005 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.884524884 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.881646384 seconds)
  done (took 43.216866126 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.885171379 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.884867852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.883245291 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.88227374 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.886426971 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.884486405 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.884578388 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.885172957 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.885478805 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.886144751 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.883893487 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.883445319 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.890157151 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.89012382 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.887870558 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.886347987 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.028165806 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.886851713 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.882607952 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.887332196 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.881211289 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.889289725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.882368321 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.882958609 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.885334875 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.88738102 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.886288014 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.882200549 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.884841404 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.886353381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.886863746 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.884143413 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.885926713 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.88785628 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.885968809 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.888668245 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.890104589 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.887316113 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.879877262 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.887156308 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895384114 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.909210236 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.884554458 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.889810139 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.886186266 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.887777343 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.890152991 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.896034693 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.883809015 seconds)
  done (took 94.406568359 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885235105 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.888607502 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.882638045 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885817345 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.886761352 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.884663639 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.886899793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.885551039 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.884479666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.884320921 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.885778439 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.879052328 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.881664333 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.886757168 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.887018182 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.884252826 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.883282034 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.884018654 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.880576284 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.884008839 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.884217704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.88542676 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.887880875 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.886553776 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88857095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.887786834 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.88442521 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88708189 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.88487832 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.887069285 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.885322637 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.88544794 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.889157003 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.88469572 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.884779183 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.887727176 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.885976857 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.883643276 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.885086917 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.885596982 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.890007982 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889020068 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.888400413 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.886312656 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883414963 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.884995611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888030808 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.88434786 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.884888627 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.888069454 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.885559797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.886178865 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.886604367 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.885757122 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887634401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885806322 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.88455819 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.886451488 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.887354231 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.883901567 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.883691448 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.886446472 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.885278648 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.886959664 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.885249438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.885206111 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.884962303 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.888663199 seconds)
  done (took 130.042466428 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888248804 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.885831138 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.886683114 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.889459896 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887797291 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.888434955 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.887642809 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.887708199 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.890178924 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.889385883 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.887334727 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888522251 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.891365784 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.886515543 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.889152767 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.887250996 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.888156804 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.887140235 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.888711409 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.887534183 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.886764489 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.886672812 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887466582 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889067383 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.889689934 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.88904329 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888971618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.886824086 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887000346 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.889563577 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.886956346 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.887705946 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888443642 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888992983 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.887378307 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.889052288 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.889342418 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890253318 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.889699967 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.889794966 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.887856805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889766999 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.886902166 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888781773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.887539505 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.889866803 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889549009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.892529414 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.890083525 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.890829039 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.892585639 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.889291993 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.8899608 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.887637852 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.892738118 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.892777468 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892600842 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.89170117 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888911812 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889151946 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889649107 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.890422217 seconds)
  done (took 118.934021445 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88922056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.891385972 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.887059057 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.88444183 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.889758499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.889365095 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891393361 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.889816557 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.890499474 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.891973496 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890492912 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887091165 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886004867 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890428955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.890165835 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886935442 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.888232744 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.888369005 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.891980531 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8887821 seconds)
  done (took 39.604361905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.886705547 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894528763 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.88862645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.88742134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.890969506 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.888954388 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.891260888 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892015025 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888347365 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.892885847 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.891926882 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.891530749 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888789236 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.890837501 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.89331381 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.889648898 seconds)
  done (took 32.068991216 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.887669966 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.890432516 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.892374372 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.892493624 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.89130475 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.892405351 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.893713159 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.887241274 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.889253694 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.893653628 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.893417119 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.89175376 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.89126012 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.891834139 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.890174866 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.892439929 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.888506555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.888773138 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.893814321 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.893727151 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.891201068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.890777539 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.894245354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.894050377 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.889640417 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.892702806 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.892032835 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.890966536 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.890569516 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.893711995 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.890784674 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.891372109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.890971443 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.891584959 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.896816444 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.889778572 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.891694024 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.894445462 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.894993689 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.895458463 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.895047632 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.891348653 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.895454149 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.89502784 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.892112226 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.892237407 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.89557427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.895251526 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.894303794 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.892612449 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.896177447 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.897144766 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.895487315 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.897379383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.897070455 seconds)
  done (took 105.920469018 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.895480533 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.897109325 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.89413769 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.896760205 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.893665764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.893781867 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.896992081 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.894059203 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893450431 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.896827304 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.895474734 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.895116648 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892064693 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896245629 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.894333047 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.897580701 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.893596687 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.894979086 seconds)
  done (took 35.936749091 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.894495391 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.892562816 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.893794206 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.893176164 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.891354199 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.895531488 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893840432 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.894939434 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.898473035 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.897153309 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.896601665 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.897135501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.898037872 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.897169363 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.893110291 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.894632476 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.896926957 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.900955829 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.895922829 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.896938963 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.899260124 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.899578229 seconds)
  done (took 43.538743441 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.89768199 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.899608508 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.9148667 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.922437447 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.922570087 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.935067158 seconds)
  done (took 13.317376299 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897695933 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898526416 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.897809899 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901793839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898901241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89532391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89742484 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896555539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898738912 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89740263 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891857889 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898673616 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899104617 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896100685 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900535771 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898251705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899450576 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896233812 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896405228 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901066555 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897953381 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.90103457 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89742621 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897292174 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898375454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894954265 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899204264 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896642537 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.894407682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898008678 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901575375 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899525351 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898468672 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898993912 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901213224 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903745704 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897896168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901748837 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903070131 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899028984 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.901106491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903140848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901315446 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898643805 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902067472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898274645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900158178 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898984982 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900210818 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899945368 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900195502 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898767989 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902026946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90289204 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901475906 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902016423 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899109338 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898282142 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902647281 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900178637 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89896231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901869992 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901683544 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899253491 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905221094 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900930857 seconds)
  done (took 127.189375471 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89958028 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902512483 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902749075 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.90430708 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902898497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898081427 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900853701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.899892021 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903883313 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900552418 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901380724 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89871719 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.902563748 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90313342 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901993046 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903023689 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903367199 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.902173476 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898747538 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.902898094 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897103608 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899950285 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901974946 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902700923 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903982947 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903081221 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900421381 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900382418 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901444127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90015849 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899975522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901120208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89985376 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.902261139 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900975003 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900844736 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.90178368 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901785444 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899833439 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903455422 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900967625 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901204565 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900448911 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.902569978 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.903542263 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901825278 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898707801 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898190467 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900222398 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901155816 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900963466 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.903567394 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.902669842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904221189 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.902501928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.902084212 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900141773 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900848522 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901212308 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905094873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900932609 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901150497 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906465521 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900766495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903191799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90380829 seconds)
  done (took 127.337979358 seconds)
done (took 2599.234950529 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.919626849 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.950798588 seconds)
  done (took 15.706023618 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.053382838 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.010700748 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.891850699 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.946018313 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.890892713 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.909255005 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.896397076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.888821246 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.890978335 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.892680196 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.894915431 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.082953642 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.900299685 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.889446203 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.896918738 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.985815352 seconds)
  done (took 52.919724347 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.894526991 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.895905697 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.908870799 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.898604466 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.895690606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.917018171 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.928015925 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.898751292 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.956813854 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.903765433 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.025387618 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.903654229 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.89319091 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.951265662 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.907609144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.910599181 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.986748086 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.96866897 seconds)
  done (took 36.464679022 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.974794179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.903175542 seconds)
  done (took 10.704998477 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.898202701 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.890998519 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.912715769 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.886891528 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.891455321 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.91151591 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.925122577 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.923879437 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.906157851 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.948300552 seconds)
  done (took 70.917589073 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.894868544 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.890486557 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.889269089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.893383847 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.878422795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.882539807 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.885147369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.880457989 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.586087576 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.919711718 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.893585001 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.900358478 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.890542369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.893130177 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.889471927 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.91388243 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.011833995 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.88806396 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.885830565 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.895023689 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.888784886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.972139495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.901044797 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.88639799 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.917882468 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.583614475 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.895365984 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.893013519 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.999188134 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.885520491 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.888586914 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.889045634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.891148601 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.279321117 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.164385095 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.885617148 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.892767906 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.894207129 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.884331991 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029083053 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.887451525 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.894376343 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.873953714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.152308425 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.980316428 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.929521933 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.227981128 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.886531514 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.885510927 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.915800528 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.887237871 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.888831652 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.899575181 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.40501346 seconds)
  done (took 133.718046069 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.88221286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.171621324 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.033673938 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.884116603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152477974 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088562805 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.883408011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929821402 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.882501862 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084359882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.102929828 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993032216 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.881854787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.88011736 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.875582385 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876030618 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045375128 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.948882701 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.876503528 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.875444467 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906514773 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093728445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00879701 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.877550963 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.897470304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.090788399 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.000602395 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.987547871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.366575729 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.874037066 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946078513 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.879020221 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.877362495 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.871270547 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033318955 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.974788393 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965236141 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.875259289 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872301407 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871342233 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.543632532 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070933973 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.973203502 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.019199141 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128166659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.084286957 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.521842486 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.872175028 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.517203483 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.036599385 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.08783044 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.087286475 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.000498271 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.877692241 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.022244473 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.87198443 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871694716 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109049337 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119671626 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.976818728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870825097 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871923602 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.870211546 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116771493 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.870628934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969079419 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871074886 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866792333 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.97228781 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.975287353 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.118735813 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08692695 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906488936 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.173554547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.360341026 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089136415 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.942198771 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107826843 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869603226 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866134041 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958360953 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622120249 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.073471394 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125250825 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.093677041 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.907631265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.496070357 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87027927 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068928193 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.057617276 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.063656894 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113684487 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.028211166 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.20160888 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870063844 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871442069 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.121025592 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.008280516 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.875312139 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23334118 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106214612 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.430134126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.904017895 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.16891926 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005386944 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.30685237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.499152014 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870898894 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.040988717 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913683046 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.873593826 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873525698 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.065000056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.683503437 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873205839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.634647728 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.939840202 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872044971 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078314319 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87621677 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08243279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.875186114 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109571401 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.182361088 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907034223 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045631038 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.117009824 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.697278353 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123059365 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.122608908 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.991069783 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168595622 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.59840315 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872984261 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148429556 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873637541 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.87340685 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.041667112 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.873591529 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109814199 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872461601 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.103283351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897008185 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.032585954 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874200984 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10850599 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908187096 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.93112022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873296225 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005805032 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876419211 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.761143928 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032980136 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875619568 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.871886187 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.289378615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.876154113 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020366698 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.110538325 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897527406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.944291373 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.398487178 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874906749 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961382489 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900767247 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.316082411 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.873431753 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.096985842 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.843000754 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.306796698 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.873375775 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113916088 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.129004078 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.877087702 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872299774 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.618276808 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.619245012 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.875176761 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.034432596 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.383863087 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.519076374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079467112 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878671583 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005407111 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874890266 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.954739569 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.224716375 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874286147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.872072416 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.876491019 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.874168316 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874773601 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087354852 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90454714 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.404722753 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014104057 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.0956796 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.183458547 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.098468261 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920244015 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.880035342 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.144051786 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.877453593 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.939736529 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.875435794 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901771614 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.109268974 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874255821 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.105378796 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128092598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.841450095 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.930301357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876017541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877216496 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.873113203 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034054014 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967570366 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875574848 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.878218536 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994549483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.003454075 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.068856489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.504169268 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.059498423 seconds)
  done (took 901.867970943 seconds)
done (took 1224.133399906 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.880765693 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876176387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.865053922 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880362841 seconds)
  done (took 29.313727177 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891499725 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.887074692 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.888194915 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.886444134 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.887939104 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.887922021 seconds)
  done (took 13.14300966 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.131967793 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88005618 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881263479 seconds)
  done (took 21.706444516 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.954939125 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.294453474 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.998903912 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.328062791 seconds)
  done (took 10.390290796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.888784334 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.889180263 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.888055263 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.89186491 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.889932213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889509295 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.889429159 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.889661957 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.893698318 seconds)
  done (took 18.825589062 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.349366452 seconds)
done (took 99.53797315 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.885126218 seconds)
    (2/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.248533186 seconds)
    (3/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.975198877 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.933730854 seconds)
    (5/309) benchmarking ("sort", BigInt, false)...
    done (took 6.884354376 seconds)
    (6/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.684292837 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.020123383 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.179781487 seconds)
    (9/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.898844253 seconds)
    (10/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.035672269 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210088467 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.022826757 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.943824921 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.92180102 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.96188679 seconds)
    (16/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.3329624 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.905518085 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.002214821 seconds)
    (19/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.469742116 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.543999295 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.041860479 seconds)
    (22/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.961300997 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.897629333 seconds)
    (24/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.893080523 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.005119544 seconds)
    (26/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.283765555 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.213034211 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.770610511 seconds)
    (29/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.017606831 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899142717 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.176418199 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.026050514 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.0131517 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 5.70669699 seconds)
    (35/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.945778542 seconds)
    (36/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968313735 seconds)
    (37/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.977927938 seconds)
    (38/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.683073812 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.347387571 seconds)
    (40/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.786333801 seconds)
    (41/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.138835267 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200579792 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.982103893 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.242216413 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.686050716 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.137717337 seconds)
    (47/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.019103091 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.997632285 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.992218562 seconds)
    (50/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.354603589 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.14519515 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.883204464 seconds)
    (53/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.131513492 seconds)
    (54/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.883532311 seconds)
    (55/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.913070594 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.475058244 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.906318816 seconds)
    (58/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.15369823 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.288425814 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.661093033 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.943615419 seconds)
    (62/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.563709128 seconds)
    (63/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.882149369 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.00954066 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.938246526 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.463073042 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.048307419 seconds)
    (68/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.155878509 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.224869749 seconds)
    (70/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.979148941 seconds)
    (71/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.117587444 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.886178488 seconds)
    (73/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.181755223 seconds)
    (74/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.399473002 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.849760454 seconds)
    (76/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.365374147 seconds)
    (77/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.468778712 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.031651906 seconds)
    (79/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.006436493 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.988857342 seconds)
    (81/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.082251896 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.102091045 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.051459749 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.185712832 seconds)
    (85/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.865849295 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.971584193 seconds)
    (87/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.592627666 seconds)
    (88/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.456021978 seconds)
    (89/309) benchmarking ("sort", Int64, false)...
    done (took 5.591954017 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.21618085 seconds)
    (91/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448148306 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.919099407 seconds)
    (93/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.129504546 seconds)
    (94/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.236569714 seconds)
    (95/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.023360012 seconds)
    (96/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.884098562 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.268729138 seconds)
    (98/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.009032356 seconds)
    (99/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.560026263 seconds)
    (100/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.955236872 seconds)
    (101/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.909646903 seconds)
    (102/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.928826278 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.047429333 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.096136846 seconds)
    (105/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.289525037 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.484732345 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.530847077 seconds)
    (108/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.97043826 seconds)
    (109/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.243599598 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.88611202 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.885350081 seconds)
    (112/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.803627559 seconds)
    (113/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.909811497 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.009095315 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.183427176 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.79532295 seconds)
    (117/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.035635557 seconds)
    (118/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.98356042 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 2.335425688 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.906687835 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.56278308 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.083883697 seconds)
    (123/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.870584835 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 3.382353973 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.147091144 seconds)
    (126/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.010958535 seconds)
    (127/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.294811508 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.10313137 seconds)
    (129/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.001562079 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.232645983 seconds)
    (131/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.886366141 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.862407471 seconds)
    (133/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.996652162 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.523081446 seconds)
    (135/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.940496736 seconds)
    (136/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.914086737 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.93722956 seconds)
    (138/309) benchmarking ("sort", Float32, false)...
    done (took 5.652123413 seconds)
    (139/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.995470936 seconds)
    (140/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.8981478 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.535470273 seconds)
    (142/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.997315244 seconds)
    (143/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.871277694 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.77219228 seconds)
    (145/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.869675405 seconds)
    (146/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.086407136 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.107219487 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.912400537 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.956543183 seconds)
    (150/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.412210288 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.058813646 seconds)
    (152/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.276326875 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.890715009 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.920235604 seconds)
    (155/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.22702733 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.483677568 seconds)
    (157/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.043125406 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.91151787 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.874745126 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.57193197 seconds)
    (161/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.074255653 seconds)
    (162/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.896913776 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.265298922 seconds)
    (164/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.864132824 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.965979583 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.909312017 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015590846 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.948947867 seconds)
    (169/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.197157026 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.574574195 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.846097076 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.020955207 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.887119399 seconds)
    (174/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.873511864 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.543744526 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.912865438 seconds)
    (177/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.26404372 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.087488003 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.886392222 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.555619759 seconds)
    (181/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.008245769 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.401328581 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.990360297 seconds)
    (184/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.982341091 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.090223606 seconds)
    (186/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.11008942 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.997029364 seconds)
    (188/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.534102536 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.676401998 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894424529 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.915556753 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.851924691 seconds)
    (193/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.410964264 seconds)
    (194/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.055101476 seconds)
    (195/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.875656821 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.020048108 seconds)
    (197/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.192118215 seconds)
    (198/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.893747677 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.297349776 seconds)
    (200/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.972890631 seconds)
    (201/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.975716904 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.200100156 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.488968298 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.148837405 seconds)
    (205/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906774009 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.915260391 seconds)
    (207/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.244010236 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.94746829 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.397288743 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.79535995 seconds)
    (211/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951890448 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.98836663 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.917369361 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.779037383 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.106644704 seconds)
    (216/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.992664285 seconds)
    (217/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.114871497 seconds)
    (218/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.172736276 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.907501029 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.268157499 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.009623483 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.999862586 seconds)
    (223/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.891531363 seconds)
    (224/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.241864677 seconds)
    (225/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.513408443 seconds)
    (226/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.396138719 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.890187213 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.913682377 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.876200754 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.153121436 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.975338576 seconds)
    (232/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.893837836 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.908418341 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.931135046 seconds)
    (235/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.97367437 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.042466634 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.033880992 seconds)
    (238/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.956892842 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.797851653 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.783205559 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.425802317 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.90637238 seconds)
    (243/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.347267857 seconds)
    (244/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.296937738 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.744478268 seconds)
    (246/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.883174724 seconds)
    (247/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.066223887 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.16759305 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.882080444 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.193568177 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.077987695 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.297691705 seconds)
    (253/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.060440621 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.192335414 seconds)
    (255/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.988970364 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.498977032 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.991385023 seconds)
    (258/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.033671242 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.272717589 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.004800357 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184791781 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.922291669 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.896116828 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.073164688 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.281830411 seconds)
    (266/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.193073378 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.037263555 seconds)
    (268/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.895743959 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.879622684 seconds)
    (270/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.595538897 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.280075535 seconds)
    (272/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.186015111 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.185738112 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.909540877 seconds)
    (275/309) benchmarking ("sort", Int8, false)...
    done (took 4.863079735 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.09093504 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.122954856 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.991782421 seconds)
    (279/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.370889136 seconds)
    (280/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.097183397 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.11653114 seconds)
    (282/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.922154982 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.981626066 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.196205649 seconds)
    (285/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.900415556 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.210269182 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.04365713 seconds)
    (288/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.522855307 seconds)
    (289/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.003646472 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.640567316 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.895953004 seconds)
    (292/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.459351993 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.736114321 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.139730797 seconds)
    (295/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.109845068 seconds)
    (296/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.105021394 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.144041932 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.914785594 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.941711938 seconds)
    (300/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.924755573 seconds)
    (301/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.004668066 seconds)
    (302/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.955472536 seconds)
    (303/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.985316504 seconds)
    (304/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.926315592 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.901133268 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.951073554 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.898660422 seconds)
    (308/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.315475333 seconds)
    (309/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.882284134 seconds)
  done (took 1022.353070321 seconds)
done (took 1024.244658188 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.041782036 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.928844469 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.909385372 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.931286073 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.022130306 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.944562834 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.919088697 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.91144501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.956316629 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.958216056 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.909146562 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.944090688 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.913085356 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.91303674 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.909276608 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923730272 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.214614972 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.932133172 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.929059953 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.919753345 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.927985867 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.911127526 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.958859015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.945561945 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.916400642 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.912491642 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.914844177 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.930361481 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.02302503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.91567134 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.913628486 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.923945231 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.214350958 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.928595549 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.908267368 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.932674451 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.92384245 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.919503373 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.913578424 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.944650281 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.349317416 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.913156431 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.913778121 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.91171326 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.912655405 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.915941086 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.913841194 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.91747129 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.92555672 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.927067977 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.347481401 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930562809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.915342063 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.910861349 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.923719437 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.913596015 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.915714491 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.929378284 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.933326333 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.930531404 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.206903612 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.936014852 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.913129619 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.92986367 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.923014927 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.385527661 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.910607192 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.917525814 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.348640739 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.921890625 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.38446452 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.925189258 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.914540329 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.927885498 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.947696686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.214316354 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.927368811 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.911356778 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.921983861 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.912968568 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.922759142 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926363213 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.917885213 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.913539824 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.929479684 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.949247187 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.924096505 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.917017024 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.922853739 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.935605824 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.923831789 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.926965238 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.916467502 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.910015557 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.923090914 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.918041239 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.918674716 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.918957729 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.918655239 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.925325866 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.348955713 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934090775 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.911152687 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.911517808 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.914140704 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.930974435 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.348247313 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.918108291 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.936387033 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.962697926 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.916808616 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.208051331 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.940421826 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.932157086 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.923483287 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.919775437 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.910668245 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.208129894 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370272785 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.934388688 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.916319727 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.916741262 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934288805 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.917556885 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.91261721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.21775322 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.93685848 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931963804 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.038483395 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.926732815 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.950153304 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.916311764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.921036152 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.950460204 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933575069 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.949944925 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.919023534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933966197 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.933251784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.912509411 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.930334231 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.927286732 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.917635737 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.923097134 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.91213709 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.952560658 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.931127704 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.931835286 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.937765006 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.040069813 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.915366746 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.209646282 seconds)
done (took 301.854517277 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.983716874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.906724657 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.01532512 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.916243011 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.000643516 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.01557015 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.91191564 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.912476466 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.913253902 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.293450769 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.911443829 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.922148966 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.915911715 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.91379331 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.99657011 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.916317637 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.913593446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.257184595 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.917036983 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.988108139 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.907617838 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.912439464 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.91576876 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.30163541 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.917034488 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.91187877 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.995281821 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.915188215 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.26414411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.911112329 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.913293144 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.265539933 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.01682635 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.933159686 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.926675143 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.922135699 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.012369191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.918463948 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.009263405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.996661651 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.01695648 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.95748052 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.911791639 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.909012544 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.919554595 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.918184997 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.914269655 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.946250698 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.917317445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.914271908 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.257219294 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.927097486 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.92463205 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.915347579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.914405324 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.939182816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.914024267 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.919308021 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.009118205 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.918991838 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.997507134 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.302839591 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.295698902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.917244662 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.916033639 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.915717935 seconds)
  done (took 187.536939777 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.98503235 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.990014614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.984891441 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.918191816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.967922017 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.989643537 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.918575181 seconds)
  done (took 15.595847516 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.923885996 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.918118198 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.966630177 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96874765 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.919039736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.068657821 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.918654009 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.930836463 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.916767301 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.971657435 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.920309663 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.919260327 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.925772479 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.91363247 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967293035 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.930108295 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.035508437 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.920050348 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.919724217 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.072734532 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916968928 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.925031178 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.974064061 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.931654652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.92005562 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.923594735 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.511778436 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920220663 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.915091751 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.918535296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.916065897 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.963137368 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.920304107 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.920496573 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.917392712 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.035544576 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.920476582 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.917663578 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.920790774 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.912815931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.920533355 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.919541648 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.920106161 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.917100722 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.919178533 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.943706553 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.920348717 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.919962223 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.920061739 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.921568638 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.97025348 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.920629445 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.918839695 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.918411116 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.97602069 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.928088643 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.922158561 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.918182573 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.921624879 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.919316808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.074985918 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.969441563 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.920546293 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.968759474 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921126742 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.922239631 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.920536449 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.92184266 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.016166576 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.921099731 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.969328868 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.918801768 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.077720825 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.944237991 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.923580167 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.924197169 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.923521492 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.922245229 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.916980975 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.927999074 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.919682564 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.923035447 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.928468174 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.919219167 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.918661812 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.034780174 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.030915824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.919066649 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.934226357 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.92932585 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.919569287 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.975509358 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.922173236 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.919950817 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.976923927 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.038523954 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.978316677 seconds)
  done (took 210.804021722 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.927047806 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.930530906 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.923456178 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.9393743 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.923591861 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.924283128 seconds)
  done (took 13.413818405 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.925294542 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.92359228 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.923186286 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.923751482 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.924398008 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.923989979 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.924344679 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.925011741 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.927375113 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.923743256 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.924583559 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.922474376 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.923792077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.922821917 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.924345915 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.923345838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.924076873 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919421267 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.922699512 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923386263 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.071341258 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.923518691 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.923708061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.923156079 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.926392565 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.922274687 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.932880222 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.923678001 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.923771145 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.930005362 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.927067794 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.923353796 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.923757504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.929381112 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.928602577 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.924646174 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926607145 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.925823419 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.921200335 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.923981006 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.924381416 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.92398572 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.924374144 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.925027145 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.924190408 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.928887 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.929013722 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.932693573 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.924905277 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.926250828 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.924982377 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.924255623 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.925716391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.927243455 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.927195381 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.929499986 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.929433356 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.925603555 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.926854014 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.925969481 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.926095631 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.925837045 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.926204262 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.929558757 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.933871268 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.927001174 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.926540386 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.92838078 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.926855966 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.925688653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.926999446 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.921649035 seconds)
  done (took 141.635273792 seconds)
done (took 570.837196574 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.234586418 seconds)
  done (took 9.082689733 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.986162906 seconds)
  done (took 8.941245027 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.361403582 seconds)
  done (took 10.208694077 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.954897991 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.934602492 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.925181201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.920662864 seconds)
  done (took 29.591576142 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.987904723 seconds)
  done (took 8.835925791 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.928691498 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.914058579 seconds)
  done (took 15.722276598 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.960958262 seconds)
  done (took 8.810078751 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.016664364 seconds)
  done (took 8.871799155 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.944723139 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.941161915 seconds)
  done (took 15.746492812 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.90286765 seconds)
  done (took 8.752070825 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.72738444 seconds)
  done (took 11.588272952 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.931700506 seconds)
  done (took 8.792479872 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.933913154 seconds)
  done (took 8.784392797 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.983362993 seconds)
  done (took 9.833603347 seconds)
done (took 165.410882562 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.921460862 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.924106028 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.917080542 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.919941015 seconds)
  done (took 29.534420053 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.960016853 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.959642914 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.961385539 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.974241216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.966645081 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.958772102 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.952109693 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.952369974 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.969527469 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.962808691 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.961264586 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961198995 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.959906773 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.952113306 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.964337611 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.962682222 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.971748044 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.961846835 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.952831123 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.963796856 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.927379784 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.972438776 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.963588845 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.929700437 seconds)
  done (took 48.873268693 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.123218315 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.999693373 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.080745151 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.979378407 seconds)
  done (took 10.035607105 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.97870951 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.982505402 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.995537699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.032096612 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.059533543 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.990436304 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.956656931 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.949888172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.936269913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.982050558 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.056930486 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.998166475 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.065272779 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.927665959 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.110592727 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.928162126 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.928011372 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.982250542 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.032042763 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.050066687 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.929383144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.980806279 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.983205211 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.998056952 seconds)
  done (took 49.687867675 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.929509642 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.934655998 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.933283794 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.927515001 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.928460074 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.929614672 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.933881913 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.929362256 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.948899635 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.929422797 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.929765698 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.932911105 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.931324326 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.932283354 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.933816958 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.945495749 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.945763176 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.932534845 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.936657628 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.94002517 seconds)
  done (took 40.538160401 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.928095068 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.782964501 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.280731655 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.183681449 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.928597336 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928878521 seconds)
  done (took 31.892352263 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.944965046 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.938793867 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.934444452 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.988976473 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.070773796 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.942055391 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.933684623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.943217543 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.978285598 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.997857569 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.947441484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.959079849 seconds)
  done (took 25.439566876 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.930224069 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.929059452 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.944999445 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.942440342 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.945359275 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.938087604 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.942069344 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.928852164 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.945912181 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.95127536 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.940827495 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.946279518 seconds)
  done (took 45.147634089 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017501317 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.973665162 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.958532408 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606952415 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.312110292 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138436174 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462253912 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.266254422 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.932880635 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204616595 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08865056 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041055213 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190213332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.392096557 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.960450948 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.400032876 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235537432 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139430015 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950174577 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669124996 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993717914 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.066990419 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.766741434 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.987037511 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145681791 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.07259763 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.192170456 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.931716156 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069636684 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970026349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942677106 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.930523435 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204939726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314352217 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034608763 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943286112 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553120217 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.645721208 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.91523908 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.711395914 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.724078197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.061770487 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942549481 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938648468 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868055943 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.038130635 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297758812 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.935573052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.646023892 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93392023 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943987036 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022032499 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.937016923 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.750943437 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920240805 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.929847105 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.930532414 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941815872 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502931852 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.117124077 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067450377 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.898364185 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.027779832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66855626 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333066154 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.080409919 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.935942459 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937514456 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86828678 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.65623874 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986500724 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27020864 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.950192966 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594830767 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246175299 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.118488423 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.870870365 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195480455 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411334358 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.897256862 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162015704 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933620136 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869658723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.969506224 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868889514 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20514152 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963611206 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.70981983 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966239506 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.26790416 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9428051 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953495955 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958589541 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157934327 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.857659699 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935035715 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.804769845 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062810781 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953055441 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.269769645 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868109129 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.933765703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190822457 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.146433154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.931632198 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.431473862 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091595466 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.432750164 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.982385634 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.025138042 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.979158974 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.209090818 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993372311 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.123140305 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992239172 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.937297052 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245421793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.468304778 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.069062376 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.081894495 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059643992 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.252368875 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956162418 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003213927 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942348205 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935984577 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.774959901 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.491587994 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.937850205 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.938620933 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.935630228 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977473428 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.938539485 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896268956 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.562294771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089129478 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.950208644 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.164370384 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446360254 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24483438 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874980451 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278352567 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.034652206 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.159315235 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.590751884 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.023183489 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203653367 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929325121 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.967014615 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980820891 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957687473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037222035 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961428909 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.020153312 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22575986 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.94282741 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.943283318 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.749010758 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.972547064 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947787749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.943761151 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.739432197 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.217273203 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.955191047 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.947499885 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.830184331 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.953534634 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005096552 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945388284 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95133747 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.482981243 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.667821101 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.942830553 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.527138456 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162984405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951893576 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.702018885 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052932466 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.024618217 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.21478921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997733986 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.876117506 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.653159188 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.634207118 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941504906 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.878520366 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941993693 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950778512 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952782929 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.138227617 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.217157248 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982759536 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.678049299 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.982548646 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952306978 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.946604225 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942019289 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.450666499 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.120975165 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060655272 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.985550733 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085509432 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.95585787 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877338143 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.945342389 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947838312 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.941932791 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.942294109 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974548506 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.668703743 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324532574 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200137194 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.680507359 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950565802 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.7007056 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.996095093 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.001085544 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.818083839 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037853725 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.05310428 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949352933 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.952352091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.734076801 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.655566636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.506843431 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271588329 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251030203 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384081589 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.081215259 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.965556704 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.280161446 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873695441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502843006 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000876199 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.696906067 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897733217 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024914018 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.58919811 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292507796 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956027811 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171022414 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333428233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.727034477 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092620473 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156816885 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980669145 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.015111922 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.901694719 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.6301174 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089151216 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.695670737 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147081179 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278644568 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.66088902 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.072573479 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.944259141 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619727058 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020995243 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.660012005 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.123119132 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.063245014 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.964046406 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433655604 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.955594592 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.174781131 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296407212 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022373917 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.059440471 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87986504 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956571719 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.956764157 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.947714177 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.942827577 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.82275062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.196754968 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957816774 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879986171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.984076604 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229600286 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.847988338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.952699249 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947391315 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256129877 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.4087015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110381933 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.969107008 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.463276702 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953640491 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882025176 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881650344 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.643755727 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.956006975 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919281807 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154938178 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.044147164 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936176718 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.94499415 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.193932425 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205737182 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.971182073 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.229212576 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228164328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.652044384 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979612965 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.051573482 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.683022803 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.068776629 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953747134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189574527 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.74843534 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.179282928 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.987865235 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.896722968 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.952530913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162646999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.951948727 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936401333 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182331333 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.673417245 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.073881168 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281694121 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025186423 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.937319221 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005144659 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.04430731 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963360674 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032797802 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964375379 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.966318259 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964485428 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000385337 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950478347 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.080447012 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968309859 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043658951 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.13889527 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.476570678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.958313815 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235735254 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321413291 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.286446966 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015588469 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.954141157 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95443348 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890062368 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102533458 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.186153649 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230113187 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.080178912 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.071379449 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977324997 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668803451 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.079029842 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191395286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230978296 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.859322355 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373993142 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993860849 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.954991304 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964616532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.166255701 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169165822 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250431352 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.097552949 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928507406 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3130931 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231116285 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.955783184 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958057314 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543373881 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.960969501 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.743708683 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.990569951 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900679342 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229974207 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968061574 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.33050903 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.975545997 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.117773941 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.471367511 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.708084007 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241090387 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.936782105 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013946946 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236195573 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.348827594 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265804602 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022379449 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965493617 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.061262576 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10474597 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.839000177 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.954574601 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.960147844 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004721334 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.666590316 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.9653264 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242291292 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263491052 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.951112815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.838670934 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981071156 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.968161102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184226863 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229539234 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.203515285 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966393215 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.967211448 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.775967837 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242009049 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.015619782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894492717 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.960062206 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058904885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.202168926 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97905675 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.411739835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.669879838 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227144718 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.954508921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97893168 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022617104 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.326553528 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281722704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.496681545 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162079622 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.541234745 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.448682334 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255083918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.966232934 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.026378727 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256154454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.963686799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.94836794 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990215944 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.235189199 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.270088774 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.966326104 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808204761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.929099284 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.301758821 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517226485 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896268849 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.967142652 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.020399619 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.9610838 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08415026 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968741969 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.844835005 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032654149 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.73654874 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245909065 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.961169886 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.943436793 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.744266308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.156063954 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987985916 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103764122 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967161199 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.672753566 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.320304922 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.214388911 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.943985926 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.959931706 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.961364543 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957426083 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.956284629 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.162284518 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.15492874 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232172842 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.958802682 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.987503496 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961161592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.174588214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.170397482 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.937203908 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097785626 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.950483305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99404256 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.870832842 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466592087 seconds)
  done (took 1711.424312162 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957726734 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.991872866 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.97220255 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.060580842 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.99755555 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.028843976 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.066115063 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988318713 seconds)
  done (took 57.953429483 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.959102188 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.160559554 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.968619982 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.960123119 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.968839323 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.959516617 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.122302711 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.969589124 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.967325299 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.971115752 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.963049937 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.958843291 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.265381071 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.981255126 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.96199171 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.951355859 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.967419849 seconds)
  done (took 75.968471149 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.974372493 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.026684072 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.995415051 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.977995304 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.928411816 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.960867118 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.769929061 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.974835797 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.963233819 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.183202299 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.595642549 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.965969858 seconds)
  done (took 91.210757816 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.973317034 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.969813769 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.967531387 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.96926448 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.968769536 seconds)
  done (took 11.745881635 seconds)
done (took 2231.324910242 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.403443612 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.18193476 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.200462793 seconds)
  done (took 6.276567516 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.113855608 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.162290607 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.281770562 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.29088281 seconds)
  done (took 10.747541302 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.256614319 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.352037517 seconds)
  done (took 6.504371422 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.349171234 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.969792993 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.34219628 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.965400765 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.964830762 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.964773244 seconds)
  done (took 22.796474372 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.968808751 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.972453755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.972519935 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.973346769 seconds)
  done (took 9.781684846 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.950301851 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.647393943 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.953733448 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.965194965 seconds)
  done (took 21.412742264 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.720383046 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.73081078 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.714773059 seconds)
  done (took 10.062490468 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.511609715 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.862994064 seconds)
  done (took 9.270890838 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.222418167 seconds)
  done (took 4.118760346 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.099975435 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.278672404 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.477507158 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473280136 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.565117081 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.653537622 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.272851005 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.205056883 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.359460431 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.392919517 seconds)
  done (took 25.675207908 seconds)
done (took 142.605174592 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.342854949 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.207711385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.165916692 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.300259583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.194657963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.165876298 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.18467373 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.284157083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.809750772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.808197417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.300853597 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.192769969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.131545169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.207199829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.130541092 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.202024644 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.187364427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.359140729 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.99434957 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.192583531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.185973277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.935948007 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.142162057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.947876834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.217416186 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.117550929 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.515447759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.207764851 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.151046156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.522389683 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.116079435 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.350333595 seconds)
  done (took 175.668103298 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.87365707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.967333974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.966643422 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.983607893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.338248248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.967603434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.965048811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.966519605 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.024375714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.010407312 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.966349627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.312683631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966340557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.967223345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967954588 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.965074816 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.168997468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.944496433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.981750289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.987846473 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.993102196 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.255134831 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.9951321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.315812672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.205012665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992988282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.967752083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997629541 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.971336977 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.98165841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.984595034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.966659065 seconds)
  done (took 210.818034806 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.968505765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987207465 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.971772767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.96680176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.975854428 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9704819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.974859412 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968186259 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.527058289 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.519140159 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97652958 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.976722707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971015363 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978979168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.982092701 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.968926595 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.005150648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.992143477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.983313054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.986177846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.995136968 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.715174123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.998676912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.695654825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.977680004 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.978770051 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.970512609 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.984632357 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.987184758 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.98817363 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.988138511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.972291714 seconds)
  done (took 223.823780606 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.172655727 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.978686383 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.979882539 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.935168332 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.979613987 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.978350745 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.970933094 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.169025578 seconds)
  done (took 20.08001404 seconds)
done (took 632.295941243 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.403415399 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.243783822 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.146442326 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.998709312 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.230859506 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.026212097 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.001494937 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.061810116 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.721204317 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.058152387 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.627548849 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.010035207 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.721337249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.013734493 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.123663317 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.049539071 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.527034982 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.609438593 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.171966508 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.053483262 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.169589637 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.949514591 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.064994414 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.749711139 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.733018632 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.985470881 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.183977997 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.533733726 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.003871308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16036914 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.71174937 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.383577511 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.002597648 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.993501051 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.047206555 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.029355208 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.351038042 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.001713219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.120417074 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.758664471 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.051446886 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.606721873 seconds)
  done (took 107.2941716 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.968475746 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.970127432 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.968722101 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.967790879 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.970066191 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.968220315 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.968293637 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.966704313 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.969696419 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.966061398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.967476389 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.969351231 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.967632036 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.9706812 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.968391068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.967376794 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.968185948 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.970683252 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.968997427 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.968931338 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.967500065 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.968496051 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.98391301 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.967638766 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.967123083 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.968224497 seconds)
  done (took 53.10745411 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.981202198 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.130972563 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.195593196 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993851737 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.98543645 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.985595441 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.001062417 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.982213025 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.983488754 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.98648185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.083633701 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.98364378 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.002317136 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.200280173 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.993091067 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.983719821 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.984336248 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.985597387 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.140304455 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993217857 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.999014189 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.984411836 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.999844596 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.991528601 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.982671747 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985221032 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.98799658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.455706087 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.987699388 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.07762516 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.024139214 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.001529292 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.422354138 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.208843391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.031782118 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.988634705 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.985688633 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.081782522 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.986940281 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.98449156 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.00036338 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.985800974 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.202439188 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.486654095 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.990252308 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.986073169 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.465570432 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.084779721 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.02096611 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994940488 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.205329845 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.994780447 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.987183793 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.985773743 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.020912226 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99417517 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.984264765 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.350663414 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.992357222 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.003525672 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.988250716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.984890371 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137920609 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.986969434 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.128718702 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.988386278 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.992346132 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.982979294 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.205420992 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.996323095 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.497435316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.992701734 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.985815882 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.080982176 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.129784281 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.488424171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.994298005 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.142737006 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.445145297 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.005119126 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.992657923 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.447185881 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.008981215 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.992762867 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.9882088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.988373073 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.98653167 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.030464837 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.003047671 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.430659566 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.499163379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.359419918 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.006150308 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.001525951 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.987799959 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.351558957 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.990704407 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.9879384 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.200850001 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.502079121 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.994739384 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.997354003 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479341631 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.996583217 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.007196918 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.994068311 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.209925654 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.997286942 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.030982299 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.987593821 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.994979795 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9899228 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.005847856 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.993737986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.989007814 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.469359218 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.099179804 seconds)
  done (took 245.537920567 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.982664526 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.990501671 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.982980717 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.980549575 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.981617587 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.986865378 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.981549489 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.979946333 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.987056979 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.982634089 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.981749891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.98311154 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.983002622 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.982011892 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.529131926 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.995725829 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.602199222 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.990376352 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.989339739 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.985496102 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.670957901 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.996303719 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.99008774 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.007598994 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.987784906 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.989685265 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.995119405 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.034617711 seconds)
  done (took 171.444698908 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.99518751 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.17813393 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.010462165 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.030999339 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.004749893 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.992122824 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.019412003 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.01513223 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.997164738 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.992741208 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.993676728 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.05721972 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004821856 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.130869528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.025199068 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.024082019 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.1023235 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.001615837 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.994802086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.993748787 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.025048875 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.989237187 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.056896454 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123348547 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.011661452 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.112090459 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.001569955 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.996887015 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.996494473 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.114398777 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.010575286 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.05734211 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.021580666 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.013202694 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.117020345 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.11233205 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.102709329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.024209825 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.000216198 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.994710962 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.996306106 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.984884754 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.115052298 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.013058021 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.998611822 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.107098395 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.011253908 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.997706367 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.006268229 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.994886897 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.010011794 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.011801172 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.0626974 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.12890726 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.028681801 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.019479024 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.022720424 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.278266985 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.008944262 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.099466171 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.994560646 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11403936 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.015398836 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.985438421 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.99686889 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.003135696 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.024787534 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.028832465 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.104320672 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.00282314 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.101432069 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.030002776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.004563069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.995605365 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.001008762 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.115561025 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.118165825 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.030823321 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.034511597 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.027788345 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.990368888 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.999281757 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.985681213 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.015646291 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.998259391 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.11397329 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.114994525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.004492623 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.000047064 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.999329309 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.998873643 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.02433335 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.121788096 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.034545853 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.098555949 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.064792728 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.070863895 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.009692136 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.011191327 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.999552979 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.064033874 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.010821172 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.008855977 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.325369156 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.068607557 seconds)
  done (took 216.126719685 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.468615799 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.051397786 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.052775994 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.289135376 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.427371641 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.878772981 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.049194051 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.045762331 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.069606005 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.232272873 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.105384251 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.062679192 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.036324898 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.02028786 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.046901424 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.066832312 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.049597335 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.337741677 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.170137171 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.175982674 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.029354744 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.339342546 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.365472126 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.431943638 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.085057775 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.386237757 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.736466457 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.295332981 seconds)
  done (took 65.235170367 seconds)
done (took 860.646631843 seconds)
SAVING RESULT...
DONE!
