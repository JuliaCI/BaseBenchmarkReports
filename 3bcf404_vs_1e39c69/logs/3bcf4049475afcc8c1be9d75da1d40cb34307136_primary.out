cset: moving following pidspec: 30630
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.32945855 seconds)
loading group "string"... done (took 0.616317013 seconds)
loading group "linalg"... done (took 7.464624012 seconds)
loading group "parallel"... done (took 0.167062871 seconds)
loading group "find"... done (took 1.194399506 seconds)
loading group "tuple"... done (took 1.824048178 seconds)
loading group "dates"... done (took 1.272268604 seconds)
loading group "micro"... done (took 0.216013855 seconds)
loading group "io"... done (took 1.007176769 seconds)
loading group "scalar"... done (took 40.173967896 seconds)
loading group "sparse"... done (took 12.654431656 seconds)
loading group "broadcast"... done (took 0.955472024 seconds)
loading group "union"... done (took 13.569603257 seconds)
loading group "simd"... done (took 4.965028201 seconds)
loading group "random"... done (took 9.946001591 seconds)
loading group "problem"... done (took 1.865089 seconds)
loading group "array"... done (took 23.509657543 seconds)
loading group "misc"... done (took 1.790424616 seconds)
loading group "sort"... done (took 3.78348922 seconds)
loading group "collection"... done (took 19.107179028 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509745745 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.1338397 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122755985 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126254576 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157631371 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11950486 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132957482 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090889209 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.772111466 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157583401 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12687637 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420086349 seconds)
done (took 5.15851767 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.189145038 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092514291 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090426434 seconds)
  done (took 1.298576313 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078069437 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13479861 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.076731306 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078038463 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.078199314 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076767832 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.077432715 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077367655 seconds)
  done (took 1.711106162 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086621919 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.080859215 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081511344 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.080842415 seconds)
  done (took 1.443967534 seconds)
done (took 5.843297757 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.777874375 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220254325 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19504087 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.423650106 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.145935386 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.176568685 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659531079 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317848683 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197857568 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093535138 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119011874 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.333345682 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123632604 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.65275231 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090573457 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107623217 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.152162064 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451163183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083207562 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096585698 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103401832 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14132748 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10093658 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090819802 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.158490249 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080386445 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.152087392 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09416062 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079679476 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223839753 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.186295883 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669033101 seconds)
  done (took 10.657629015 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110379394 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.110637843 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.081821932 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136738686 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.111009544 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084045706 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084167283 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079965199 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.100073801 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139141248 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.102882163 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.115785928 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07859282 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07837231 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.093848166 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214584975 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090835165 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.092118199 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079400677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086524118 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119188773 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.091626626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090955412 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088631477 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140675763 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193824829 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110672625 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112351257 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.078931239 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097607191 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.128111005 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139512529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.079258381 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076912316 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138548819 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107151679 seconds)
  done (took 5.014673137 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.972571014 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161583678 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105758271 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.142546704 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.075618919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.119352526 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.076802096 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092481049 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209398795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.372267801 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.129066686 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.612444418 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123435768 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11736496 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078516551 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080567104 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078523463 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.402059983 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.105471356 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.11542925 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093685302 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080862925 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080375505 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.351129428 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085498556 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077277842 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081459037 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06719947 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.140818926 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081270265 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942591097 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.135402087 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078974918 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112557338 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.237640468 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102020988 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153395362 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078463414 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074015164 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161072408 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074774647 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08003621 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076307453 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092608441 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07386099 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.24318302 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.127521644 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0786368 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080585888 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175970442 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079646306 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095882723 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642823055 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165677874 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089828252 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.077428266 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.270341423 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097295439 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081922967 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.075456122 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075596373 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187682009 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147990555 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080021685 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079160361 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079356133 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081868865 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.387018496 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.076724876 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.729067822 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081930367 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.088478898 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081508156 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084405304 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085035373 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085665069 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09822078 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078808279 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.086702961 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077713445 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077821261 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078089906 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092766058 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392008472 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07826957 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08356625 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075986164 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098475325 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109241967 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.079751621 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077258372 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112585697 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081321254 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.077966332 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116145844 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08008704 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093427708 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080318852 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124096892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.077657059 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.104892174 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078590493 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112997484 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.083786918 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112645945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094593228 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0803773 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.547256018 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076281843 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.075227967 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084304804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077291498 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079604837 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078236914 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091590547 seconds)
  done (took 22.144137444 seconds)
done (took 39.900156203 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.260145074 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086226153 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086922742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.091135159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08637383 seconds)
  done (took 1.823578012 seconds)
done (took 3.007101214 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.139888826 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112574071 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076777399 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110247606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0769573 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113589178 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111084962 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092231243 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110936703 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.075319537 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107327503 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075494399 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075401736 seconds)
  done (took 2.492601004 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093698328 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09266486 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079673267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093670924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073712557 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092606069 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090918083 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097301074 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090275717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081968655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073301853 seconds)
  done (took 2.143343101 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092531164 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093184501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079089459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091285364 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075397058 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091306379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09087595 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097093937 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092048104 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084186156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074185091 seconds)
  done (took 2.13970706 seconds)
done (took 7.950599527 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088776954 seconds)
  done (took 1.25601849 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.606597784 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.062479134 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.091158758 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.119904805 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199356315 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.127330659 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283257981 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.095359875 seconds)
  done (took 8.956861856 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.119579854 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081898273 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.081935688 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077427155 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080506248 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080443545 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.081429717 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.078594623 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079342089 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.07978755 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078844682 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078205731 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07839451 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078271467 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08051012 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.077542595 seconds)
  done (took 2.564914121 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.108035117 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106679133 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.085842865 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085161408 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.081933708 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080900648 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082728615 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082979798 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079970187 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081384307 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.083435557 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.082674882 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.08056639 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07380428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.083660031 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084066967 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08044745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.082833021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.083964154 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082601056 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.083229615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.074049882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.081344686 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.082980514 seconds)
  done (took 3.308139141 seconds)
done (took 17.264353335 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.127958386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082381042 seconds)
  done (took 1.387822031 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093049613 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09517461 seconds)
  done (took 1.370092696 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095271887 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.077659931 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.103825355 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.088621988 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.076324417 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.074778454 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.098068904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074770134 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07403369 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.075149145 seconds)
  done (took 2.019643855 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080596753 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09183317 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.081740943 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.090854854 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.082493178 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.072917014 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.08189368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.076420623 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086950313 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.071257775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.080837917 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.091737199 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.080067918 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092818132 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.080884273 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.077393807 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.080228591 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.076546335 seconds)
  done (took 2.661376794 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077347386 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.077526281 seconds)
  done (took 1.348874357 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07891195 seconds)
    (2/7) benchmarking "second"...
    done (took 0.074550013 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079338101 seconds)
    (4/7) benchmarking "year"...
    done (took 0.075393188 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07295556 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.071888332 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.073219646 seconds)
  done (took 1.715423415 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.43070971 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124161525 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329543829 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08136155 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.092334932 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261821669 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074006268 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078777249 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078988384 seconds)
  done (took 2.789170383 seconds)
done (took 14.486933677 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092679101 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094428352 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.105922428 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.368191224 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100561257 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075335386 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.124686832 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.204346598 seconds)
done (took 2.362899763 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.222388559 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.645829771 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40784605 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20924294 seconds)
  done (took 2.451693661 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341815494 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09762941 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067761126 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077440927 seconds)
  done (took 1.78228344 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079107587 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07981948 seconds)
  done (took 1.354552006 seconds)
done (took 7.006899474 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077363537 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098942624 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076928811 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077017547 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074750326 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076522988 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.074461192 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073750623 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07606812 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.075285129 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.078289872 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.076147825 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.075102817 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074645867 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073086516 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07290597 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074590969 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073073037 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072542916 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072909117 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072040181 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074617407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.072967135 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072318532 seconds)
  done (took 3.05498536 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.094533419 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.078059005 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082039578 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.081899492 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.080648064 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08135946 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082257161 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.077043329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080263888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.076392434 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078177933 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079206059 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.077814395 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.078523791 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076733222 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078446477 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.079481372 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075114653 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077534237 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079052593 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.080329569 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074826061 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079068815 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079576273 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.078915326 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080414616 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07669063 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.074962508 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080301208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.078682944 seconds)
  done (took 3.582397732 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080926282 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074520531 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.075017687 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082060176 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.075069702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07478656 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.074401761 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074428994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074845472 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.074757279 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075825598 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07459159 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075122852 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076323419 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.075010362 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07749753 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090311123 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075393973 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075393944 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075149899 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077018361 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075555111 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.074878726 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.074344203 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073988856 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073820425 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074921487 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075072053 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074893066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.074243041 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077477585 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.077847214 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074292906 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081822418 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.077357406 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074317281 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078266504 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073259815 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.074738407 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074154755 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074152016 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07405417 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.074526959 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081382355 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.074924431 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076572151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.074857638 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075355084 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074271257 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.077329655 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.075047651 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073848422 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.076038899 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.075127345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.077424747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.072159543 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073809027 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071863965 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.074070208 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073290993 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072218634 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072115983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076614379 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.074982836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.089070198 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08154714 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07437141 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.075482629 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.075067252 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.075884044 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.073856456 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08600794 seconds)
  done (took 6.676157848 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102473715 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099136741 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07731443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075807012 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073012084 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075054937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.0789242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075942874 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076902229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.194192258 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074189022 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075925857 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075607958 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087059296 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075475364 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076290292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080653375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082455387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07434589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077719991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07520733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07941749 seconds)
  done (took 3.082615586 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.168607902 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.080313113 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.117496657 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084305071 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079061756 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083654614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080410871 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080763832 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080657418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078989433 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079061671 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080978763 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077668432 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079226836 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07984716 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079968878 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081245298 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07804419 seconds)
  done (took 2.783307361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08735306 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.076725409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095911003 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077594979 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076451947 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079067772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081859823 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.085694466 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07929992 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.077057223 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.085024759 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078554886 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.078876432 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075860977 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077651958 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077042756 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079149813 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076625019 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085513751 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080664214 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080912242 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083941237 seconds)
  done (took 2.989511649 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090635677 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07788997 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093639857 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079111836 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.072061995 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.073406299 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.079366611 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.074512241 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.078816965 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.076435298 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074688727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.073161348 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.077902904 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074670715 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.078043243 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075058796 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075970855 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074717504 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077604037 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.072616066 seconds)
  done (took 2.764249746 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098706459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078456251 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077894733 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086424724 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078767669 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078184432 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085301247 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078133151 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077331582 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095710621 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075356319 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075585652 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083630411 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081384642 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075220852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083874977 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083291064 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083598244 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076236154 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075902963 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.09583887 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075838337 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083670724 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076084967 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075774265 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075620886 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076052858 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081014704 seconds)
  done (took 3.485038554 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076728728 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076312735 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.074558752 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073743318 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073798997 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.07340005 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072504372 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.07245469 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074665226 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071718225 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.073674837 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.075722126 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07503081 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075597595 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075184945 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076014589 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076207177 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073643948 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074602377 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073924983 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076279066 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076567424 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.076981563 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073746534 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073898092 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076192903 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074405023 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073867898 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076285253 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073582179 seconds)
  done (took 3.45865992 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.087718187 seconds)
    (2/2) benchmarking "in"...
    done (took 0.084306428 seconds)
  done (took 1.391946627 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073823231 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091386121 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073782493 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080143166 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.079967486 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076651648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084331157 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08020512 seconds)
  done (took 1.855150192 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09582225 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.088274412 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.078774398 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.092133594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.087977054 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095105717 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149421457 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.078047137 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086050998 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.075105492 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.091796242 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.076693892 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.086161165 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080268864 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085925569 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08811886 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.074357959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.084125788 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.079757647 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.076261297 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078508354 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08959251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084293355 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.072323198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.080715453 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102734921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.092726345 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07647521 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082660358 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.087347162 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085821813 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07081727 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.077063814 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.077349235 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.074341493 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.086920932 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096003431 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083101675 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.088852385 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077972512 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088184893 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.071843123 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085692718 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.085719637 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090378872 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.077387241 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.077336526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.071398644 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.07633872 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081729217 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.072275964 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079960099 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071762098 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090286305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083243787 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090590313 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.076440193 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081718457 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082216095 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.083396397 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086997388 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081396536 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08426334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.076681305 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089857916 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085070431 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089510392 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.072528036 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070781965 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.075129177 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090518585 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104813602 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.086661265 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.078169614 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077972214 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.075142274 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082369485 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077913279 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08589946 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08673165 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.077523102 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082886502 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087684558 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080418672 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08155702 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.085288542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.074876023 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.079261857 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.077002675 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097638132 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.075994587 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.074782892 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.076829795 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090653488 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081839224 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.076669797 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076088095 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087028603 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07100491 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.077156685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078383113 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080948619 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.090908146 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082009832 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081864712 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089221284 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.083461078 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079352048 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08192321 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072219383 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076673358 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.076702374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.084985273 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070604289 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081144116 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07831599 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075973331 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.086567896 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.074337897 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.076318531 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087518647 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.083946877 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072352716 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.071421122 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.078738716 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073878508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076818682 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08600105 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071961599 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068009597 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068925815 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.208218007 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.076106005 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.082163755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.080643175 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.081601039 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070251561 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.073260957 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081085455 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.087061687 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.077534961 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.079217736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.084106792 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.080740976 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.075110096 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.0856383 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.081226048 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077434369 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083446079 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.078029104 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.071245604 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078912201 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.080895782 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.073898288 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.081712654 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078819297 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.080399089 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07627772 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075158263 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082260573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077327474 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.076596432 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078648175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.074047852 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089187996 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.080516292 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.070261344 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.07264858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.084453623 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076035334 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.074635742 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075882554 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.080653369 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.075886584 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.072848315 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.076035825 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.079840045 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086301882 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.079939602 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076973271 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.082829093 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089977201 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.076064903 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.082339511 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.075457484 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076266378 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.076326073 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087887179 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.08328358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080366521 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.081424729 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072403592 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086543625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087547353 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.077901948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.074402895 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078283156 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081521431 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.087841288 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081384778 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.077555478 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075118146 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080559349 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080443334 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082051749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.077073069 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.077543998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.083918382 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.074793654 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.084882136 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07702849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.087529478 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080347052 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.071464889 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078706374 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073727798 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.084718797 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.070286837 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07482015 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.076487967 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.075834317 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.073941626 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.081103544 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.069216885 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084976505 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086610976 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07874921 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076153928 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074769753 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086374976 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.079389572 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083171295 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079886532 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08376269 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08917233 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076307807 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.080595756 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088419747 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074666711 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06943199 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082447459 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.073274602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072615859 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.074060021 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.072667584 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078872609 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081843111 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.082871327 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.068300921 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.078559915 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072133018 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074746741 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.070384571 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.080730784 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.079823225 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.076489724 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084175459 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075299604 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073956211 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080371581 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07416407 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.075686716 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07469751 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079523354 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074426825 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079246996 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.075180863 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.078344646 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.076098553 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071234548 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.078473639 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.074424622 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.077595891 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081197154 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073749711 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077192929 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.079557974 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073693196 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.078610092 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.076335194 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.075937051 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078971734 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077791123 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076982296 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.078866868 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.068479769 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083401247 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072914716 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084585834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077213748 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070027409 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080624325 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07848916 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078917091 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.075082537 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073902458 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078882116 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.074466172 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.079085886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083278693 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.074589184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.087267483 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084129088 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078287216 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.079101175 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.077235056 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078994986 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07522049 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.076394351 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.074427137 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077185822 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.074245737 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.080491897 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.078799225 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077258668 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078825308 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074443751 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077112369 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074405464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06769095 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.074557982 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.073857494 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072808519 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084107914 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073452203 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.074943568 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072418345 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073565539 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07311774 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070607346 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0793118 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079949398 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073714552 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082130248 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.073941867 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.078727026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086411006 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.067500637 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.07200091 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.070673839 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073487177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083107097 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.073358479 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083889081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.076901571 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07493875 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.071023907 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073949915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070912667 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067912263 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.07192724 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080560693 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.074338528 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071984162 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072943721 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.078516158 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073106591 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083884191 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072540111 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075405845 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.072734719 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070247364 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074726072 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.074149977 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.078848681 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074238714 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07288941 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070615886 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073053423 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075950054 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.077597228 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072950513 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.077285945 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085477102 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072356799 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.079787635 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075954295 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067512518 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.078891364 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.074070455 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072280069 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073515606 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.079775249 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079951801 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074204622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084615896 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072279585 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076834063 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07342774 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070446271 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072926425 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.073426331 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07257696 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073089351 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.075478171 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084890315 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071535901 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078211434 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076982924 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.074585834 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081468285 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074658636 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077480661 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07859672 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073287202 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.077682554 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.324505564 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.082210054 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084180374 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079059353 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081782323 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085673583 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.079743501 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08741128 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081557813 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.079387763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081792387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.07804416 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076387391 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.078034509 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07661408 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086125827 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.078349961 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.077900261 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07788797 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.074603593 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.080461281 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079810123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087734151 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.083238107 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083794875 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.072534388 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.073951944 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077578227 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.076652567 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.081306289 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082533101 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085467625 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082250396 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.078511701 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.075116771 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.090333601 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.085285328 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.084157217 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.076574746 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.082436699 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.078480654 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.08245878 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.080142554 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.08040735 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077774545 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.082846806 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080570942 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.077320611 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086063942 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.083441621 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077343319 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.079769591 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.080125375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.079395975 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.071086093 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.077645123 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.08045964 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084147408 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.081345796 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076846358 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.090615231 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.074906851 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.078815547 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.079270167 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075803858 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.085000498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.071191135 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081451471 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076628098 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076501152 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.071356741 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.077091675 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.075020098 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.081193358 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077677574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07128514 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089524624 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088603441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.080737573 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07540676 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074205021 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.071097023 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.071122882 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.076995533 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077563369 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.080252143 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.088898502 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076798606 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.077434164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.070839175 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076862752 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081789257 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.082120949 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.072681631 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.070887698 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076526918 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080454023 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.085253255 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074849424 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.075324636 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082295907 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.081434827 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.073054626 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078750449 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.072756156 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081945154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092796242 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.076404621 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080254898 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084150332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086784683 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.076009679 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.071038917 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.076758524 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.079959714 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.079377934 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.076758237 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.076858149 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094021194 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081769362 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076594366 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.074342954 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08070252 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.077546203 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.086864264 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076460826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.075670127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.082338517 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.080647574 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084621947 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083960136 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086839546 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.079474066 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07935614 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.074075877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078089109 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.073301889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.074972169 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.215116972 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.077453276 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081446357 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08366578 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076625831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090254227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.088112115 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.077836363 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.071963244 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.075993674 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.077357858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.071278421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.076371305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.074412613 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.074152401 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.073745136 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.07568924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.079657979 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08405129 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.078853973 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07742723 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.076077509 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.069470394 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.082962739 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.081708836 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080546149 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.072733316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.075376914 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.077019413 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.082381949 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080528419 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.072837972 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.080352862 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.080494797 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080134933 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.071315988 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.085101007 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074951272 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.080913753 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.076430321 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076210524 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.077123492 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082400658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.080591927 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.077402496 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.081218137 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.081246447 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.077574644 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.07339296 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.073111049 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084297845 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.073747525 seconds)
  done (took 48.812194427 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112004645 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076500479 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072803191 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071386068 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082805439 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073138413 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071951965 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073462363 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072914022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075447435 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071662951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071633387 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080139008 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087271949 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082939541 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076425255 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071926441 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073217401 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072524003 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0726001 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080417244 seconds)
  done (took 2.992607126 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.087006062 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081421964 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08461734 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087047017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079005974 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.082032375 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083625083 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079916143 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085527161 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076575872 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085778406 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079935455 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076485002 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076474288 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076396776 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08036935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086000797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076591871 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080060952 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081735478 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080328028 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082128691 seconds)
  done (took 3.127115534 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07918192 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.07776022 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.082154725 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.071190072 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.075849712 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070968906 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.080569102 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.073979862 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.078585684 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077704433 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076459776 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.076485946 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081246909 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.070603213 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.077435199 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.073258783 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.118808194 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.079212657 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.07616561 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.076771053 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.071167778 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.081442103 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.070894141 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.071341601 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.076184808 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07991658 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.075910691 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.073120261 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.075586338 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.077582316 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07655786 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.075270674 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.081728571 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.081244529 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.076466853 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.075972976 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.07504603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.075285463 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07099445 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.074581175 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080114668 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.072597889 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.077591018 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.082362894 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.075332192 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.074812299 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082435285 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.077402555 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.071826862 seconds)
  done (took 5.129734179 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.092129488 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.124633828 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.078667926 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105266185 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.091692627 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.087790084 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.081052037 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.106225291 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.074668725 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.076327898 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.09290532 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.091620823 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.07739653 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.081438677 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.079509278 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.075355217 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.075538331 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.074574735 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.080220089 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074381958 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.079350928 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.081776628 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.089365945 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.088087742 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078373616 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.074422792 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.074222598 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07984322 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08764487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.079015745 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.079661557 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.080926832 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.091581878 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.082878594 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.075761514 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.079774496 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.09219376 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.077106986 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07902656 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.074961204 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.079482692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.081087958 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.083438914 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.092856782 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.077369873 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.081766508 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.077509806 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.074451191 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.089140554 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.078585426 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.085376492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.091616106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.081770612 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.077485543 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08119805 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.091591816 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.077418699 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.076410641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.079341403 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.089176733 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.075470047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.079715329 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088197699 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.076851018 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.081715761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089138324 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07999095 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.079225593 seconds)
  done (took 7.160425876 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087855878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.084441432 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092375372 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091464457 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103415678 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.084233855 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.084219248 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.083957392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083612003 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.088812004 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083964946 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104415088 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079091301 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085995408 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083874626 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085113169 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.084671865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084004697 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083727491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084696536 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.083768853 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091740407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08341849 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091895176 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109978686 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079339328 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083924426 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08400774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091316205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083603938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090686623 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.084370951 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083622759 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091042647 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088397947 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.081847179 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074860213 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081300658 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081926497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081830996 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076301357 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089661574 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081683297 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07648387 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081572316 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082032142 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089055875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.088228205 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083045724 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086032304 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081885271 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089703092 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082602305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084284319 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091675521 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.114332947 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089596369 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090994985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082386328 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089640996 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090094719 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.097799309 seconds)
  done (took 6.756190733 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095763359 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.086304133 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.087840892 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.072238303 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074775393 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082087989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076433188 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.075772328 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086994752 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.087010054 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088170995 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081405678 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085007207 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088869378 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08111981 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083533464 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080999913 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081589851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085701646 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080943543 seconds)
  done (took 3.034132422 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.086437759 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094877072 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.078127995 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083827007 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08009098 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082781163 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.078516155 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080231278 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077964796 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080087957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.087060474 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086909408 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077839816 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083263183 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086955272 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.083007549 seconds)
  done (took 2.691842429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085933283 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.083557415 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.090991989 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.077890638 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075299697 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07351238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.076844954 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.073102124 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.07443212 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.089029348 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.076896938 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078137554 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.074919688 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.074492546 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.072786553 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07740341 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.071449432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.072392695 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.075851844 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.087080028 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085187371 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.074256351 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074703893 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.074811121 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07572931 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.080609081 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.074673272 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072829675 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.072391062 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.07560409 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07566772 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078530888 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.072133233 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.072570382 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.07434506 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.072496517 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.075009159 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.075770494 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077655821 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.074354684 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.074677291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.075821689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07655849 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.076067479 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.071868267 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.076120466 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07218442 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.077773955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.072354055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.075748045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.074450268 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.077283281 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.075120411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.081179335 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.077485066 seconds)
  done (took 5.568948521 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090923487 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080597946 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07381448 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07440213 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.080168753 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.078624816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080189099 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079297804 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079554742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.075304453 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.080141966 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.080651697 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07869491 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07905168 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076576068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079525813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.070774394 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076324187 seconds)
  done (took 2.793684199 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082183692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07746183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.083477039 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078253182 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.076206281 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078994306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073399984 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.075306182 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076355366 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.077202691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077674208 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.079601628 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075140135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.078740108 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07747906 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076818182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07832292 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075092328 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076745885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073053488 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078967917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076059692 seconds)
  done (took 3.073763051 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.107069611 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.095328019 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.151992746 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.092528154 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.096654564 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.084390555 seconds)
  done (took 2.001212536 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101896675 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090412629 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07734643 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099352067 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084362683 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078697267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078792224 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078524503 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086768986 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087604974 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078113385 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087410699 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088296216 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0870068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084608036 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084518955 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078864554 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079014606 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078045691 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096350417 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079761081 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088139053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0789307 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079555786 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079799329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087423322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08771863 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08800473 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078558664 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088472183 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084308759 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078737037 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087684204 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087710799 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080365074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088017335 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0790017 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095908314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085017623 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086572821 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.079447676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085463885 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087603594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084043449 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087657941 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079165467 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084323307 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078849407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078328775 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097154319 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083854557 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089029476 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085050061 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088202984 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087654941 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097780262 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087567187 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086873262 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085616412 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090345184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08624502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085258967 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08687677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088195581 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084700152 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086374858 seconds)
  done (took 7.01321198 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093892966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097805478 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079234697 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086098305 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084353543 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076789541 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076510437 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076923118 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076680838 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077291881 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116223988 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077136578 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084164667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085796891 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077468168 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076751921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076869933 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084520564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076788491 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095891419 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077543069 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084915193 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085463986 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085048109 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085123752 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082177276 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077176799 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077577515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078777404 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079212402 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083100367 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078681142 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086893707 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.078249355 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086795389 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078549985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076888253 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082406322 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076254111 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081958341 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08445304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092567334 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076458441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076744882 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085259861 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076678063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076646729 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07613562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076652773 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07685713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085314032 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08601671 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086903801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086210613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078853627 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079736966 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078526056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078342625 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076860217 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082267031 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085322185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077637084 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095308998 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078420502 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079220814 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087433313 seconds)
  done (took 6.816364492 seconds)
done (took 143.286063028 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.195508449 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174144391 seconds)
  done (took 1.736390581 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088020103 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.115401691 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095406045 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.147035174 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082550722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115939729 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115327686 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.093891349 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082172654 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08169268 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.0820322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084498762 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147772877 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.081859819 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082274237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084779182 seconds)
  done (took 2.959956907 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.118248198 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.182609095 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120395054 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.082448368 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118112763 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.091808601 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08207122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.095671472 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089200648 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083257573 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.09154503 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089714865 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083956253 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.089281512 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.089538075 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091038407 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083416265 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.091492689 seconds)
  done (took 3.160786508 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122082176 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.110351617 seconds)
  done (took 1.61466082 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178936294 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.118385473 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.158221216 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360964758 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.183284259 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.242630454 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139878729 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140312481 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.132152178 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136517527 seconds)
  done (took 3.167274829 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116062011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170584269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.288277146 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.130897618 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.08674063 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.109575599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.132418774 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.09233074 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.097045464 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.096036038 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.095948469 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089697646 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.11467489 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.087459562 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.082339951 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089987795 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.1174393 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081633121 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083316452 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09096665 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11466346 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.079511119 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.087712403 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.082344405 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.093006519 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.093029983 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.081820774 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.079830227 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.090461476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083182908 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.090603681 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108870281 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.093169919 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.123464707 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.084686175 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.124657512 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.091044068 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088563277 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083804534 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088129014 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09385894 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.092756243 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087795112 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.090540432 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081087644 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.090729453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.081479079 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079831378 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.091737549 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081768425 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.0930709 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.092186783 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.123341677 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.082213079 seconds)
  done (took 6.792019424 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.118118804 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.119704573 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085360304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.125154638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111862414 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085060365 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113312853 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105314892 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.1149218 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.082295124 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08068359 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.082321361 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.094159777 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.094858562 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.124723403 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115954196 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.085637027 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.083488324 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.116334204 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.115275563 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.080640937 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106609605 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102192872 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11402068 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.079127407 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082893257 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.080268841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.08222228 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.088714067 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.091088419 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08260715 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.091836246 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.096802142 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.090161574 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078572925 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.079502328 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079918317 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.091270617 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.091746289 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.09132132 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.089785247 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079880914 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.080491466 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.082217465 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.082758209 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080130001 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.09062416 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.093034383 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.090824424 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.081433894 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.081931854 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.08045303 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.081868754 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.095067434 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.092462769 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.095297341 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.092992877 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.079966327 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080020274 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.083841644 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.093632318 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.092035477 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091316738 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081688553 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.091253301 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.080706682 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.092881213 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098982009 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.082958989 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.085213931 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.08255781 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082926087 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.08375753 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.091172597 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.090139994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.081327943 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.082216542 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080174656 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.091158916 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.090477841 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080641456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.088935885 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07852166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.080501416 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.081199756 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.081483882 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.089684227 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.093415141 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.081632379 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.081846433 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.082687837 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08187809 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.080869109 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.090786199 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.091790603 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.089863214 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.090701644 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08089095 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.090750078 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.090729563 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082714749 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.091619386 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.080242305 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081565059 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.082216262 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.090324769 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.088460944 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090005405 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080813372 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07853877 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.090075335 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090709749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.078744797 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.088138726 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089748673 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.22131959 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080391057 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094025093 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080799812 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.091142652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082011037 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.091903589 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.080366597 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09186464 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.080362934 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07968867 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083835197 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.092158501 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082389667 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.080460494 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.082597278 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081611822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.092809944 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.094709058 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.083971135 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.093975371 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.091261794 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.082453539 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.090541833 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.080938766 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.09230083 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083336947 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.081533087 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079941284 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.094669827 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.080206441 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.080273248 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.081160106 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.092853146 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081159254 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092920887 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091509297 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080838227 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.093318548 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.09280103 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.088753814 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.09180098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081855889 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.080319356 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.080144685 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.081255322 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.089882449 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.091601643 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083351512 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081420873 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090328229 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.09140346 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079691473 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.089939989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090536056 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090611713 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.080804403 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.081069597 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.09270352 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.093498379 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.090451015 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.090585932 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.090380376 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.080434169 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.089662884 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.090835764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.080584569 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.097868529 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079567878 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.095121356 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.091887284 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.088682683 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.091548108 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.093670859 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.092006954 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.091882966 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.094957257 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.079889196 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.079425675 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.091908907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.080126739 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081738712 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.089817868 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.080891971 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.081175508 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.094481226 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.080268481 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.09210639 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.079675753 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.090833795 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.079619745 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081647981 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095661022 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.079739239 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080826525 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091026209 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.082148584 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.089430823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.093132526 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.090228563 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.080488769 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081943518 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.091664134 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.090105784 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.080027908 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08006438 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.082370914 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.089784786 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.088314299 seconds)
  done (took 21.282522951 seconds)
done (took 42.109903308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.229886976 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.171828884 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.193985585 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.13183015 seconds)
  done (took 2.220828027 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.134992861 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.115555999 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.108157972 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.078814623 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.115868026 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.077966481 seconds)
  done (took 2.050110561 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.331243215 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.221182228 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.192090642 seconds)
  done (took 2.15890417 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224844084 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21029123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.429524223 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279806055 seconds)
  done (took 2.674617504 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.161537165 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.102689277 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.078664403 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.095532082 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.148115122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.174324139 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.114448017 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.135096731 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.087415791 seconds)
  done (took 2.577612487 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158376217 seconds)
done (took 13.273686975 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134019432 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.230323144 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.223031447 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.116352493 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.185835606 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.086247656 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.095643286 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091180411 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.089356222 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.21929364 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.24311579 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.228809685 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.228259181 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113942876 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.085895128 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.187912247 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.220770749 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.206010924 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.133063132 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.151130943 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.130370829 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07872335 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.085939481 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.102061452 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.186409569 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.176593045 seconds)
    (27/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156770313 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.124565892 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193846364 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.1536778 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.091074893 seconds)
    (32/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.239332664 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.087517024 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.16404858 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.2115295 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090856533 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.083492362 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.063266661 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.179794478 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.107217917 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.163325928 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218627737 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.072723001 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.190926393 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.086018272 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.095866985 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169992827 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.104053785 seconds)
    (49/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.08679351 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.103509158 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.200404236 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085369139 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085708956 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.084099416 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 0.138974746 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.102126167 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148815135 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.097509375 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129493423 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.081165059 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.072679971 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.104566621 seconds)
    (63/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128552663 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.105838594 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10411741 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.134201909 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.100427471 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163198988 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.158557611 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.11227034 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.083406606 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078557285 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.061980907 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06211859 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.101981784 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.079197309 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.123117861 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162001978 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095086595 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191955925 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.079771736 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061421903 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.186697096 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06130129 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.161590534 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.13732708 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148217002 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090029722 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.122145641 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072607646 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099138546 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.231479574 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.085748833 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06026718 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061234117 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.102568414 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.099331778 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07961116 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.105935539 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182523532 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186945446 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.059760421 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098922679 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.068917626 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.209650775 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088541899 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.173219496 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.111846957 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.110534129 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082305145 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185104498 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084725014 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.07697401 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.077474013 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.082495194 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.082331114 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.059730403 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076824045 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.154530426 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.059289274 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.058815982 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18498472 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15465265 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.113004937 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059744994 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07622078 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101259786 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.059113846 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0832939 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.082371736 seconds)
    (131/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.059233957 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.157856879 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.144204369 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.082764423 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080961497 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060831675 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077957125 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059268497 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058441234 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.079652734 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.085087015 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.081772012 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.09388954 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.109095985 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076059377 seconds)
    (146/309) benchmarking ("sort", Float32, false)...
    done (took 0.138527203 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.077231932 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107952747 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.08146217 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.100137469 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.085160817 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.101580509 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059054589 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09090224 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.083478853 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077000335 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081395952 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073915957 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.159241896 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139966469 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077133334 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203973597 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081576552 seconds)
    (164/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076466191 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.059595453 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.077914001 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075566714 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077077826 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082523861 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103592653 seconds)
    (171/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076182223 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.080718816 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.086345649 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.092298782 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.059589435 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.060920124 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.12350274 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096618069 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086309857 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100376292 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.106746334 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059494986 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086862189 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.059307309 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059807434 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.058196312 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121871453 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102237801 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081233878 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.083500766 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06860234 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128224398 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.08259559 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076109628 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.059971433 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101160601 seconds)
    (197/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.070037207 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076690294 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069425141 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.390418105 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072938114 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.084681802 seconds)
    (203/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194077051 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.186396674 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059156913 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100822053 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202691433 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.100553087 seconds)
    (209/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077354186 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.058304874 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.058714951 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079868819 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113506737 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082252108 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07524256 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.080269418 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176242102 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058276823 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.247462444 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082768173 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.077831136 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.075114333 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.088154059 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.08195276 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187373977 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.082600628 seconds)
    (227/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.087218501 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073921286 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060979501 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119455663 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.089513362 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060040922 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.097907638 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.082377439 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.149081249 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.077277038 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081671562 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.061054755 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081492198 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100646422 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077175888 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095248797 seconds)
    (243/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.059803238 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185545351 seconds)
    (245/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.081726482 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.060534927 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.069845394 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.060040852 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156428047 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078152685 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.177605696 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.059710434 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.077432832 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.059781676 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077977049 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.077174886 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081266116 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.059410876 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.08257498 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.070796375 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070377394 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076771143 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.077519476 seconds)
    (264/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.070427279 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.081677713 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.076941773 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.08254369 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.083525795 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.077220636 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083202857 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077206358 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.059627589 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05958023 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.058819315 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.10857131 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077347331 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09862148 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077335054 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.078215034 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060283149 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076803604 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127174358 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.078273989 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096244822 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081654911 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076530927 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.076230851 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.073088664 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073157428 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.060124575 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.081503004 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076419104 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.081633779 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.060177866 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077629348 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.078256983 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079615522 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.059832713 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.089050925 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078680063 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.059257277 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.059969007 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 0.149610133 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060087927 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059211651 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098704906 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079615005 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059421201 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076483312 seconds)
  done (took 34.046295517 seconds)
done (took 35.476932956 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094442372 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.109691974 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.085789333 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.10447956 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.093712413 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087403581 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.082692957 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088657579 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.090557149 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.092973132 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.091710266 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064067895 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.086354867 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.086037676 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083174814 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105119931 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088595148 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.082865702 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083833115 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073325048 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.08337128 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.076308174 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075554116 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061962373 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086978896 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.080650593 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.083882268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.084858808 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.076550084 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.077466562 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077401495 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083731076 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.076445081 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.087680943 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.081417537 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.083779921 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.085210195 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084776349 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076204834 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.077340159 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.085590503 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.077069568 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.084051042 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.08287079 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.08077841 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080270692 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.083737325 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086324534 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104812241 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.080683945 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.085006898 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.087031676 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.086599371 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081027468 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078485481 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.083438245 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.078981264 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105417029 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.083328335 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081321019 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.085113767 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083056127 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079628611 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.082768607 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.083545607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.085945552 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083964935 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079555694 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.084548164 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.079976949 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.075799098 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.083960782 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.077715324 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076220366 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.086062985 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.088715016 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.073212861 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.080028083 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.082768849 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.082270496 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073865739 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.079861545 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0748626 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.08058637 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.080825995 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061934022 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078647777 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.081975709 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.07355273 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.083680272 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.082441379 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.082552578 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075641518 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.084076113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073533851 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.080187728 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.075874748 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.076444547 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075559286 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078409582 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07581189 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07993899 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082886469 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075180306 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079806247 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.090133884 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.07586079 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.081497599 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.073564409 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073140999 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.088744285 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.085325037 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.076347093 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.081880432 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.073410979 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.081518733 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.073381646 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.075662575 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.076845444 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07595597 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.080301185 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.076334726 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.080110029 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080475823 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08604052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.075997733 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077658454 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.079430619 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.076107406 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079146356 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.07553123 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.076512728 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076063596 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068584415 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.079502023 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.076275212 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080801942 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.079550965 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.082736214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074896797 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.083563486 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078244465 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079055894 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07943792 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.073495609 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064707157 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.079314117 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.079212585 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074797442 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.075401126 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.210123884 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.076697224 seconds)
done (took 13.994528137 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.080564354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157998472 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.112269164 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.107320725 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.096644098 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.077826114 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.084331075 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.112079307 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076439189 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.115289734 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.097531129 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09528719 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.125166436 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.07373138 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.076214985 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.079294632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075852144 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.092117647 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.11041231 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.100161611 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.126477586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.074202729 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.102875661 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.102448043 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097902656 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103580153 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.078057087 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07879713 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.080538215 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112946776 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.100183899 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.080673895 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.077421218 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.109660322 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101785748 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.092318115 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.077271857 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091510365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.078834963 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.077305129 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.077677673 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107465522 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091477175 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.092347687 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078726271 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078225794 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.076144014 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092616474 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100006909 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087795882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.097450752 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.111049587 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077393827 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.074365354 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.07402607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.095200339 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.074270628 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077793299 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.077282834 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077614907 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.076902266 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.080447719 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.092523526 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.090261504 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.08066388 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089454772 seconds)
  done (took 7.507877421 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.097246193 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.103210591 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.093756149 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.094944312 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.075930878 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.078123791 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.077236462 seconds)
  done (took 2.144535978 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.080793071 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.100209826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.103408598 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103934622 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.096364549 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.100323625 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085540511 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.077882404 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089904804 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07849906 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095783019 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110556759 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.076096663 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.084155446 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102500043 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.077738102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100630314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.077356537 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078825996 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.100654907 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077741814 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092047205 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080439868 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.077491742 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089565578 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.077324017 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124168151 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079697018 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07729743 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.079609845 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074254279 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.118012013 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08879968 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.088495119 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076378967 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091461235 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.090204699 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074162441 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091692234 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.083362855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.089333628 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.076020295 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.075955087 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073356075 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.081010532 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.087798014 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07689317 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076439916 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.078671939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.096075152 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.078521277 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088962676 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.079482699 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.078971125 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07900345 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079752505 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085361386 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076143849 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.095455123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07692112 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.094225799 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093828218 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.090281541 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093478081 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077683138 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089325063 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.089320512 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.079045525 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078766435 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.078483634 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093613499 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.074423627 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.078703128 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.087676935 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077387604 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.099700251 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.100892953 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077679002 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086973362 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.077565304 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075953633 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07745958 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.100261259 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078952213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07627444 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.082349158 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.080415006 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.074354675 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.077089941 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.081117173 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.074201441 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.079169685 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07886233 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07920503 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080415085 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0948232 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.079706402 seconds)
  done (took 9.780851217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.083353567 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.080295129 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.080630596 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.078356319 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.079550378 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.079105561 seconds)
  done (took 2.028427812 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.109634725 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.080934473 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.089893206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.080874354 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.114245274 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.096281791 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.096470984 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091040812 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.093921726 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.088072047 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.096598974 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.097612953 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.101763807 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.081904428 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.096016628 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.081485562 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095290321 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084629348 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.087648148 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082160066 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.098177944 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.081803169 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082578225 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.097819274 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08506554 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.081315007 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077915161 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08897191 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.088305091 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.090355397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.081859804 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08504459 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.087054186 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.089173157 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.096314775 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.08527624 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080492006 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.086028695 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082301795 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084431078 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096570387 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081259883 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083781539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085865341 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.089383713 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.086016512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085658485 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086505959 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094010887 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.086597176 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.085460203 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.081116103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.084310774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.085549907 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.085942449 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089540517 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085126837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095401984 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.081229787 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.086204843 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.078952327 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084889111 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089132779 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08465767 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.088186059 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.086416596 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.086316825 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081651647 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082164632 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.080252623 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.085701414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.078057787 seconds)
  done (took 7.838726938 seconds)
done (took 30.807730992 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530398958 seconds)
  done (took 2.037632192 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.628957954 seconds)
  done (took 2.161884416 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.618860787 seconds)
  done (took 8.149254184 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.412077516 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.499708037 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.721278295 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14091418 seconds)
  done (took 3.346029181 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.691085258 seconds)
  done (took 2.238675818 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.220393956 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.202482755 seconds)
  done (took 1.976186246 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.393073368 seconds)
  done (took 1.926096514 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.070172809 seconds)
  done (took 2.603561 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276643385 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.1738678 seconds)
  done (took 1.995212798 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473881944 seconds)
  done (took 2.015100404 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.224524733 seconds)
  done (took 5.768907405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218211117 seconds)
  done (took 1.79878933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.259448938 seconds)
  done (took 1.801871037 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699004232 seconds)
  done (took 3.240668624 seconds)
done (took 42.601621617 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093773754 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.091894404 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091482564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.088519388 seconds)
  done (took 1.896155753 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.088680781 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.083981222 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08557975 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.08205213 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.085461923 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.080304771 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.08278564 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.085317306 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081608484 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081657586 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081000501 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.081183046 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.084538656 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083355139 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.079504091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08345699 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084608013 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081479151 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.08453354 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080839083 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078745814 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083482247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083886416 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.081570014 seconds)
  done (took 3.538663975 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.091639142 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.085466512 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.085907358 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.081858055 seconds)
  done (took 1.894730178 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.089312601 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.103044593 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.098310813 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.086335696 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100086932 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094777284 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.078056057 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.077684866 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.081323913 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085454246 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07615849 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104744492 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096548233 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085624017 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08790873 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.074810351 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.076954578 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095189022 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086596668 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.086783674 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078572615 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08566525 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.076481382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096458519 seconds)
  done (took 3.646484534 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.090176922 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.113168219 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087324277 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096892905 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098275405 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.074611828 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083237726 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098196116 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130892089 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.074202256 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.079978363 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074111379 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080922181 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073385937 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084930538 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113057999 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115931768 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.077024258 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10591979 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.073795971 seconds)
  done (took 3.38403145 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086263877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.081986689 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076810913 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.079170933 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.088128056 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.083058542 seconds)
  done (took 2.057098499 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.082137916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.0806583 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.077960517 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.078410583 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.081826385 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.078129513 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.076402884 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.077634331 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.077912092 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.078267836 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.076710983 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.075994094 seconds)
  done (took 2.497041058 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.213172329 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.082043211 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.079778908 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.076422734 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.081103158 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.077649341 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.090731908 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.078856711 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101487608 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.077315123 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.077265549 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07853361 seconds)
  done (took 2.671690216 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225329371 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086430753 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254954114 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147795026 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120540643 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12588164 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115569471 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123726864 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.153329842 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110074929 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177491513 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177074413 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115821742 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147418287 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097899842 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104154921 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164605493 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174472838 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115033416 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174113866 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154425662 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133606591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156741587 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110933624 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115105218 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130683026 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.079571708 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089452271 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185208107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141023485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156572932 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120461696 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10296425 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191072603 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18038113 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154496584 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144659855 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093115781 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.109055688 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14378108 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21453092 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098790355 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174374086 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118811996 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088186469 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139901845 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126507215 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125295274 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111329711 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236267762 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156045976 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195375937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.148050539 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096281638 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123384689 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124511409 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.125588188 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115274097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199169581 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175669844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136884141 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079541744 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109840054 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163060312 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1407206 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.118831937 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.135332961 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102706903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143060555 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164758665 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127544963 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151411986 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.136333482 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096612801 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128802208 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148115828 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137705585 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180216783 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133510045 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080432537 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135050649 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111970551 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089806861 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146429557 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084426179 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185830218 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109108098 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.112289905 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126980311 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119451592 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119802169 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171386895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153010623 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111880036 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072570541 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113557866 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.128119253 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154700546 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095919478 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117641796 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122667814 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085204413 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144484651 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.08171948 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129308382 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080924017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275521851 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142385837 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.085282561 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130218464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110564252 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109522188 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14175604 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1705751 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098115704 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090690678 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174616849 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130848752 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111707503 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153811876 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164135989 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106993333 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110977869 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158456409 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188939677 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098929692 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172217404 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116424858 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092415801 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093558374 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131911055 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121389232 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.130377025 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090372612 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.126561205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176380129 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083181457 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10409391 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14230581 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087935862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090351374 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112486775 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144954592 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.103749093 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.109147783 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.11272955 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145994136 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13354224 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114701595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134559035 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106662434 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179731367 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096759267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107982436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112504941 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077912088 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144615909 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164993869 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087647966 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170694623 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.131269922 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114564824 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126359411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090384898 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145316134 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086122809 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.223725953 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153334289 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119091015 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119320428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.158038892 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115711856 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.136398139 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.129162759 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143875819 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14279755 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.138156883 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113994147 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.097556119 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122766885 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135789595 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081442198 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100502772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08822821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11418639 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104785655 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092626514 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155469397 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13437564 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110549385 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123315106 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105435555 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156345681 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084685263 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138525505 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.127868353 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104845598 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.160088324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160938582 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140589819 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108643194 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154042854 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078382465 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083261492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.098237964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133034389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091615712 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092585245 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125513406 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156646403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137752629 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146339923 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121627156 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130043643 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163939612 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.077447338 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122610511 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155024846 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129040031 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113616511 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098021024 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.10664611 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149610097 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11490332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193619272 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267879864 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136894019 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163882618 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107621117 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089447442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113274394 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146922967 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115968075 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153344973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108567994 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096645674 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118008329 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08292934 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110519376 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13678854 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129587541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146888746 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.12253991 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141670361 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085417912 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12598083 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129672148 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132234412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070935389 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128344356 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175958854 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101954109 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126947236 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161461762 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089280884 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134753492 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185392156 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155896601 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093844773 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118477353 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126955632 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136459281 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128911793 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147827646 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116880647 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145934712 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117804149 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093279878 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096114967 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106864537 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113603942 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.100843463 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.116091815 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121631329 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.102465857 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140090218 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111505236 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117266638 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125137226 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102828701 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096474479 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104077953 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183711077 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125859234 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32764789 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.108071468 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.153509107 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173295987 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083818583 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089523478 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087320403 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148792743 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092514858 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140463946 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106780459 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117498832 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132491678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151321692 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104204621 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076434534 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118601286 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144797578 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123387896 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107182598 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.114279142 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17102218 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10715055 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088193933 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123198187 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1159963 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112262598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183873061 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068328956 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109141514 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085160233 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089918818 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135757213 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164436202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088869646 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.112945185 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128860737 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11882311 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136166207 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110664725 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110726604 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128654538 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15723812 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138048267 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098101168 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121728506 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137768053 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165142923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114290938 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.10383778 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181926893 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160802005 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.167365295 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.095969135 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123556753 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122755127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116835122 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146241976 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091453763 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.318123032 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09189539 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144076091 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11491868 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098708234 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139774417 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10870798 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097478386 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156544286 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127046868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090897497 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08688386 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127196746 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128567359 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116311445 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083426465 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149331778 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080532384 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140998762 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181995344 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090867602 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113970149 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105673621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088257712 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117048843 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111046019 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097854434 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.107944318 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182486121 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.096282385 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157331937 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150319109 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122729725 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147592737 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10952502 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645285106 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086190579 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161103408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126294219 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183545897 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106894539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126399583 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118527146 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132739173 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152169156 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112882501 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183386813 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1388468 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.124253514 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087923721 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11163548 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111664337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.097982383 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114754509 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122091619 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124285703 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.101046342 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122351696 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130491125 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.234942084 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105364077 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166125572 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126587856 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15415401 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150499238 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093662073 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127369972 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14848278 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08891345 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130185714 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16807176 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116746944 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105268612 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089883857 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111659766 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179832969 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.081618055 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172826227 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129795809 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118561789 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122784034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.122558989 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140501828 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117960873 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130538445 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101550333 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.118331364 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121253951 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091504721 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.086099297 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114298918 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121794666 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105665793 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106612538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.107757736 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160450681 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.080334729 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10491037 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11492476 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154015962 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182160995 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094177498 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092053505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129307156 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121830197 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120786692 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129165439 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087471129 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090760971 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.090207433 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084516683 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114871709 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121350829 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118442179 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119391125 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171470391 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089095304 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226372338 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102444919 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111935988 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.221706227 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.088477642 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104659729 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106915852 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117149246 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111232587 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179308058 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1036694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099627737 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10233796 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.082425398 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090958237 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137066397 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120293007 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127770621 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106599332 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069523187 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119011933 seconds)
  done (took 63.119521885 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119223913 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.093836436 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.107110263 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.158991926 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.133090956 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223158926 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.164022569 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209452163 seconds)
  done (took 2.862076461 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.082422371 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.104631336 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.11113722 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091976694 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.076579333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.078678285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23592371 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.090377137 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07706034 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099298246 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.088398104 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.078825901 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426008295 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.076565781 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.077594571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.069143643 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.078136364 seconds)
  done (took 3.585135102 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.378433246 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.592739869 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.348465458 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080092337 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.371570367 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092591966 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.070753027 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139184754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085696501 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525396213 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370441129 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137000525 seconds)
  done (took 17.854749301 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088291045 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08298694 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095487768 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.096794801 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083397705 seconds)
  done (took 2.101104996 seconds)
done (took 112.672130795 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090659453 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404146229 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061045255 seconds)
  done (took 2.146389332 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.097733469 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.099053576 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.098678451 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.097626136 seconds)
  done (took 2.054217729 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.087479095 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.090455001 seconds)
  done (took 1.833745313 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236026277 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170674375 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097142444 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.094275372 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.089595532 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087422433 seconds)
  done (took 1.938806534 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.083184683 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.086392471 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080824319 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085345484 seconds)
  done (took 1.999660881 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.087060103 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.063067697 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064202742 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063068169 seconds)
  done (took 1.942113676 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.098511206 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089129166 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087432122 seconds)
  done (took 1.93544227 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112923716 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.097568341 seconds)
  done (took 1.873565476 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.094226871 seconds)
  done (took 1.757475993 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.111204549 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.124836806 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143050946 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.123248198 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148112676 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119594616 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.096142767 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.096867648 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087998088 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.097855812 seconds)
  done (took 2.813418754 seconds)
done (took 22.53532696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.092775671 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377116588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.371329864 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101359324 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.680621961 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.368032406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004149702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104193105 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128804056 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.080928907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.098956898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.662717969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.999062619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337593358 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985851947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338180752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.662235889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.081229587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079636851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077848153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.991568717 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.078359812 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079336146 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079025825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.659916523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.38137221 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078630386 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335195668 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.079076336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081553862 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.365942988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079492582 seconds)
  done (took 16.566205721 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084758601 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131372461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083763877 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094395061 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.081099361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.080654869 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.082632983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.078690769 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129929806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.079563701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09512196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078218672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.082665013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.080404241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097103392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.079150691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.080482731 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.079598694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079089588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079041009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096422776 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077945272 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078754129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079713119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.079444428 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08971162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079684771 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078764091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078955754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081071927 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.081698196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.081956209 seconds)
  done (took 4.420166248 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128547872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.139313224 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.087556484 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116013306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.126153846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.083436562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156592347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10316478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138631217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.081723352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097604809 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.080416795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112471451 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083494212 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.101610947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.080755426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.079980717 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.079422684 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079403652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079530336 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097550919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.079114174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079857121 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08034357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.079857622 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092340332 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079480546 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.079867753 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.079851862 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081694119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082183963 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.080340956 seconds)
  done (took 4.709096129 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.083329115 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.085860016 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090657134 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093386581 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.0802348 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.081176788 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081303053 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078129631 seconds)
  done (took 2.351610208 seconds)
done (took 29.71651576 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.090641388 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078991691 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081662013 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08799826 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.082006851 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.088283121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.074992236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082176433 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079512463 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.080514496 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081921454 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.077801675 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078106819 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.074453999 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080759175 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074920715 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.089796441 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078730589 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.089492338 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.09049961 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.078092909 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080796889 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081247828 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.090947801 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.089774175 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.090194963 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084858518 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081155874 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076700112 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.078731708 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08447414 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.094574124 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081911938 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.093073027 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.076674106 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075908178 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078761291 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.078389678 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.090915622 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08578629 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077290823 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083984992 seconds)
  done (took 5.130018205 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.098253419 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.10206366 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.095940465 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071671457 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.076833803 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071964203 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095538241 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.067962615 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066859459 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095298947 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062871967 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.067596117 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069581969 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061740182 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066717374 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064527288 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069165128 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064028336 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066125994 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.067573838 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095127905 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061218079 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085824579 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069400617 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.065733364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06862801 seconds)
  done (took 3.630999636 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.087033264 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.097911248 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.100628313 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13729097 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114753645 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08886263 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.090253575 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102239687 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096854619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.077979356 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.082850667 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.10248629 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10067918 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083480157 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.078024521 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093281851 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090430877 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.079995755 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.085699567 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104874289 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.098595717 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094887943 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102850801 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.093204408 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.077885864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080996833 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.084159558 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.094851142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.082897414 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08926223 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.083088321 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.082380176 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08009694 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088932547 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.083210782 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07784218 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099341789 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.089067786 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.089279258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.080214856 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.086425546 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.078798979 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1039614 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133893237 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.078225949 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.08292577 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.081873335 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08795796 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.077615812 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09708343 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.08948323 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.077215128 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.079371854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.077099152 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.079080454 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.09301419 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.079887756 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.080331128 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.087572071 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.084217058 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097805186 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.08158266 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.094634026 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.079719218 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.089285887 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.078979964 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.079940465 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.076653276 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.105651461 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080594254 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.120103183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.081126174 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.079279211 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.092457575 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.089973293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086638228 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.080503236 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.095705719 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08972455 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.083275694 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085797163 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.081479142 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.081196533 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099300508 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078316935 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.077536849 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.076661183 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.081984242 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.081338902 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.079011034 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090154141 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.077441984 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.08166809 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.094985618 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.077840323 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.078516281 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.081896447 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080800358 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.077537324 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088045957 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.082870549 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.078784373 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.088195394 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.078812084 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.081047351 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.091647332 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08466771 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.076796969 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080896089 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.0819335 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.079196005 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.079885399 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.081764107 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.079468869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.084493576 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.083702367 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.082900101 seconds)
  done (took 11.882165043 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175423788 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166615552 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.080608772 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154644148 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086468759 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.089421563 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.159701293 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104909912 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090154128 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.079847522 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.078765948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.120237259 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.117720244 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.126381225 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.089906005 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.079121435 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093756509 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.124402384 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160000746 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153262622 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09428927 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08724954 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.081437507 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.080123061 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.080798219 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.088850067 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096764027 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.087414565 seconds)
  done (took 4.744603934 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.092942967 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109048329 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.082514133 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.100910113 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.100970149 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076339246 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.080109029 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.080174975 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.09018929 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.0875174 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076918269 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.084508344 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.082843635 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079947504 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.079552916 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.082753207 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.086396901 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078087241 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.079764125 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.082849859 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087963907 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098333353 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.082656923 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.078995835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.08146597 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.078534132 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07169135 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093229511 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.079237357 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102698307 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074397059 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081639068 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.093159191 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.079956312 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.078116069 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.079276871 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.075620585 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076251122 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.079765094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075732708 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.074511625 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064550198 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.077611334 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.089000677 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084491109 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063340508 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080975595 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.08112023 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.081282772 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.07393139 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.080950328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.080731953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.081364889 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.084083974 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.079661478 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.080828079 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.079170961 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080285001 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083153577 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07756624 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072263009 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.074778398 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.080452498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073687 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084318413 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.080333742 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.074938494 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075997776 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.080547511 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084460236 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.077630815 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080987114 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073662506 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077129635 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.08173875 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.080240015 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.079365704 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075323248 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.077849002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.078260404 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.062195653 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.077576118 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060899348 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.081925096 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.075479608 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.074693155 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.078633804 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.081147876 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088746867 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078402749 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082399739 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.079157588 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.077400288 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.081686753 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067128943 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.081241351 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.093750605 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090610996 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.075993243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.074115177 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.092226597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081743439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075927663 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063304829 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.084757232 seconds)
  done (took 10.170322113 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.10303597 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079282468 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.096378641 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.101898922 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097219367 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.083010901 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087556702 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.077563182 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093002346 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08103258 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.084787128 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076439565 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.087958547 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.087747563 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078337124 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087497399 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.080252495 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.095645721 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091910183 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076017573 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.086096585 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.091356367 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099651132 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091990256 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.090186592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.092633945 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099486011 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.085687473 seconds)
  done (took 4.204398883 seconds)
done (took 41.431354603 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.747315221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.015125885 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.753703311 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.075833456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.809874968 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.967236097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.832994689 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.750047851 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.964478527 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789468716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.006601523 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.883618516 seconds)
done (took 65.282406726 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.808621729 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.888606982 seconds)
    (2/2) benchmarking "String"...
    done (took 2.019293403 seconds)
  done (took 5.589936103 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.071128197 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.375830008 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.012190519 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.750288265 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75276406 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.167339267 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.562636986 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.213322342 seconds)
  done (took 30.517347451 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.862188237 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.972802488 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.42940977 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.458291286 seconds)
  done (took 15.444775761 seconds)
done (took 63.195980692 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.772265564 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.809423698 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.776329303 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.835469217 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.806327582 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.772261958 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.992961622 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.749511649 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.747609369 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.736028752 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749680865 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.176445735 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.752229012 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.979133317 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.767734596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.759666974 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.769308807 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.232710277 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.91275655 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.761923058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.758968948 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.806383237 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.756710446 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.750584525 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.775658724 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.753784562 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190534109 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.759307756 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.379068025 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.747976414 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77969051 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.158787613 seconds)
  done (took 203.157716892 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.752191593 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.754974934 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.854650876 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.7812802 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.267261419 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.933871013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.869447652 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.321314067 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.756094583 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.763906401 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.886933136 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.754456109 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.909886819 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.699465991 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.784189144 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.865850174 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.941639408 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.927599143 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.787082151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.922564462 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.754588911 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.715739163 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.690812976 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.878854389 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.797250258 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.770027518 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.779322904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.926911461 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.943564474 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.920247882 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.789616056 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.802164233 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.981920241 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.627963822 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.768020933 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774137563 seconds)
  done (took 169.139816635 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.139687459 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.756121433 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.754145536 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.754541879 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.76706659 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755789944 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.877116044 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877967113 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.218034439 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.991214849 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755303071 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809715601 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594480892 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756399591 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82310614 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.765421392 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.755179255 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.772332574 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.783281101 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753219802 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757308369 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878195906 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.771028521 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.788771399 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761944853 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.756313333 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761104085 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.124699074 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.754042664 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761672544 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.089286821 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751682959 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758882844 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.648752454 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 17.672398206 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.845770377 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753818773 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.761563218 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.758387486 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978370954 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.753537025 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75790599 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.757417857 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.758541496 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.7548149 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928691563 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.756504726 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879235357 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.757991901 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.265467148 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.755674047 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.760623418 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.406719936 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.461413855 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.757931272 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.75714287 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.760214619 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.757021144 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760447468 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.757487069 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.763354121 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.399969385 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.834280349 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.760179056 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760880409 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763572883 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.7602326 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.964588181 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754953428 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.852475061 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.816315644 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.869274285 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876041066 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756104037 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826486477 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848876472 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.75519055 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.757364511 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757449228 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.75830624 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.838505359 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.755709244 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.896989974 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.766503167 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.761057598 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.813878868 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.828846651 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.756467648 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651901201 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759183084 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.757067806 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.093580423 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821816152 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755061415 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.759176341 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761331777 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.889002259 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.880776042 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539279076 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.758980667 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.519251889 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.763101354 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.903776704 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755363664 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.949265483 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.760697046 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.842174755 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.767062855 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.762271868 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.760326431 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.79699356 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.761239047 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.81803734 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.760758794 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.133433231 seconds)
  done (took 405.993576255 seconds)
done (took 782.172644146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.42713227 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395866358 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.50441781 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404561774 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38922096 seconds)
  done (took 13.809359952 seconds)
done (took 15.500081889 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845018669 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.847891107 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787831778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844454844 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.784298082 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.845936624 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828328841 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.785953404 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.814182442 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.782830091 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.81469102 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781867613 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77323216 seconds)
  done (took 25.226324442 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989326881 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.998401017 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.829723026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986574465 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806946501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985554355 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919553632 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907062671 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.906948875 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.77715138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775019385 seconds)
  done (took 22.57513985 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.997637397 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990091571 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.836694758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994450654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810577185 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.991289109 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.920207535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.911288023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907721742 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.778071451 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.774697273 seconds)
  done (took 22.605747153 seconds)
done (took 72.1002334 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.772434438 seconds)
  done (took 3.464240532 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790347451 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.934197791 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.774451887 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.774972475 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.771392886 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.773395065 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.778006978 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.771223078 seconds)
  done (took 16.061789896 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.771060631 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.77088523 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.76767874 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.767502695 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.770614129 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770108725 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772047119 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.767895464 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.770435484 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771073447 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.769184914 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.769956995 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.771586158 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.770525496 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.770543569 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769475155 seconds)
  done (took 30.014721133 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.769987563 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.770416636 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.768557061 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770055479 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.769811861 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.770007185 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.77175651 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.768940719 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.768008511 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.769538646 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.769821764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770265469 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.771539285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.768255446 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770021032 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.768728975 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.768510519 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.770656206 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.774165317 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771581511 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.771015242 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.770229251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.769570495 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.770732732 seconds)
  done (took 44.179608937 seconds)
done (took 95.413688209 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.679476951 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.154961906 seconds)
  done (took 8.529051648 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.774387584 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772880813 seconds)
  done (took 5.27867209 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.771899291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.773380408 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773809781 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.773064464 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.773020483 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.771762528 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.772555471 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.773384543 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.772733419 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.7732882 seconds)
  done (took 19.42404597 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.772687349 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.772812682 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.771345643 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.774482796 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772955308 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.771772548 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.773794317 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773523341 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.77224086 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772331382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.772081954 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.770922543 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.775140139 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.770505448 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.77275 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.770279648 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.771496217 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.773141403 seconds)
  done (took 33.600434673 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.773200102 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.772429185 seconds)
  done (took 5.244111222 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.771263234 seconds)
    (2/7) benchmarking "second"...
    done (took 1.770976593 seconds)
    (3/7) benchmarking "month"...
    done (took 1.771915118 seconds)
    (4/7) benchmarking "year"...
    done (took 1.772295743 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.77256743 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.772727133 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.773644353 seconds)
  done (took 14.102939837 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.77566226 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.931140995 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013546008 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426252491 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.777597938 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.777667752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.731401579 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.776838114 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.781331483 seconds)
  done (took 19.689279252 seconds)
done (took 107.56406813 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.587631097 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.76680587 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.135062814 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.82423809 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.824534322 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.111388131 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.811886437 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.986534068 seconds)
done (took 42.747931902 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.792819312 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.378119104 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.414634913 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.792548854 seconds)
  done (took 13.283616216 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.756810002 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.297289955 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.815261292 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370767034 seconds)
  done (took 19.97650335 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141965391 seconds)
    (2/2) benchmarking "read"...
    done (took 2.124293017 seconds)
  done (took 5.968388223 seconds)
done (took 47.723057808 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.775855516 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.772346168 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.774299041 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.774919479 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.772858354 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.776634944 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.772865559 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.774420621 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.775749516 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.775459793 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.774063481 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774988141 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.776180192 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777203395 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773588117 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774188977 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776954169 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.775262767 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.773788241 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772768649 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.774886205 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777460023 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.7745887 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.773857073 seconds)
  done (took 44.292391245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.777097835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.775040458 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.77787579 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.777314835 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.774984165 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.777365552 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.779005088 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.776371037 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.778026547 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.778780542 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77663332 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777136003 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776781627 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.776350573 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779244966 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.775794728 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.779369332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775525451 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780192458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.777427137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.779397827 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776577451 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.775677592 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777779374 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773595067 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776692554 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776851923 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.776242176 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777167647 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.776629802 seconds)
  done (took 55.014063852 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.78429885 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.787512279 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.777393135 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.77963479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.777886702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.778902045 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.77946354 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.779165561 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.778447968 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.779390365 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.780393257 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.779721427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.78011907 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.779907109 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.780172079 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.779549548 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.780314671 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.778671612 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.7799183 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.778789047 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.780309193 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.779947264 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.781011039 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.779900431 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.779973888 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.779969471 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.781128504 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.78060396 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.781280585 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781013202 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.781452032 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.781617849 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.780798688 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.781871316 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.779450101 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.78097799 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.786439754 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.790659695 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.780958174 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78132742 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.782035911 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.781841499 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.781770376 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.781290986 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.780431667 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.781879362 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.784126173 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.782193141 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.781019253 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.782945879 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.781537203 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.782694171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.784380186 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.782181921 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.782126576 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.783452576 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.782040152 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.780751116 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.782004108 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.781433221 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.782075251 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.782820332 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.783594326 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.782552538 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783711093 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.782684539 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.782415027 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.782469887 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.782835443 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.782666611 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783337652 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.7822341 seconds)
  done (took 129.970775675 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.782613292 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779853437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.779192648 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780291603 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.779634964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781625547 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780761856 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783200443 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780412335 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.783428479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783728732 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.779495484 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778260265 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784133897 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783246462 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.77951134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.783355116 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78111313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.783311007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78442466 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784238679 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782047563 seconds)
  done (took 40.903714351 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784634164 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784013218 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.781398215 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783734216 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782524626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784580417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.785148349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783842436 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783167999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780252382 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782531018 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784349434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782411772 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783345918 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782953279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.782654528 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784707762 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781357796 seconds)
  done (took 33.803910125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.783662447 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.782377442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784822058 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782207169 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.782665144 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785414391 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783123204 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784386071 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.786685136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.783579503 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.786022146 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785204598 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.786109903 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782159926 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785749971 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782314649 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78487579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781941874 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785091988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.78062712 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784320489 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.78430628 seconds)
  done (took 40.955665405 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785524025 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.785087521 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.782177417 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.784575078 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.784415242 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.786230139 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.785789448 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.783275725 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786800786 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.786908542 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783846687 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.78602874 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782353849 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.784420175 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.784248499 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784823902 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.786449278 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784187698 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785043201 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784850214 seconds)
  done (took 37.405582217 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787525228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785478044 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786107333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787357341 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.788249619 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.78726909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78686721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.786796398 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786642049 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787626626 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787226476 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.78693194 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786569694 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785476056 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784689138 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786319151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786381552 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786882686 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786824204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787404188 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.787566811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787484696 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78764965 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787391765 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787351063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787168417 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788667659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.785771574 seconds)
  done (took 51.743462939 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787557554 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787035157 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.786332282 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787046745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.786266901 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.786151074 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786354219 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.785075448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78670329 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786508063 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.788853903 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787713162 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78705881 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.789258401 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787712107 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.7899979 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78934917 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.787015557 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786617008 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786392581 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.789984596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790094279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.788515215 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.787555621 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785519558 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789248661 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786537486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.788316124 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788561615 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786052935 seconds)
  done (took 55.3368142 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.809886635 seconds)
    (2/2) benchmarking "in"...
    done (took 1.808957697 seconds)
  done (took 5.330056307 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.787989307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789480872 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.790072811 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.787915378 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.787503372 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.792599748 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789721398 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.789157122 seconds)
  done (took 16.027129457 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789984041 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.790605927 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790682701 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.790010768 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.791002349 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.791807505 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797550497 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788207791 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.795575673 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794653014 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.802237859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.801039895 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.796693017 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792624209 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.794080278 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.794840185 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.791402297 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.792683424 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.791894499 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.790588979 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792100763 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.79523384 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79572752 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.79007032 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.795763273 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.803051988 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.795986742 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.789389809 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794455511 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799354474 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79344813 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.789349798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.792658516 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.792493787 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791696745 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792816442 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.800471396 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79424988 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.800833096 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791784686 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792527952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789545278 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.797187629 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.796080986 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796397846 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.794111313 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.791441884 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.791776446 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.794690595 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.798913798 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.799801858 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.793997914 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.791086535 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797445565 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797004645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.800411286 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791615723 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.798633117 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.806218474 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.804674307 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.808783744 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.802551094 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79779479 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.793042694 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805582826 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.823387091 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803435656 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.790875035 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.789782197 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793495598 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.801027183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808836455 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.807427992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.794511043 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793338154 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.793369225 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798314901 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.794980975 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803245686 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.800393258 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793370051 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793065179 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806348659 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820649071 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795746901 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.796398146 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.794890613 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.79535026 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.79704265 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.808767076 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.795250116 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.79647569 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.795010822 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.797392316 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.79912195 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.79419536 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.795931642 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797189179 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.792545673 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.794427957 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796477165 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801878948 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.809561751 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.798123448 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797169263 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.804441789 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.795781516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799204394 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.804825241 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.79552825 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797357466 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.797960547 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.802922824 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792634887 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802858638 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806188237 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.796795329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.798894432 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.795524351 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.794110339 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808639991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.827650537 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.795853094 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.795375913 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.804391537 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.80933634 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798714722 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.801843702 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.796038561 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.79335186 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.794234798 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.800744799 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.796010334 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.800561775 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798297987 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800277248 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.79369298 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.799444102 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.797247058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.800411976 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800434501 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799612142 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.800802029 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801747884 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.799068744 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.800958127 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.806375978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.797741599 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.800942961 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.80116731 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.794296414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798703442 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.803596966 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.797735643 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.800996283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798960363 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.799022198 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.800509604 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799295677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.800631314 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798644809 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.801688124 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806473514 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.799432905 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.804405108 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79949292 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.796536188 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.79825942 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.798276497 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.800244284 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.797393013 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.800541966 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.806318745 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.809499721 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.799839983 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.799315082 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.802214776 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801806632 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799035311 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799455532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.804219051 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.810815902 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.800378146 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.809553163 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.80040291 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800950839 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.798745738 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.805529251 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.802797457 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801172643 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805106341 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.808252981 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816074243 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811763087 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.802169416 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.80237807 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.801290799 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.806020297 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.806669395 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.800219939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.799446191 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801862978 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802980766 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800835947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.802310373 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.800537924 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.801090094 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.802312422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.80079225 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.801700884 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800610142 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.804222673 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805809447 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.801248961 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.801880989 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803155467 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802456807 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.799705418 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.802103304 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.803064947 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.801916436 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.802805934 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.809207495 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.797452661 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803727338 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803773576 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.802572348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802230911 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.801845627 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.806381591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.804664402 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810763988 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.802688749 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.804368089 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812318453 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.80378965 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.804087799 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.80850076 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.803398016 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.800005687 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.809267038 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.810238808 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.803893517 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80343023 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.805026919 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805505028 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805035663 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.811773946 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.799088871 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.805055514 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.803577443 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.806301141 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.800231713 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.80689743 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.808666074 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.805829462 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80962028 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804342429 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.802649096 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806317647 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.805896921 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.803047737 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.803657678 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810413568 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.813321297 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.810760834 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.805259315 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.805942384 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.806105567 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.809106096 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.807745114 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.803512613 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80713579 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821931822 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.813360583 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.812825306 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809141146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.806880405 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.815158447 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.808525237 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.812028426 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.807559929 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80912408 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.80782525 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.806788635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.803149642 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808010179 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.805737826 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810555258 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.80914317 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.809467821 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.804880836 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.805970555 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.806485129 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.806585483 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80533819 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.808777317 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.805653445 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.81035977 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81292353 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808532174 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.808115274 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81691703 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807899596 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.811017613 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80862296 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.808090139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.806146246 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.809208298 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805920459 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.813431056 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.817203194 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.81531581 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.822095981 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.812104293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818848814 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80725037 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.813324592 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.815919952 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.804624598 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.808053633 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.810114285 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.809313205 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.816826403 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.80737079 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80882452 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.811911709 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.806311585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.809248588 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.805895135 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.807982203 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806034811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.807621365 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817247871 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.810882837 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.815191315 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.813798684 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.804244938 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.807104813 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.807475409 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.808530281 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81431967 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.809166665 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.810030276 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.808942182 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.810671362 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.807189326 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.806770769 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.808001004 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.805182037 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.810504126 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.819095154 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.810363599 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81355504 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.807464099 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.819351754 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.807139729 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81749252 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.809082557 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811163851 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808697545 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.810672008 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.812564063 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.810632683 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.813021219 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.810173419 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.813119011 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.81539731 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.812003875 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.810738886 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.811698308 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.810596142 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.813027483 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822543524 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835847437 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.814777594 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814208781 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.807839374 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.815415928 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.815595661 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810315086 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.808041531 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.816252358 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823993028 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.819807471 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.813043811 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.809394933 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.813212168 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810004399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.808699343 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.809650173 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.809646132 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.808993967 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.812181149 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.810318224 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81676353 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.809156323 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.813125733 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812746908 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814487668 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.826995908 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.811845671 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.813702321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813718516 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.809199524 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.815798846 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.815095917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.813787618 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814813409 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81236198 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.815221478 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822790595 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820556617 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.818598964 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.814664162 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.814013264 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.815259032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.814549564 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812806704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.812960878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812683986 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815466665 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.815136467 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.812912647 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.814187847 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.813998793 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.815580217 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812123439 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819112372 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.824210659 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816240772 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.810148482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812100176 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.813455138 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.81275398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814956979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821992347 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820178659 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82838822 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.824106443 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.818951303 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.814920326 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820305312 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.82383883 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813940227 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.816630992 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.813080764 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.816496141 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.817064248 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.82100912 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813009322 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.822521023 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.814284371 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.812498299 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825718487 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.819603251 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814966924 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.819095722 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.820185779 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.817415019 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.810444868 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.817180857 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.816559598 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826101601 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.818932466 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815768196 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818978145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.815119066 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.817542234 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.81898795 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814437224 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.818919359 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.813819298 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.818791768 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816148393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.81439512 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.81494018 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.817637991 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.816794272 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.822841131 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.825328285 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.813261996 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.820120347 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.817215839 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.817858406 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.814603687 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814229559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.813749466 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.814165175 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.818139248 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816263706 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817554514 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.821084842 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.818508575 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.818562497 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.817192783 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815657971 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8208689 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.830165819 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825187451 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.814910481 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.817257222 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.819219399 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.820921514 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.818096604 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.817992564 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.820388844 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.82154673 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816316919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.81793199 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.816611691 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.824144474 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.836103482 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.817613587 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818794305 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.820763298 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823471228 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.816815048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.814378429 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.815678903 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.820139768 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.823292483 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.82570776 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.818064585 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.82740548 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820607838 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.822004693 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821181034 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.826446488 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.828161855 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.82274175 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81710869 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.816899051 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.825307239 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836807403 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817766448 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831690998 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853418216 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.820193442 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.819326748 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818408452 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820872798 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.820630003 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.821424084 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819598388 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818190195 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.819643384 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818764908 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.821030025 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82982287 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.823742667 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819498994 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.819080931 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.82093421 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.820576924 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.81570525 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.819935568 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.818610373 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.820272322 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.820399864 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.820150947 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.822418994 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835637537 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.832507244 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.818223484 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.820917585 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.815956074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825296669 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.826669709 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.836983524 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.831486939 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.821548479 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.821395861 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.823246834 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.821602407 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.81839248 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.825824164 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.823935583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823039574 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.819056417 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.837229642 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829721284 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.827756567 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.822741497 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822697643 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.821456021 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.825090438 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821157787 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821351283 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.824087563 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.824876179 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826342793 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.820897822 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.821745981 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.827315442 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.830082897 seconds)
  done (took 1079.922192972 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820018244 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81895995 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818546331 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818759177 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818739318 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819091926 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819442606 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.819865689 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817786364 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.819229245 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.819008526 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820693847 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.822172205 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.821194265 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820467515 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.819892767 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819388344 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824423623 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819544649 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820435561 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819331161 seconds)
  done (took 39.962159997 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.820661863 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.818798261 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818929002 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82092494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821252652 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.823488567 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82105865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820250601 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823683162 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818030459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821988427 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823154462 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.822173692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.820067406 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819864989 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823975044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.823952792 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820674492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.821862835 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818944085 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823692117 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.82056777 seconds)
  done (took 41.814154211 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.825495786 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.823054241 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.824889168 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.822819299 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.824040107 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.823217717 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.823019566 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.822516788 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.824993087 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.822735013 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.82343663 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.826047304 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.83315293 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.82998497 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.827445691 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.823840611 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.973433097 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.818585502 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819108572 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.818158406 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.814096186 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.825003434 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816148487 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815138408 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.817039699 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819061252 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.816928923 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.822089049 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.818785191 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.820632067 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.823467072 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.818908474 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.821355428 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.824319352 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.817596369 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819029062 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.822104792 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.817182174 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.817125382 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.815996057 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831981446 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.839982604 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.819571533 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.824705092 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.818050182 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.817848954 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.824358993 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827155463 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817388015 seconds)
  done (took 91.180061796 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.816657489 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.816699518 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816318559 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818394633 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.817885765 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.820677279 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.817105537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819233279 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.816185407 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.815184749 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819563835 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.814224678 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814785543 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.815781933 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.817919165 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.81427638 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81486734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813736363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.813276406 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813803759 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.815444219 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818712169 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.817835571 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.815295087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817197082 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.815116253 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814828288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.816808584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814463509 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.815255179 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.815890542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817375732 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.817875581 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.816032401 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813395726 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.81736886 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.819114724 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81464396 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819077688 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.814694626 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.817015534 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817837354 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.816934659 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.822968763 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813213238 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.814018108 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.813467663 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.814729438 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.813292408 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821579526 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.815206208 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.815633376 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.816766986 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.8146989 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819803503 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.816310003 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.816151188 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.814313454 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.817789727 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.816114109 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.818736696 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817980001 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.816260689 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.818133179 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.817084376 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820464758 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.81560406 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817317978 seconds)
  done (took 125.268871981 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.817907521 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817222725 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820585262 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816730629 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817372906 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816249324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.816728114 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.818346426 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8175585 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815785732 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.817462719 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818194437 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.817908203 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81875118 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.818089183 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818869643 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818211503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818878498 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.820898561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816711289 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.817655696 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.815516888 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.816275211 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815340696 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.817660251 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809963786 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.810478715 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.809839632 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811570921 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.81186784 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81160187 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.808474567 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80934419 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.810004067 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.810836265 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.810211197 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807282845 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808359403 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.808296149 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808427791 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808567329 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810243991 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810027683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.809337154 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810677401 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.809616693 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810683487 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.810366337 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.807920132 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809075956 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.810406762 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810108447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.810921305 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808960213 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.80800793 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.809165457 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.808699617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81059675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.807101884 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808100734 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808609143 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.807793834 seconds)
  done (took 114.132741251 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810194769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809673176 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.804479184 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.806134395 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.809037845 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806207401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810241834 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.808222633 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806942805 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.808275983 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808148846 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806342268 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807442764 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807707164 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.805482634 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805527562 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805178245 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805814808 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809792328 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.806467985 seconds)
  done (took 37.878109112 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.806294023 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.810375471 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.806100636 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806920371 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.809721541 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.806120005 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.810303092 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808944989 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806436245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807921007 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.809005933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808986966 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806645438 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806965464 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.810309207 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808144417 seconds)
  done (took 30.658981853 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.807156616 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.811527575 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.808265794 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.8086961 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.806714503 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.807029668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.812510445 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.807741281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.806520049 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.808670274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.808746437 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.809026979 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.810944364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808180889 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.802404683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.807702046 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.805816251 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.809102384 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.807540176 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.805269953 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.804617986 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.804560806 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.808279837 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.81201383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.805189448 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.803813045 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.803816025 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.802532767 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.808759261 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808958781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.803747476 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.804422694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.805592334 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.804539343 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.811203468 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.803989568 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.807985366 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.806136297 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.807579671 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.818431705 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806892822 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.804218494 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.806152841 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.804614906 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.805436098 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.808853239 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.803173365 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.804155616 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.805763651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.804037715 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.808718908 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.804357462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.803877186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.804928458 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.804072605 seconds)
  done (took 101.107719554 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808388565 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.804200443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.800252658 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.803264451 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804682887 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802793488 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.803343631 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.801146379 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799614309 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803527884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.802397829 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804641023 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798926587 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803171718 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801598026 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804271479 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.800049004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801444467 seconds)
  done (took 34.175087832 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800437127 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.800305451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.804098095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801705206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.799411314 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803231009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799701416 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.802212952 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801484688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.802362187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798087549 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.801380117 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801834915 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.801998408 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.81162212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797334527 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.800806053 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.801767561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.799242934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798733272 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.803968677 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801005534 seconds)
  done (took 41.356419342 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.801943891 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.803014596 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.821347806 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.824058215 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.825341743 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.838351315 seconds)
  done (took 12.636532134 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7979619 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805313189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.79733211 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.801236539 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7996658 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799371755 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796521001 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798938147 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800374008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799271938 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797475116 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800019228 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800413749 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797481173 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798638119 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.800450743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797700922 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79755815 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800389041 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.800162571 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.799004327 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.798788124 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799058606 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801513495 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.797218265 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.797550487 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799577081 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796852976 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798016306 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.801174988 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.800299725 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.796589183 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798849384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.797618082 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801785179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797277096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795957333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.800889253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.798151627 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795977107 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.800342421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.798668586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797716552 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796495429 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799893806 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.799492824 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.796108779 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795242528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795582112 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797016186 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798815451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.797489322 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796542728 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796140372 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796037562 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.797638046 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794836433 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793826606 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.797200935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794882736 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794648742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797017397 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798542111 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794595897 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795669831 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794290928 seconds)
  done (took 120.398102191 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794833298 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.796088156 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793933578 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796296306 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793374586 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795573341 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795391318 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795092854 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792423331 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792516124 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796372627 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79376561 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.799933064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793573228 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794053153 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794519139 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794300939 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.798671073 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791885025 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795251472 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793901299 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792994328 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793359725 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795858058 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794471359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796150248 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793446754 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792744717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795963753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793311093 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792769649 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793963885 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.795130815 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793202097 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796979965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793503037 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79441706 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794759724 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794258687 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795876747 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795489168 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797081686 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794415963 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.79536231 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794896428 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795667721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794690101 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794370785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794136591 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794782458 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.794878644 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.799488335 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794894086 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794153761 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794425558 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794793791 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.798861469 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794173145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795016804 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796754045 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79379798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794697765 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798316931 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795088665 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793853615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794688975 seconds)
  done (took 120.185348791 seconds)
done (took 2503.16148325 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.793340647 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.831955791 seconds)
  done (took 15.34381836 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.963851349 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.913798557 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.800621099 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.845757039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.794752431 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.82111777 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.812165863 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.796575706 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.797603654 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.798347101 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.80236354 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.984297859 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.798650139 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.796535873 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.796832308 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.889137863 seconds)
  done (took 51.137343454 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.800989476 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.799563693 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.81720948 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.800398794 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.801603498 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.813497343 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.8339252 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.805747993 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.838047809 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.812703092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.874166691 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.811211842 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.800621406 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.854527981 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.816220861 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.816357205 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.895611587 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.875598813 seconds)
  done (took 34.585051476 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.880105153 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.801388772 seconds)
  done (took 10.408461272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.80962923 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.800753243 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.811071208 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.795139544 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.816876907 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.80679715 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.821554141 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.831659192 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.796002396 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.787161197 seconds)
  done (took 69.801166449 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.805296869 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.80122133 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801634694 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.800845623 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.79385226 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.794685507 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.801161496 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.794643718 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.477620104 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.841040114 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.809488351 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.805392183 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.805037199 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.803907931 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.797639931 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.825709308 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.934597199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.797206506 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.800845537 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.808321674 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.801874502 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.872557916 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.815771469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.803852778 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.8349509 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.485499271 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811274227 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.808892979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.92209793 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.798226105 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.803053725 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.804814908 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.806395315 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.183910291 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.127732071 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.804678539 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.813977465 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.80991612 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.797184441 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.938233311 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.803777518 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.809289863 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.801841162 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119621259 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.908686089 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.847412411 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177693578 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.805920144 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.804057507 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838151782 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805738446 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.805302788 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.81825444 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.330036664 seconds)
  done (took 129.145278874 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.798937316 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.097950849 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952358875 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798482791 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.072570268 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006809585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.747646538 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848165381 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.799953075 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004089778 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959655553 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90392978 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796641529 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.797235539 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.793029385 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.793435872 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959561381 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.864335978 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799110673 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.79693325 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83030692 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007255868 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.918863491 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799831235 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.820724386 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.009199979 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.917424509 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.903729871 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.115331582 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.79391375 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.86457737 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.796675222 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.79928268 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.794667564 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955911578 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.894564557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885859097 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.795719803 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.797202768 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.796999763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.450440826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993513111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.896274436 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.935702787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.948259732 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00786164 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.439223247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.796009611 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.423586156 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.964485492 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.012163304 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.00838155 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.921566231 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.800473099 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.033722391 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.795208166 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.797861214 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034015044 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945409572 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898683111 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800116508 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.798116136 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.794360231 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039812601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800886415 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.895634456 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799894218 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79374636 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901208121 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906112336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.940321713 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016004032 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.834296565 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.499284864 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 3.984570406 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.014287872 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.870889945 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034777754 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.800855909 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.795007063 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885673728 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.552207481 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962637001 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.044594569 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.014796042 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834226003 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.39149735 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.800732894 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994170177 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.9820272 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.996264935 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.946096759 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951787774 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.997748919 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.798135423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.798040297 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.054248603 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.933270178 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801190433 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159028972 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030983196 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.476101052 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820092897 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093701362 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932876871 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.192635202 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422451861 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.800236239 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.973025971 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.845223531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.800115227 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799411898 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990071831 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.618275963 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803957825 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.357780127 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.866143403 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.798654918 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00539693 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801209031 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018563981 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803714983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035728152 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.250388085 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.836186954 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.974220278 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.948432486 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.592420454 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051367814 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045620169 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917840904 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.028704963 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.405035038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801837441 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.080390654 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801772143 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.802802446 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.969195897 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.800357458 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948317302 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.805087945 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.037859574 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828084854 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957376407 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807319026 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.035233495 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835577707 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.860305416 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.803641203 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.932635617 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809254835 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.686345147 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.958682218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804836801 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.800525019 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.229937168 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.803563793 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948300577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.03010158 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825325738 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871766408 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.326742846 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.8018185 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891182482 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.826131612 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.314303155 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.802438345 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.960704796 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.777870042 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.235603211 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.802700215 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.04024649 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.98834639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.801672259 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.799170553 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.551126822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.509396702 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801112348 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963693986 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.298358751 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.450248458 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006293243 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804403066 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929669035 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.80902416 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.877659645 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147975967 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.800494329 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.802181142 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.801224235 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.801153484 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80588196 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011399155 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.829839415 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.275971379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.937364813 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022037144 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.11143112 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.019835795 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.8432767 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80368572 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050073244 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805566636 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.869126378 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.802111619 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.82799691 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034884925 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804664955 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.016154404 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053274744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.701662515 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854191705 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.804397079 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806174039 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.803426468 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953153374 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.896142019 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.805465501 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.805137836 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916621146 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926402815 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99955886 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.400615255 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.891228632 seconds)
  done (took 882.573359915 seconds)
done (took 1194.715014454 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.805665065 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.80155152 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.788859297 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.804462163 seconds)
  done (took 28.932785705 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.814503735 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.81050535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.809695745 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.810995394 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.811041315 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.809959503 seconds)
  done (took 12.599233119 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.862363854 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.801823832 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.806631292 seconds)
  done (took 21.202508971 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880580633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219272492 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.936348736 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241753406 seconds)
  done (took 10.010734593 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.811601031 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.81183688 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.810613995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.812457135 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.813795817 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.815933239 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.812096119 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.814007215 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.815519511 seconds)
  done (took 18.051972229 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.231565764 seconds)
done (took 96.7639644 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.858385925 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.966394877 seconds)
    (3/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.375081205 seconds)
    (4/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.81427232 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.960930506 seconds)
    (6/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.919399497 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.94487343 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.267299513 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.981556191 seconds)
    (10/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.796117003 seconds)
    (11/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.075367384 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.273359954 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.710723868 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.900088054 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.84122292 seconds)
    (16/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.695742753 seconds)
    (17/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.797843588 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.912311151 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.983174127 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.816514882 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.476165205 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.821154902 seconds)
    (23/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.117585641 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.745105273 seconds)
    (25/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.111946349 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.052844195 seconds)
    (27/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.948722829 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.834044459 seconds)
    (29/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.273071776 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.813532257 seconds)
    (31/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.961709096 seconds)
    (32/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.289304886 seconds)
    (33/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.341030431 seconds)
    (34/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.000670234 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.203262403 seconds)
    (36/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.815781993 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.001379572 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.798538675 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 3.669932245 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.40989163 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.801650607 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.66143708 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.409201148 seconds)
    (44/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.186250062 seconds)
    (45/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.456055893 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.05565321 seconds)
    (47/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.065647421 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.200127869 seconds)
    (49/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.920872649 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.773721117 seconds)
    (51/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.123974489 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.92282576 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.220426291 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.923502652 seconds)
    (55/309) benchmarking ("sort", Float64, false)...
    done (took 5.625193584 seconds)
    (56/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.842436497 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.908092815 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.07184303 seconds)
    (59/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.799954792 seconds)
    (60/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.943607986 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.904769573 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.587507112 seconds)
    (63/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.876594593 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.406683134 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.162711038 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.891396133 seconds)
    (67/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.825214386 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.835213963 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.816077797 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.946814392 seconds)
    (71/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.831501118 seconds)
    (72/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.871242705 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.629409991 seconds)
    (74/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.885432203 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.78518406 seconds)
    (76/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.180279837 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.950193227 seconds)
    (78/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.001387014 seconds)
    (79/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.717250193 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.999785841 seconds)
    (81/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815917464 seconds)
    (82/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.893373779 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.813753694 seconds)
    (84/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.193141419 seconds)
    (85/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.12714199 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.39944291 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.917323193 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.818629617 seconds)
    (89/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.070584856 seconds)
    (90/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.899734553 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.596019142 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.544944382 seconds)
    (93/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.382889232 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.204802628 seconds)
    (95/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.804785339 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 4.17603163 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.763502204 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887750406 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.826375082 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.111959302 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.820299279 seconds)
    (102/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.262684132 seconds)
    (103/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.348771101 seconds)
    (104/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.080993186 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.146660275 seconds)
    (106/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.115539089 seconds)
    (107/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.229849465 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.960066356 seconds)
    (109/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.157507485 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.845845551 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.819296176 seconds)
    (112/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.963929724 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.489535413 seconds)
    (114/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.292815464 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.113859846 seconds)
    (116/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.844241706 seconds)
    (117/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.096751418 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.12649549 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.111003197 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.579487003 seconds)
    (121/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.896709198 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.004461801 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.820063465 seconds)
    (124/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.967162343 seconds)
    (125/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.709447037 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.057423054 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.194118065 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.803645431 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.246358915 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.845139574 seconds)
    (131/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.916475989 seconds)
    (132/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.918131861 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.267727154 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.842097073 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.097287215 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.803194651 seconds)
    (137/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.270304952 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.194212299 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.200390047 seconds)
    (140/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.837059938 seconds)
    (141/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829168608 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038194345 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.100370576 seconds)
    (144/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974573036 seconds)
    (145/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.228578722 seconds)
    (146/309) benchmarking ("sort", Float32, false)...
    done (took 5.583288857 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.823330862 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.893985985 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.948802943 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.956587773 seconds)
    (151/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.911662643 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.053789892 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985031921 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.383363598 seconds)
    (155/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.863015627 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.061058006 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.845521911 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.902163756 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.106556424 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.924892318 seconds)
    (161/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.945837435 seconds)
    (162/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.314185208 seconds)
    (163/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.828447987 seconds)
    (164/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.310773301 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.278145982 seconds)
    (166/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.893464299 seconds)
    (167/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.177030871 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.824573789 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.907658616 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.382739962 seconds)
    (171/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.992533656 seconds)
    (172/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.847777262 seconds)
    (173/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.908279097 seconds)
    (174/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.491357943 seconds)
    (175/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.387581622 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.80391959 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.118973118 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.725137533 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.129700436 seconds)
    (180/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.823389603 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.820007928 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152173256 seconds)
    (183/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.932340989 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.202279363 seconds)
    (185/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.132109234 seconds)
    (186/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039399213 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.949502031 seconds)
    (188/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.822815784 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 3.615837646 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.869821482 seconds)
    (191/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.330472487 seconds)
    (192/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.822385906 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.862808166 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.906651471 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.931532996 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.439269709 seconds)
    (197/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140004392 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.154101142 seconds)
    (199/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.032199672 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.015346044 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.88221759 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.847844013 seconds)
    (203/309) benchmarking ("sort", BigInt, false)...
    done (took 6.822997047 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.026198859 seconds)
    (205/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.952503276 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.878167475 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.309130472 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.202216614 seconds)
    (209/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337907633 seconds)
    (210/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.693619471 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.197043785 seconds)
    (212/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.907016853 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.808024466 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.506567441 seconds)
    (215/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.921117346 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.041871121 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.824088267 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.017520262 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.670258334 seconds)
    (220/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.943078179 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.482536105 seconds)
    (222/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.732533099 seconds)
    (223/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.823037368 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.913094697 seconds)
    (225/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.824758087 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.044805639 seconds)
    (227/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.972072537 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.863829307 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.204265067 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.809485359 seconds)
    (231/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.538120301 seconds)
    (232/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.946371731 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.75127838 seconds)
    (234/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.932455717 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.82576643 seconds)
    (236/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.892078855 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.850355198 seconds)
    (238/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.811244559 seconds)
    (239/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 4.027797307 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932140106 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.099119652 seconds)
    (242/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.843629504 seconds)
    (243/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.970992032 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.826737678 seconds)
    (245/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.851408313 seconds)
    (246/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.81036718 seconds)
    (247/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.006978267 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.031506764 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.822883724 seconds)
    (250/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104311028 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.826177845 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.175566462 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.156620373 seconds)
    (254/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.02799679 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.925261628 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.82744388 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.589390795 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.050497355 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.857550946 seconds)
    (260/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.113680289 seconds)
    (261/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.081192185 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.123262661 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.155884569 seconds)
    (264/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.018271986 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.857111459 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.212435821 seconds)
    (267/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.850066191 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.21464289 seconds)
    (269/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.959410321 seconds)
    (270/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.836531373 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.912187237 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.581379543 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.109658758 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.930385161 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.900679159 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.935230156 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.927339788 seconds)
    (278/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.82949648 seconds)
    (279/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.01442361 seconds)
    (280/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162690882 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.997747391 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.853855765 seconds)
    (283/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.891604398 seconds)
    (284/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.912696865 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.940499402 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.953300103 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.207960046 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.908873515 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.966364605 seconds)
    (290/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.315889495 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.851154233 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.075746731 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.616323581 seconds)
    (294/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.085020441 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.828670639 seconds)
    (296/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.882368153 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 3.573887983 seconds)
    (298/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.222457982 seconds)
    (299/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.339735093 seconds)
    (300/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.385359174 seconds)
    (301/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.306512533 seconds)
    (302/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.143255853 seconds)
    (303/309) benchmarking ("sort", Int8, false)...
    done (took 4.826655274 seconds)
    (304/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.876993469 seconds)
    (305/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.07540914 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074518004 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.850641657 seconds)
    (308/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.001022461 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.055525636 seconds)
  done (took 999.10178009 seconds)
done (took 1001.108362928 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.862536559 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.859875555 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.840472091 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.861326692 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952796491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.872165504 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.850311665 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.841978591 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.887297374 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.890031221 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.840527578 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.872024292 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.842958202 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.840624832 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.839297127 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863031356 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.150355342 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.86635327 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.856928365 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.848524434 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.857854121 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.842752188 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.889026072 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.872187808 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.846568297 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.842488234 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.846374453 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.860728025 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954400032 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.84595471 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.843480357 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.856715175 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15348712 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.863654545 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.835546404 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.862185324 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.853343701 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.851149975 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.844339726 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.875080442 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.295173498 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.845521379 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844598384 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.842101005 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.841154959 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.845335679 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.844996006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.849293914 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.860305063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.861498569 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.288842784 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.862032742 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.845843193 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.843035961 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.853875809 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.843336125 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.845502028 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863041567 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.861810865 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.86477007 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.148837509 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.8752089 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.845968896 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.860895217 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.85126026 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328363612 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.842427014 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.845108273 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.295689313 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.852707003 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.329422605 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.855190046 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.844217105 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.8584308 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.876480826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.155186414 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.864043925 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.842174823 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.853535035 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.842879342 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.851896298 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.861613889 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.84822776 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.844412539 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.862137943 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.875131755 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.855920933 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.84617129 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.853232741 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.867533712 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.853590748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.855670618 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.848470067 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.840049908 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.853864964 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.847619516 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.847443856 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.849530067 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.851771104 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.855914943 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297224343 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870303947 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.841305266 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.841580668 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.845467074 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.859847827 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293121567 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851647843 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.86558413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.891109671 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.848691556 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.145526167 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.873585601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864964376 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.852696178 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.849366326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.841303016 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.147186282 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.317149411 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.865318056 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.847262041 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.844850632 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.866094301 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.846492784 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.841408266 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.157578201 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.873401346 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862843828 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.967423548 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.856715299 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.879280968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.845913503 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.850901254 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.876195692 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.866761726 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.879675524 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.851891837 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.868403809 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.865492872 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.843085594 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857979249 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.858906948 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.847965202 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.851927747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840825044 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.877656692 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.864118838 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.865432392 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.867662374 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.970445596 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.845633288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.149611652 seconds)
done (took 290.197944062 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.917441259 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.842096741 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.944597206 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.842803003 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.934766011 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.934201086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.845363639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.842224111 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.84259547 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.233263947 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.841668286 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.845045675 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.843745301 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.8406713 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.933946659 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.844360672 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.84096241 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.194280855 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.844574427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.92241345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.845712362 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.842440934 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.84493309 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.256158845 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.844185619 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.838960766 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.923742697 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.844275485 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.241167057 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.841644077 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.84407739 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.192562852 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.944272364 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.862917174 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.855211313 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.851940083 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.934034438 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.851212813 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.930750871 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.929191622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.951417396 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.887178494 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.844187704 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.847257542 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.848756379 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.848003117 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.84261764 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.872750056 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.844545529 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.84351995 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.195957106 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.858524154 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.844084447 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.843280064 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.842715667 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.877795273 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.846475266 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.846064597 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.942890505 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.847261871 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.913520116 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.315943 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.233660345 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.846086063 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.848746706 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.843650018 seconds)
  done (took 182.991061662 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.915881593 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928728576 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.918416403 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.849684985 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.900182084 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.918440019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.849369506 seconds)
  done (took 15.046669334 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.854472347 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846870368 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.899738977 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898514381 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.846589659 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.003064905 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846095605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.861077206 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.845660502 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.901480103 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852215333 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847542122 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.855792056 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.848174964 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.899032415 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.861532639 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.965891938 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.849063315 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.849929677 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.001745442 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845074696 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.856255533 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.90526862 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.864112361 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849009223 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.855953148 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.443513026 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.849079897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846505345 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.848200411 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.845050075 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.894699185 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.848537817 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.844036959 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.846200268 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.96620888 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.849785336 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.845943705 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.849258073 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.852193391 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.849084793 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.849266142 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.850208336 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.846014979 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.84838876 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.874286038 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.84795341 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.847657037 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.849591974 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848893142 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.900790684 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.849815461 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.847416944 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.84768968 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.906780802 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.857886152 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.851495401 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.849187365 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.849353622 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.849954601 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.003264301 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.900344096 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.849861078 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.899656695 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.848705671 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850613381 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849967507 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.849718748 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945879481 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.850403926 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.901136894 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.848490373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.009985184 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.877687879 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851675243 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.854474639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.854254225 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.85170331 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.845049377 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.859566126 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.849049867 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.853294711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.858839581 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.848741135 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.847868005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.966145246 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.961949897 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.847529299 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.866245225 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.85955964 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.848240994 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.906667725 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.850447035 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.849303748 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910745304 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.968852265 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.909013704 seconds)
  done (took 203.936698606 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.857702036 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.860951128 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.854251475 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.869308018 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.853641899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.852755858 seconds)
  done (took 12.919242163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.857554711 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.853682042 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.850605596 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.851903543 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.851190732 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.852560427 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.852603271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.855150112 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.855689332 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.853659072 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.853605435 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.851454824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.854937127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.85232982 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.85174147 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.852600493 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.852730479 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.849690362 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.85187378 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.85242326 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.012266302 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.853510462 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853752991 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.859438785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.857162046 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.852439236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.864696446 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.854371591 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.853491804 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.862464906 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.857246912 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.854709194 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.859829188 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.860523315 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.85750863 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.85914167 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856680823 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.853896396 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.849594891 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.856513978 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.853906494 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.853351636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.853093202 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.855554486 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.857609857 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.865508528 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.860018846 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.864076642 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.855124625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.856674599 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.856386734 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.854322378 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.854655714 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.856389213 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.861210043 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.86301629 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.860410152 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.854842315 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.854536416 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.861091975 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.855320855 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.855460526 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.858753791 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.859699335 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.854251034 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.857406197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.861519336 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.859424806 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.856354798 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.854293948 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.857309925 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.852504008 seconds)
  done (took 136.555323043 seconds)
done (took 553.229541585 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.298892517 seconds)
  done (took 9.071405253 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.052104095 seconds)
  done (took 8.829601311 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.496914633 seconds)
  done (took 10.273586182 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.862932672 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.863247361 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.859008031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.856134986 seconds)
  done (took 29.226312261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.977689332 seconds)
  done (took 8.754600098 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.863068468 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.844988795 seconds)
  done (took 15.516162731 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.906277606 seconds)
  done (took 8.685708596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.923067563 seconds)
  done (took 8.700178048 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.871515394 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.874193458 seconds)
  done (took 15.544209631 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.833878733 seconds)
  done (took 8.608681971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.134588534 seconds)
  done (took 9.917575296 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.862412723 seconds)
  done (took 8.6770055 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.850433002 seconds)
  done (took 8.625523409 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.062961792 seconds)
  done (took 9.838606019 seconds)
done (took 162.044128038 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.852220728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.851340779 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.850973809 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.851860299 seconds)
  done (took 29.18130397 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.888361321 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.890511341 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.889935633 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.900589172 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.892600951 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.893231334 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.884462541 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.892676871 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.899618467 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.891110756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.889939405 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.891955155 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.889494649 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.880460009 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.893596951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.890864284 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.900729356 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.891952878 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.880912438 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.89315402 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.857148153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.902248528 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.89351901 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.856447013 seconds)
  done (took 47.111484574 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.056045993 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.931394908 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.012073653 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.910349643 seconds)
  done (took 9.685346507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.907398028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.909386249 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.921141967 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.960567961 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.993498661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.920169376 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.884314841 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.879405841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.864786334 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.909985797 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.985570789 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.926331745 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.996321238 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.858173768 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.043025033 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.858068722 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.85792416 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.911084675 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.961032986 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.978864499 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.857288597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.908342936 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.914553292 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.926890565 seconds)
  done (took 47.910558581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.856116841 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.866870892 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.863372082 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.857026989 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.858137689 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.85829217 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.863509607 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.859651687 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.879094166 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.861216142 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.855107008 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.857988442 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.856569938 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.858984897 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.856968915 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.873201494 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.869943314 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.857899554 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.861658039 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.862789155 seconds)
  done (took 39.01191105 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.853821445 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.707830957 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.205319812 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.110775613 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.851868641 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.853784399 seconds)
  done (took 31.362844355 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.874147466 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.867104827 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.859449826 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.916136989 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.000398009 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.868486744 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.861039643 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.871144563 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.908308658 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.925245008 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.876636257 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.888718585 seconds)
  done (took 24.495834158 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.862656784 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.855242324 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.853695958 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.869978857 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.871851 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.868430546 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.867337798 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.85319449 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.8705743 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.878488142 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.866982503 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.871610692 seconds)
  done (took 44.173981586 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93851939 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.845207101 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.706283554 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348463464 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.235602087 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06327342 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.855533751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113831161 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.857414295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129346259 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.611934915 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04836434 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.113390949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381050822 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.887536654 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.334655548 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153967444 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07195356 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87935835 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501256862 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90610235 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027239796 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.541374301 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896647924 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069036192 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.987996897 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.114747239 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856659438 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909532973 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865768704 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865091644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852163546 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.130187758 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145945235 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931172629 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867235778 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279763777 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.57576279 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.846700272 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.547044554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.469762425 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.967725404 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865485176 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856608143 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791298245 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033382617 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152170211 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.862433905 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.567640676 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856103269 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866710815 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932584138 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.860596928 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674962716 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561732355 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856651327 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.85439025 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865010165 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40982243 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912506466 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.054122544 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.832057695 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.952090323 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.510462752 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233341462 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.00319444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.862772851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.863395575 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794218749 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.584364929 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.899721327 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.186799848 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.876121735 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50907988 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176556317 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.650416495 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.903858473 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133248261 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42452064 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.830391491 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084415035 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85790693 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795306186 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.893646854 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795127839 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07684906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8975856 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572823671 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895822823 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.113432065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.869261133 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878099829 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876072321 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.084014208 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.744948821 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860416844 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.375194564 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107258706 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87871489 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.116201624 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796482136 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.860521907 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115656323 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.071980269 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.952782516 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.378265175 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957482756 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.456818837 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.910402145 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.028798238 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.906979756 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.140476157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918857052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.919960785 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900998784 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.861072742 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114975785 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.481875061 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.998893304 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.615437804 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089354672 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.194523695 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882893433 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926929605 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86389192 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.862254877 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.618199145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.400772255 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.861910424 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.864622919 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.95383113 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907193918 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.863291182 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813446196 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.484194184 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619233193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.970110336 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.091011368 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468359627 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17450263 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.80037477 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.192758536 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914368646 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.080862898 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.510976208 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.941342752 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122009757 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957185304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.993307249 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908484778 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879559995 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944662681 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887990972 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.033617678 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155234127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.865066875 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.873520322 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.631881085 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.883316495 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.871534661 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.869697461 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.407345605 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1419959 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.885062929 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867986038 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.754228291 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.878544117 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930167289 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.86802118 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872571198 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.405140178 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373376202 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.868934516 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.449966053 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084720632 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87509852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.536739048 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961222637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.884488075 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.14197454 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92220816 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.795728785 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.574080248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.557283395 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864969014 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799321279 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.863814743 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87134117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875221139 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.063714477 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.149474632 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906339049 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.521057358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.893491556 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875523369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.869958049 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865689248 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.378266451 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928196031 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06426214 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.912242447 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008068232 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.879088306 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.799599725 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.868530443 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870364025 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865880167 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.864559734 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89794293 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.524083234 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161109642 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123734579 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.330043666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878852128 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.52010963 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.904365221 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92602663 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.401090992 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160672776 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.995608961 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873494723 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.878838205 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.522208896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53020728 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.414737284 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179869427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173801373 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215534072 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.108846034 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.325468497 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122469049 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801816007 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865158572 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925113976 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13091814 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812679245 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887251911 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.511854539 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213651739 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87795893 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094683803 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16461921 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.456209057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991563083 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078484641 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90296716 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.037473878 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832732909 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.390269388 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894770909 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.470831267 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059179032 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124030221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.378621203 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974641345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.86795735 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.445089272 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910033729 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.577742447 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.040796517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038389793 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.659565567 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257252364 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.873127965 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869162676 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222416868 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.014376494 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.921095793 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804510444 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876671664 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.879454492 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.869269238 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.867143843 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.746791069 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.118903446 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879539466 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801647606 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.958920441 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150848347 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.772962414 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.878588109 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.869564968 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116490017 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431450543 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956224517 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.963932013 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.383980159 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866499763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801979699 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801844787 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.558843076 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863284202 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.836764898 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077456784 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.965999496 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.563015059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.952300904 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94241408 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118915584 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.874036325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134634043 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1439784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.374047903 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891306767 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.969174687 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.38009275 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.967670288 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.870065824 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109967876 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420025023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.097494264 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.72421926 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.80742464 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.872945789 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084084081 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871222878 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.632431573 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039779551 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.583575737 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.980791852 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195285325 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938277579 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.645215465 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.904474731 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.969772027 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887712311 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953871358 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885313646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.884523167 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885136959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887004218 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.645675509 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980604042 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.888284099 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957101894 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953495619 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.380019462 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.877445274 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154286921 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233861241 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.204310757 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.931276035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874998234 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873893813 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.808037845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017529497 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873060484 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.144684389 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999322927 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.990030966 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894635723 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.396476555 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.082973109 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118372342 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149140239 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.769593425 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41258632 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.932278404 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.873785313 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888422536 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.08414005 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088720756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17909644 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284047819 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.971976171 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.163917876 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147440117 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.875565963 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872719343 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46221531 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.981788751 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.453597001 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908008847 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.651981874 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127893155 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885045616 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167064504 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886075852 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.036757714 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.392870908 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.543411791 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153928509 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.722686019 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.888589905 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158919811 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199283788 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179529492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944271943 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.888129091 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.982974187 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018807213 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.773322802 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.871758263 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876501486 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094973882 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.583923423 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.885404689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154356712 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175688416 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.873449556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.772877659 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892360555 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.885949116 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098087429 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09852335 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.124963129 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885918025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.87667155 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.692465534 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155912049 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932298401 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811322623 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.873792028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925240448 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110474055 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897307423 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.330131027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.588028893 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154999028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.87660773 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896799663 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05227554 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179964746 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204019365 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.410320861 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086623663 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901841177 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.486273863 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181676705 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.882799878 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.047503197 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179799323 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.881605766 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97313792 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919118687 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.152682866 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189541856 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.962135046 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523913749 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.829129814 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22108254 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247012957 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816257531 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88218568 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.914662621 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878676016 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.87748843 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885210413 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.766883819 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043503579 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.663545298 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160517131 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.880145859 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.86971675 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.432954641 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.159624224 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916296775 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905378284 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876754939 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.580852307 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.237679672 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.135291344 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.971795187 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.887456578 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.885213588 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882230574 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866776313 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.072335306 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.072759828 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154420459 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.999002801 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.918638052 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884539908 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.096195917 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09157182 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.613058011 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99600941 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973892431 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.924607155 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.775720149 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.382839136 seconds)
  done (took 1671.787685644 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.89700061 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.899892945 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.905622542 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.945631038 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900243663 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895487774 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.925371402 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.962831553 seconds)
  done (took 57.136256295 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.882071563 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.07357123 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.89350301 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.881191015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.890172207 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.881697694 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.061112088 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.887267401 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.889325336 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.894064245 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.881708444 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.874868478 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.19784165 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.903199741 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.880243169 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.885114577 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.884376424 seconds)
  done (took 74.55436073 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.882341076 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.973831532 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.923772867 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.880181217 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.689833121 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.883787042 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.670801145 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.906355678 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.875875867 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.977609814 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.169772189 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.895117041 seconds)
  done (took 89.532505413 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.886116485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.883272207 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.885075742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.887373148 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885368486 seconds)
  done (took 11.234100267 seconds)
done (took 2178.980743646 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.123469466 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102969487 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.124970035 seconds)
  done (took 6.025581323 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.034553083 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.078885742 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.19793264 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.202456087 seconds)
  done (took 10.322508116 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.167532556 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.263564671 seconds)
  done (took 6.23761076 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.276662555 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.89980672 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.26842374 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.881520914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.87886545 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.882603545 seconds)
  done (took 22.454736569 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.884008145 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.89046922 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.887063338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.891166102 seconds)
  done (took 9.36050727 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.86519092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.558591078 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.868639215 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.880953151 seconds)
  done (took 20.978618821 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.634421443 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.648313246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.632800288 seconds)
  done (took 9.719420682 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.022342116 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.674320538 seconds)
  done (took 6.503403457 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.145976832 seconds)
  done (took 3.95112911 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.019700727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195528208 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.397510363 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.41411043 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.510847178 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.604994781 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.205109546 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.132648777 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.293807273 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.329478184 seconds)
  done (took 24.90941285 seconds)
done (took 135.834491601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.262721579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893800324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.088802087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.22252307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.117159811 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.089621088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.107076908 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.205653007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.729618118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.723490614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.219556237 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.116717909 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.048101366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.121993279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047895093 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121511593 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.103110097 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.273505224 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.918106795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.11407883 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.107604634 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.859116185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.062690396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.867960211 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.107672456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045031475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.450204207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.125281766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.071063206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.452454865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.041089076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.267470893 seconds)
  done (took 171.79203343 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.641696916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.884851816 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.8858264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.885981773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.296648497 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886948386 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884187593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886066123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.300293345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.279769477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886083287 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.260126041 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887832637 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.88606219 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.888509532 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888263071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.401232069 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.67736558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.885189856 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.885191823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888872018 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.117355623 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.888347916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.1456926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.385952296 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.889239718 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.832284769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888849998 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886151109 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.832819976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.888479176 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890183429 seconds)
  done (took 208.72764957 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.89182978 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.888086656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.886637407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889022569 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.887893379 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884996325 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.886932258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.889246732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.526317329 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.518779644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.885015904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.889275271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893462853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887082686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.888805376 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.886180721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.882613889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.88726253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886942983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.891076346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.898900232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.679639208 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.891007611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.702395844 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.895417124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.894601522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.889387065 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.890417164 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892876057 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891389949 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.891046476 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.887355681 seconds)
  done (took 221.148015644 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.08954838 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898211424 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899344257 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.8499106 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.900168132 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.899271382 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.892271248 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.095508782 seconds)
  done (took 19.347400577 seconds)
done (took 622.838519483 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.348787077 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.187230754 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.068979733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.920516812 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.248036751 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.962075111 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.915700975 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.983998549 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652147326 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.982214032 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.540143866 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.928001808 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.621912817 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.934704018 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.042988037 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.972367373 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.456244412 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.544121163 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.095133081 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.064494381 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.094695204 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.845501703 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.987614432 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.68083301 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643402503 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.881092138 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.072569237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452723993 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.923174398 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.082369364 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.67000454 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.295085252 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.925273174 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.912433862 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.968296554 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.948298195 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.250226174 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923184201 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046670435 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.647432925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.064590646 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.532017661 seconds)
  done (took 104.134336276 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.89062331 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.890732756 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.889233621 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.884927919 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.88937682 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.885945294 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.890703442 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.89230502 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889973623 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.889974944 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.888936983 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.889642522 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.887500843 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.8922371 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885194724 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.887852229 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.889002248 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.891489043 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.887266421 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.889236176 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.885036728 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.889234565 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.898870971 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.889149586 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.888623459 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.890816895 seconds)
  done (took 50.951378995 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.903037141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.044710152 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.139264434 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915316651 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.904223016 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.907610429 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.917695536 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.906055294 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.903899887 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.905581491 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.994113547 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.900743717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919180816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.131734284 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.91077099 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.897721699 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.899307658 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.898677708 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.045919031 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913731879 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.921036212 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.898395755 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.918539876 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.912184228 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.902270366 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.90119115 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.905389049 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.382234646 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.903860173 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.99058669 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.936464609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.916756618 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344163785 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.139194328 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.94711277 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.904976414 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.897422808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993106623 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.903546674 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.903874684 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.914604402 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.898297932 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.133231675 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.423313444 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.909789759 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.899996765 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.395102427 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.001026613 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.936575584 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.909455808 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.135869496 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.912089126 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.898536511 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.903762024 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.936094518 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.908649318 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.902395999 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.279628737 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.908765027 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.920408273 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.900630944 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.901419703 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.051535891 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.905116128 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.042101617 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.911722025 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.906568996 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.902429366 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.13639454 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.915163213 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438704124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.911748001 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.899277334 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.991840965 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045694112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.419623922 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.911024371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056703993 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365723585 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922663387 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.913631722 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.37953592 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.927309019 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.90641355 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.901482184 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.901819507 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.898744249 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.9430881 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.915522075 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.349415085 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.436109545 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.29079084 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.92521479 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.917284589 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.905334012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.277733913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.90656155 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.9002101 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.128028874 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.446080898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.915386921 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.908421043 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.415261841 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.915664216 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.921303216 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.91250589 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.138216697 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.919623039 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.940566724 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.899879064 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.909903404 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.906983103 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.920310149 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.910170961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.901721425 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.407389065 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.011879188 seconds)
  done (took 235.995949876 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.894967186 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.894137519 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.898021123 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.896240145 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.899655657 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.904547398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.896543509 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.896803865 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.913915404 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.898253162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.898205743 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.895768093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.899446181 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.897171057 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.930100588 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905388746 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.512579625 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.90032243 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.897769882 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.896906366 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.547943406 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.905626544 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.89577191 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.892143376 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898557287 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.898887204 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907292467 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.921958908 seconds)
  done (took 168.318538733 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.904081022 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.018023489 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.917860499 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.934007439 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.912862655 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.901117503 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.93037066 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917229402 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.908121752 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.903085131 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.903372138 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963614665 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.916061975 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999568411 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.933051227 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.933496292 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007353317 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.911410804 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.901292405 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.901286692 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.932903755 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.900737744 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.967587713 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.029584817 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917383079 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024270542 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.905033421 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.905228672 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.903555615 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.022783898 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.915597483 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.961632257 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.932875498 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.924686253 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023557416 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.017663869 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.008326674 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.930124239 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.906477286 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.901486478 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.901685287 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.892175143 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.020472146 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.92034157 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.904753719 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010851774 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.922673694 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.90727196 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912823566 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.905009298 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.920718686 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919964549 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970713641 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038068728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.93669117 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.927491295 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.930687075 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.17663004 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.912121529 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.008412881 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.8987513 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.023086293 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.921309382 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.897093177 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.904829407 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.911234811 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.934747139 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.936024678 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.011743878 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.913985244 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.005295759 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.938699051 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.910922085 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.908470126 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.909118621 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019933954 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.021997254 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.94065551 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.945896387 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.937447053 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.900092649 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.909602941 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.894493409 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.923850634 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.91219938 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.023686723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.022222165 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.915168787 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.909871272 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.90885815 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.908521009 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.931153779 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.030716105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939448418 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.99877338 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.975739182 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.979293088 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.916572074 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.921963882 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.910546042 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.971741926 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.923666265 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.917087076 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.218666051 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.976936409 seconds)
  done (took 206.244025113 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.282680303 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.954819365 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.96371131 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.181081049 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.328336776 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.769923597 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.951888852 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.95671 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98499687 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.111807233 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.007421918 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973275344 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.941135187 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.932388863 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.958609925 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976278951 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.959268551 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.293801834 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.078607699 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.04640992 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.94320607 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.270889629 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.278960588 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.331890864 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.991884219 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.324123388 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.543948686 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.055144006 seconds)
  done (took 62.225428389 seconds)
done (took 829.686314498 seconds)
SAVING RESULT...
DONE!
