cset: moving following pidspec: 18755
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343335845 seconds)
loading group "string"... done (took 0.537619339 seconds)
loading group "linalg"... done (took 7.135886168 seconds)
loading group "parallel"... done (took 0.155874894 seconds)
loading group "find"... done (took 1.074375908 seconds)
loading group "tuple"... done (took 1.67805079 seconds)
loading group "dates"... done (took 1.163748055 seconds)
loading group "micro"... done (took 0.219747148 seconds)
loading group "io"... done (took 0.98062461 seconds)
loading group "scalar"... done (took 36.260689984 seconds)
loading group "sparse"... done (took 10.835765488 seconds)
loading group "broadcast"... done (took 0.903091961 seconds)
loading group "union"... done (took 11.581857153 seconds)
loading group "simd"... done (took 4.10570685 seconds)
loading group "random"... done (took 8.678211407 seconds)
loading group "problem"... done (took 1.869452544 seconds)
loading group "array"... done (took 19.853655948 seconds)
loading group "misc"... done (took 1.673622537 seconds)
loading group "sort"... done (took 3.194680326 seconds)
loading group "collection"... done (took 16.486618369 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.474745663 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120475325 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112739024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.116654822 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.138741564 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112838266 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121326267 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08236421 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.857284302 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143197878 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118133718 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407362177 seconds)
done (took 5.010063657 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173500572 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081948237 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080814086 seconds)
  done (took 1.326517775 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064254588 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120719859 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066199644 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065847473 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066211873 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065208042 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065096525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065253934 seconds)
  done (took 1.678427312 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071747362 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067939324 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068043061 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066943245 seconds)
  done (took 1.439972219 seconds)
done (took 5.857612706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.75723989 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200233586 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181744234 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.392865152 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130546231 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153384008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.634112184 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314125445 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.181575748 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080795253 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102451817 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.313920172 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106162251 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636414296 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079142532 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089605526 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135412458 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.457778836 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066501168 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081759788 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088067269 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127217644 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083932975 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073756574 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.142015172 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067139545 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128892255 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080607058 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068406161 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205490636 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171414858 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661366401 seconds)
  done (took 10.196506378 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095832543 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096497477 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067561867 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135779061 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094909463 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068640972 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07032276 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066617841 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085689383 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126324856 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087282026 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100108253 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064574062 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068108062 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083131846 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203565023 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081612796 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081360518 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069462775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074655156 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.114931541 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076825772 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076809858 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076497432 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127128824 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17944982 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097719432 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098917102 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068327428 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081177219 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114208308 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124824809 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064844952 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06522513 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122556519 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093608636 seconds)
  done (took 4.605388505 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.934676475 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08279798 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138164343 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088734662 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165452912 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066932313 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105301996 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064262064 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083506524 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197753014 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.287472371 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.566485168 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109678629 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099787363 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06719734 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067973662 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066407063 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.333749894 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118926751 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110452482 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082087939 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072690896 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067641756 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.340037624 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067351435 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065168655 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067141593 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057125215 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111042986 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066875922 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.917689074 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124002158 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065842562 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100205293 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161104204 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08629141 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274570749 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066271638 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066082949 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148031742 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074042725 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065546936 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083133915 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103157262 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111628288 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06812615 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066315083 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160736099 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066107671 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08235853 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.977404975 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154353231 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076493938 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066064573 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243738734 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085171382 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066154838 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064291793 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179995382 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137260455 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06803678 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065688618 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065019586 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068258391 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.372137481 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065904518 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.721161647 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069908383 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076023731 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068472824 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065719147 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071605461 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071561024 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.083987342 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089188982 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065441509 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074529114 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064942834 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06498863 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067186217 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083910454 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354296007 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065696623 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067077087 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063806511 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062828728 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084965129 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095915412 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067925142 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068881204 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099463689 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.17093764 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066835976 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105634142 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066302264 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084859783 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068577474 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113217169 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066790732 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.086715198 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.066479227 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065836981 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.09889838 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071764408 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100322357 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080447217 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067879247 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397579604 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064354946 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064713371 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068119641 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067602585 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066678945 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068024759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080887878 seconds)
  done (took 20.828725862 seconds)
done (took 37.728977217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269080888 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074195157 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074321759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074022747 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074229226 seconds)
  done (took 1.821805486 seconds)
done (took 3.061850416 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118627786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097798629 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064346928 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09432374 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063468977 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098839097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097502822 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.079952398 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09832159 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063743012 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095396903 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063745418 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063631508 seconds)
  done (took 2.353818551 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081924667 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082613952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068647904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081936588 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063196756 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081518576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079955003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087362193 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079663306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071122644 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06306272 seconds)
  done (took 2.069848202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08123477 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082739553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069311019 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081021691 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06276188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080096725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079611247 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.083976382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082251823 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074599327 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065104177 seconds)
  done (took 2.069319509 seconds)
done (took 7.717220157 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077392825 seconds)
  done (took 1.296376359 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581230792 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.051954721 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080364608 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111043614 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182136329 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117435827 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274148961 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085646887 seconds)
  done (took 8.88260016 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100561216 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070798823 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070463743 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071264497 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071782021 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068522146 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07240621 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069616499 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07210832 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072684325 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069111761 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070675921 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072023186 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069588857 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072947849 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072675728 seconds)
  done (took 2.456348162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090872885 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089836102 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072733632 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073955231 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071045446 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07095856 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073361902 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072399041 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070050726 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071022563 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073735362 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072501361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070541577 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064391022 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073230531 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07473964 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06991161 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073048496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074277071 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074197741 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073600317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064296592 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072082854 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07456026 seconds)
  done (took 3.085401995 seconds)
done (took 16.949817868 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110977425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071046652 seconds)
  done (took 1.408217545 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081083649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081961352 seconds)
  done (took 1.396871709 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081663976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06520617 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08958817 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076905783 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065397203 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065199585 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085935011 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06532936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065655751 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065396783 seconds)
  done (took 1.960274492 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067991468 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07711932 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069458104 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079494659 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072728034 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063000968 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07133456 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067136322 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076602071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062090094 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070683674 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081478597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071118253 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083516862 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071632349 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067618126 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069569366 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066169809 seconds)
  done (took 2.523917387 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064749738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066410777 seconds)
  done (took 1.370637843 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066252949 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062733117 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066181523 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065909609 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062873597 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062642575 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064571013 seconds)
  done (took 1.68684357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.380773203 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110422861 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297293547 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071725359 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08271686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250274147 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06462039 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069527135 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069676623 seconds)
  done (took 2.681030688 seconds)
done (took 14.268506721 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077719092 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084504273 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093656112 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.340978535 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090720326 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066202013 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113732339 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185675706 seconds)
done (took 2.303461213 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210380913 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606272585 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377223801 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19236219 seconds)
  done (took 2.417980639 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322238822 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085930009 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060493798 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068021353 seconds)
  done (took 1.78794779 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065031696 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06776606 seconds)
  done (took 1.379067664 seconds)
done (took 7.045218181 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065447516 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082159867 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06489594 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062436508 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065622319 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063149284 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062782077 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064891272 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065300012 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065210425 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.068740373 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066582713 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064391487 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06413755 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066489629 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070128805 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064343863 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064640798 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066456083 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064747298 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065889858 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062890226 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062992048 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062486517 seconds)
  done (took 2.856871133 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082195626 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065954978 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071111178 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07043836 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068995947 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070092561 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070213686 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065334853 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070244901 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067571108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068721621 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069019321 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066912341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06904048 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067390724 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069010245 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070456712 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066954386 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067679957 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069186856 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070087247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065569572 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069390751 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070334157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068653692 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06888931 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067618975 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065432144 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070151385 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068812058 seconds)
  done (took 3.327913183 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069086773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062807936 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063244271 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069469397 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062804382 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064486716 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06257796 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063483056 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063660941 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062487458 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064290329 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062450473 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063012403 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063574177 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063676659 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066266326 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077851174 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062921925 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062553218 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063662239 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066366189 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062904915 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062801906 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062769482 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062444735 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062344319 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063393378 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062736019 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06334206 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062630318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06589577 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066286455 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062624824 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069425154 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065836727 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062573933 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06644784 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062468874 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063375189 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062229325 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062236478 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062430406 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062762124 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069657126 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06288143 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064438378 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063020765 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063905376 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.175339748 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065113157 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062150384 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062112105 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064112807 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063847341 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066341068 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062195735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06349596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062462928 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063524001 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062465188 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062225136 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062495779 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065065331 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063408058 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077302105 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069566181 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062764679 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063805555 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063538475 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065186093 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064538623 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075549069 seconds)
  done (took 6.013470171 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089735375 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085590424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064826882 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064312191 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061033374 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063482424 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066796062 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063239663 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064436318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068926949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063459651 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064508658 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064354599 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075771159 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063235137 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064134448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0688087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061402989 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062994448 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066360836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063387964 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066735404 seconds)
  done (took 2.747017958 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153574825 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069871836 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103890278 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072419497 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066853748 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071776722 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068935715 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069174066 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06931276 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06755309 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067454815 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068846204 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066710094 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06711131 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06698263 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067194341 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068761245 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067496458 seconds)
  done (took 2.616551242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076841685 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065377746 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085307411 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065089556 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065339535 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067382077 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070146084 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073210989 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067227342 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065327909 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072867819 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06714834 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067168143 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065185411 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0674351 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065388993 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067253341 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065121836 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072904449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06934604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069697778 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073079348 seconds)
  done (took 2.788142592 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07862938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067335581 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081847128 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068153837 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061238385 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063721857 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069474479 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065241528 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069539251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067128965 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065168663 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063457327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06838671 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065075156 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06855423 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065048975 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066903878 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064819931 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066887034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06071629 seconds)
  done (took 2.61562238 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08606429 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066915059 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0673425 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075162606 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066587025 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067038076 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074404307 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066601935 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066725902 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086464526 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066381038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066682581 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073895072 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071698646 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066920468 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073851816 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074181577 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073725445 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066555682 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066081796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085919608 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066215837 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073742221 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066017081 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066290511 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066227319 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06662116 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071176997 seconds)
  done (took 3.255627409 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065831096 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065154794 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063234015 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062692183 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062750029 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062689457 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062862433 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062945843 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065483123 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062637862 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065199953 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065642814 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066929978 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067493019 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066860788 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0671769 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066671649 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064519355 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063436029 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062946733 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064963646 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064887529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064959353 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062596952 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062537835 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065126 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062538844 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062591236 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064807862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062565927 seconds)
  done (took 3.204768788 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074801052 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072486741 seconds)
  done (took 1.421964141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063098672 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079195026 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063111163 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069028451 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069058572 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065768027 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072290736 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068755959 seconds)
  done (took 1.820887443 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080570631 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076306122 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068328776 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080344067 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075476034 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081962261 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130969159 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066396199 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072351176 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063433473 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078828138 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064703149 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071711014 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065847956 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070522891 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071464301 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063043908 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071334301 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068055136 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064121323 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067187845 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073991495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068038217 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061154987 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067023889 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086951697 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076330833 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064876529 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068759968 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07270028 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070802241 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059443369 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064881192 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065588176 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063327414 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074807126 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080340303 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067983999 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073446884 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06623068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075187921 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060223602 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.06955306 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071515483 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075098569 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065309017 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06600973 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060300215 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062948971 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06759747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060442475 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065666343 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060249787 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074677616 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068724344 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075616173 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063987745 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066685544 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068035405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068539698 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071864623 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067294514 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06775518 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065045647 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072133928 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069721308 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074568132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060534191 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059984854 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063517844 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074444449 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087125449 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071384591 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06595215 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066012412 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062906404 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068535246 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066967351 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070788973 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071378697 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065177062 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070528477 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072475052 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065179918 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067664751 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073016835 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063888139 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068115722 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063119378 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08123844 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064413083 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063554597 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063355814 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075324507 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068969065 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065202818 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063538233 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0726943 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059945972 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066245685 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066604819 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066456475 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07583451 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069752219 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070478523 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073288487 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071464627 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064443602 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067121725 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060784251 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064950545 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.062911284 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070782923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058349965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066642094 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064988546 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064334465 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200809458 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063696242 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066347314 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073134161 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071459322 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064657638 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063430922 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069146603 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065898679 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068664737 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073533089 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064592012 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060970802 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061272657 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069362202 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065513275 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069408353 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070289602 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069189217 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060855782 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064442731 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070877564 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074378193 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066691318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066511271 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072352945 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067199354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064831639 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072223385 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068489417 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065536952 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070895475 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066600624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061838831 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069444234 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068805801 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064183473 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069073648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069185139 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067854689 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066886509 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064733678 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073206115 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066924731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065322029 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066258513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064131273 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076258257 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067550462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060884597 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062949717 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07588404 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06400732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064950345 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064761348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068314459 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066435492 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063884524 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065164589 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068125397 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076433201 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070258925 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066880902 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070746723 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077304127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065279944 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067431445 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064837619 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066636338 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066203968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074702832 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071129342 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070139553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067889262 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062403363 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070971063 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073009631 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064972208 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063361419 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06460056 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069804608 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070791841 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069974599 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066080909 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063837824 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066346914 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068893605 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068853207 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065098552 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06474514 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071700724 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063865207 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073180609 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066972886 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075724465 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068776238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060876459 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06873153 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063704538 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071362303 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061252211 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064296335 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06477939 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066678975 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064958241 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068049542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060332683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072813969 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073475564 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065831043 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065468201 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065334448 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071597655 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066208714 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068408089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067695935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070166265 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074604742 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064391058 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0685477 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074520293 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064243953 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.191134511 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072276425 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065434199 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066138431 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065972929 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063847284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069994001 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074952738 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073270127 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060665231 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068502129 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064738553 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065424043 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062197503 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070824577 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068722324 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066886261 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072560137 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066920741 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066309655 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069632862 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065566419 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067072755 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067275893 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068611256 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067255373 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06791209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065667247 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068630919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065763368 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06440505 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067977509 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066085864 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066450732 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071552919 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065696981 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06611608 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068708649 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066740218 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06687969 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066197962 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065038436 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069042893 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067570797 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066729949 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068263963 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061387011 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073556593 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065725723 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073811834 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066409994 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063333962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072776919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069314812 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071899131 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066804403 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066835501 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067803331 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065658787 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068917132 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07259719 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063973784 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076748778 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073536681 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066251757 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069043618 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06683002 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067235637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065099622 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066982027 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065782291 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066204647 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065703741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070089573 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068035389 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066031141 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066954853 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066394858 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066206172 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066568385 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060432462 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064632956 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064830782 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065181112 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075307531 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065862025 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06550882 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064081895 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066088108 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.0643267 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062548321 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073242687 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074432317 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065690341 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072320533 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064611436 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067337854 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076049033 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059586384 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063414463 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063402024 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063527052 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072613144 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066072151 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074579205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065455267 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064848701 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06286196 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065947362 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064549629 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059969633 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063424037 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068981926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064308563 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06387305 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064751341 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066864311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064948605 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073029937 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063457085 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064668983 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064252074 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061345102 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063514414 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063438864 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.203080009 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066662532 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063783112 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063436818 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065672505 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066778845 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06745101 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066210547 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067754022 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075802086 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065490054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069057858 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069332711 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060703525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068819163 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066556717 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065991861 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065746698 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070055311 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069905889 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067561389 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075063593 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066177045 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067117567 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066872695 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06395563 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066146286 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065320261 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066225248 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065755484 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067116686 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073789046 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064527986 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068685857 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066328134 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066132386 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072755651 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067071086 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069213836 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072393584 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066025842 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067650437 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074050522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070599657 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069419322 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067178032 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067596025 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072093198 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064973473 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0722763 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066409917 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06673801 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068006275 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063601919 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065411439 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065245184 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06523489 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071526856 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066770431 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065237023 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065374459 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06397216 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066566282 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069234169 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073229426 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068355383 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068308146 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061338468 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06344046 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067537282 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063611089 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067213795 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068229241 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071298267 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067926485 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066236035 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064198608 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074035246 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071123332 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069089249 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063592158 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06895132 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066198834 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06760806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066589249 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065663458 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066863325 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06933483 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.066922655 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065052629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072144529 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068796114 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066496291 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067022004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066585745 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065740711 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060901675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065854081 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067396389 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070639415 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067490717 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065553116 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075918569 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06319627 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065670815 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068918327 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064797586 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070301241 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061039246 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067094129 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06667649 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066272487 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061145484 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064985056 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063029519 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066977862 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064505091 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06021519 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074018695 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072564938 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066672086 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063557085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063310844 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05937244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059651642 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063510602 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.201057801 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068306803 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075631542 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065121709 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065356595 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061689228 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066474276 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068857424 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069344666 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063266479 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061879117 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064918708 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068983194 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072219687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064925971 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065737702 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069262779 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068398578 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064157757 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069174032 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063241653 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069548041 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078815437 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066837453 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067188317 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072438066 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073588485 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066598008 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061425701 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066105433 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070178409 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066557184 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067136911 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066473143 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080665956 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06956772 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064815957 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064688785 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068562391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065068468 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074043923 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066605429 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067139269 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070121077 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068398803 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07563531 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068566157 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073706619 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070099865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069408957 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064965615 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066286926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064095179 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06575261 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06663568 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066444163 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07058419 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073559492 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065539638 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07662651 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074979359 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067342647 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063683166 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06574107 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06522553 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060710936 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066617549 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064302375 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064052448 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063841834 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064843934 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066757159 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070495493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066460197 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.065777913 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065172102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060204205 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067359509 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067846172 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066160702 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062386071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065589997 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066106515 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069295756 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068771119 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063442517 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.066901797 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067011286 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066538778 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060787846 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071687944 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064625937 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067121515 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064577647 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065455615 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066265834 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068741338 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070008446 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066389192 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067472541 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068892679 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067879059 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062694604 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063043477 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070928183 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063361985 seconds)
  done (took 42.145842849 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098609413 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061992002 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060804971 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061082165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072817136 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062514443 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061119732 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062160963 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062284063 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064323955 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061151997 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061007367 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06964006 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076320759 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072962949 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065670854 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061100871 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062226844 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061079705 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062053686 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069435526 seconds)
  done (took 2.754604134 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073584761 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06968227 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071738144 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074873534 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0662308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069425745 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071347422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069453773 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074771631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06601041 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074631352 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069620324 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066149339 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066705754 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074694917 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06992121 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074876717 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066957368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069751357 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071354774 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0695444 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071405255 seconds)
  done (took 2.893948369 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066409799 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064815201 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067152045 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060256176 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065145041 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060557598 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068848084 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062694283 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068224366 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064632996 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.063912555 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064324532 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066758858 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060379555 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.064984492 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063009568 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106494349 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067919819 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064505747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065856117 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060389929 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067200518 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060467458 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060700969 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064227171 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068397581 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065354282 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062871902 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064813671 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064542828 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064767208 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06274027 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066219676 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065514761 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064238039 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064129556 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064557123 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06464065 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060130675 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06289632 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065206284 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06080004 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.064984414 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066041158 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063161217 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062719747 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066335916 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064504202 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060112314 seconds)
  done (took 4.533959785 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077776315 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10695692 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066767051 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086891211 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078711467 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074273677 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068221335 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087980702 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062477117 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063380299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079793344 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078350587 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064757463 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069266272 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071166721 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064613106 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065997587 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064146985 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068631206 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064273407 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068501488 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071446674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078533806 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077384677 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068448288 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063911555 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.0638709 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06884364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07688638 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.068830285 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069182194 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070229605 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079597117 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0699847 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064264746 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066739553 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080262946 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064638877 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066759329 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06235653 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067170333 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068844389 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070768389 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080219431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064704206 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069681036 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064698075 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061918809 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076854816 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066550673 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.071835876 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078248779 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068214283 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.064749832 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068912196 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078889973 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064644346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06339896 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067601653 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076366903 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062538719 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068241197 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07781835 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066412385 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071736471 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078324334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069735178 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068472191 seconds)
  done (took 6.301913643 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074026365 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071362953 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079840759 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078807672 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071592785 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071635874 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071108693 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071155348 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071334603 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075495722 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070974261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09155412 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06662716 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073853429 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071556552 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071174474 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071265865 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071418686 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071399219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071159757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071186756 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078733707 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071728233 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078736229 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097333394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066811213 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071083073 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070985808 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078728349 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071678137 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078084593 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07114105 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071291361 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079157241 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078194243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070749482 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064390587 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071097773 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071630704 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07129904 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066623018 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078819325 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070725635 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066751077 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071249549 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070983043 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078996224 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078066904 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073969882 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075901883 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071628219 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079031013 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070970319 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071819999 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079215694 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103735634 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079256331 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078911951 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071975566 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078833527 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078699086 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085153362 seconds)
  done (took 5.999116445 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083184418 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074268532 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075649411 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060962542 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063259243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069302352 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063331298 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063679304 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073396927 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073333334 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075694608 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068791627 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071730611 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075759666 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068535527 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071868855 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068848765 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068741579 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073358175 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0687527 seconds)
  done (took 2.779565964 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073291376 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082371262 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06665438 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07142395 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068150084 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070487663 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06744117 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068312848 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066112334 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06823512 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07487666 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074849862 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066260784 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070780664 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074464122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070588321 seconds)
  done (took 2.494322081 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074734414 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071362366 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078490709 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066433178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063352496 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062355801 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065035278 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061022432 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062002399 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07722653 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065106364 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067315082 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06521395 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063864472 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062043487 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067735785 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062108362 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062681137 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064873833 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077395113 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076277068 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064449511 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065900444 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065158082 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065358699 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070255569 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06480767 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062833376 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06242556 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065144614 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065652707 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06825075 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062126559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062809799 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063306285 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062307657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064851392 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065050729 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06725015 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064593403 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063094965 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064507796 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065432031 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065644469 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061152602 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065496948 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061636653 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067011737 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062580892 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065330197 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064578353 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067151959 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065545466 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071501233 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067610742 seconds)
  done (took 4.987790811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078040066 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068583338 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060918593 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062976736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069147079 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066839865 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068441725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066473925 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06702353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063152298 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066827572 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067699063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067368986 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068424331 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066652035 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068436688 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061518956 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067214636 seconds)
  done (took 2.577864413 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070870744 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06515729 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072230209 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065691393 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064928011 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067124629 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061229396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063562804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064129221 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064945839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06493274 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067329147 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06377515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067366866 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064824797 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065030837 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067524053 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063813467 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065416977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061353637 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067880041 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063937452 seconds)
  done (took 2.807915518 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071958882 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091234274 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136458581 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.082442735 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080147045 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077689792 seconds)
  done (took 1.906112651 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089266439 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07780779 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066357385 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086622874 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07236715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066410416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066455069 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066886944 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074859939 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075245272 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066387859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075140773 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074639656 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074063993 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071982333 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072214367 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066448033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066163424 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065859439 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082694123 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066437276 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074602419 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066219363 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065998868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066324653 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073701896 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074931666 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074541589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066292795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074579764 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071995645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066434414 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074987365 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07503644 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068731324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075877969 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066916261 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083258747 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072147608 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074350888 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068265257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072643655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074837916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071320102 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074905113 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067104341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071270966 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06677501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067177771 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084952187 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072679448 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074102956 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072558881 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075300898 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075193842 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084880093 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074748114 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073935511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0724234 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077411398 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073900296 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071769164 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073956594 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075175376 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072393114 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073843652 seconds)
  done (took 6.174518613 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080890518 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085181168 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067731102 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075118014 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074702166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066821649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066815494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067487335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06685574 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066328928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105889545 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067055219 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074461811 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074482033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067195744 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066445121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066673593 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074331205 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066597088 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084649639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066646483 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074188127 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074298523 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074360829 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074954517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072099925 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066614455 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066718528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06645795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066481397 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071466297 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067205669 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074278043 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066569475 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074558951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066886719 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066841384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071471218 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066805405 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072171676 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074534947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082697127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066963899 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066536207 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075085098 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066834072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066718893 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066288705 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067030259 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06658254 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075642169 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075536898 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075645849 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074609165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067756222 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066945839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067287261 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06686558 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067079057 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072426147 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074277653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066724641 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085071338 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066808435 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067040359 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074882057 seconds)
  done (took 6.096936465 seconds)
done (took 128.367560037 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183642332 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16948271 seconds)
  done (took 1.716925904 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068691194 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097451235 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.075904771 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127122462 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066253358 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099892579 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099051132 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077747116 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06618239 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065902625 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065591184 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068504279 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131802427 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065768902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066015658 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06832702 seconds)
  done (took 2.687227615 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096601205 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15655681 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098952053 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064750304 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096077109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072693537 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06424656 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074435342 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070365915 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064628224 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072575881 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069913531 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064925365 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069808721 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070304891 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072099254 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064572371 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072514846 seconds)
  done (took 2.795976307 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100940946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091136734 seconds)
  done (took 1.575923613 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.153607956 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105321621 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149204031 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34272041 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165388582 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229220858 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126576833 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126771158 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118557104 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122644498 seconds)
  done (took 3.01933066 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097689072 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151064384 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255235488 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114230375 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072154232 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093826664 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115261653 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077566923 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080113307 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079387469 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079538031 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075514081 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097738653 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072709087 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072773544 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075310327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100927748 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071738829 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073352352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075792543 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097901318 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065371868 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072882195 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07118221 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076336795 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076210368 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064738269 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064697693 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075807808 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073291783 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076398115 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092349658 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076369112 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105809458 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069427304 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10691068 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075924466 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073159016 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073436327 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072896513 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077609277 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078032274 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07153669 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.0750485 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064852623 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075552872 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.064906213 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065109154 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077022302 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066176539 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077073701 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075989831 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105352909 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066702373 seconds)
  done (took 5.940014254 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100936294 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104257665 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070900831 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108388984 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096738238 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072529419 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.099901969 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090749223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103165199 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092303421 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088683404 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069904598 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081192442 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082649681 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109396193 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101101358 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094253219 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070618606 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100724955 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10167925 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067626427 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093610716 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089892594 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101012426 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.06731504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069849576 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067199371 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069879455 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076010937 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077334284 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069102678 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100842808 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08341648 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077738082 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066762556 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067656289 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067346961 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078484201 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096603678 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077978763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076620811 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067064382 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067179133 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068795529 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090192567 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067175235 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078214531 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079432606 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077926629 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069355935 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069796632 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067218748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069093887 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079232045 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076910458 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079608633 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078967214 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067592206 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067697839 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071067232 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079687163 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078360813 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078232429 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092346073 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07877887 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06782426 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079377845 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084389019 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067828322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069447031 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073961144 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069021547 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069046118 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077395026 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07735805 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069810579 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069161807 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067636664 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079352423 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077644941 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067744885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076255423 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066777426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067892624 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069296421 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069386723 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076842098 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079084813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069648774 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067734222 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069067734 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067989533 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06651974 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075710084 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078297447 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07698928 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076367649 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067764456 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076584206 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07559541 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068237615 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076684678 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.200063419 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070057553 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069320202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078712827 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077622666 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07935571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069178356 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068635637 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078177586 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080424152 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068867488 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079197292 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080861747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079356128 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068037854 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080873321 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068332274 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079302307 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069249993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080082124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068700441 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07819445 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068967197 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067091553 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068540442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078522701 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069442288 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068009548 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069835141 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070146912 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078273936 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082119051 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070603852 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080688334 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078018654 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070516503 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078456486 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068483592 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079006903 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069371347 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069534503 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067663743 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08204421 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068516096 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068495245 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069089279 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08013091 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068780159 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079637518 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078373357 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068351558 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081066067 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080066391 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077172363 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079159522 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070384824 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068037121 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06832228 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06899231 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078140795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078953243 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070027865 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068976608 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07720921 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078555806 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066652441 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077352616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077606514 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077995111 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068201956 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069037194 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079612231 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079960138 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077325294 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077314158 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077685045 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067940513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076323634 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077259976 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067437661 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083226327 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067278631 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081666889 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078455248 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075719825 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078451699 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079845279 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079271771 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07911325 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08198578 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067174109 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067170538 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078562998 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067477424 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068743771 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076968425 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069191616 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068984451 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08088532 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06642776 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07713319 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06578027 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075940643 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065592058 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067941048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215582956 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068767833 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06944668 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079695003 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069951479 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077955566 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08102093 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079195025 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069028409 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069840413 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079643801 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079056799 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067697852 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068011207 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070699401 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077552933 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077550556 seconds)
  done (took 18.677350363 seconds)
done (took 37.801920713 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207691237 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149083703 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.20183806 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116795998 seconds)
  done (took 2.157374884 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119613112 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099255557 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093551292 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064239952 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100530511 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064786691 seconds)
  done (took 1.960185677 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30842866 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207647753 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17958131 seconds)
  done (took 2.110811166 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195182722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184876946 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389877541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250354082 seconds)
  done (took 2.541668263 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140841847 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08787663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066023478 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082002281 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132902655 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158472695 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099638362 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123514724 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07676333 seconds)
  done (took 2.436567886 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14285444 seconds)
done (took 12.770484713 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.101335579 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.216515684 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.144805238 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.118661117 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197102601 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072111658 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080519679 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106237195 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076255286 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06951173 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 0.124159644 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065080406 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.171467036 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072791516 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073815469 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099850509 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071963905 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072531443 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076411917 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078186332 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117899077 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077389759 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.207128174 seconds)
    (24/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169477579 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.110162572 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089638247 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188377891 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062623483 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.182063644 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187922754 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.140485848 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.145060621 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050643114 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156750003 seconds)
    (35/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.106283125 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138675342 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.098547316 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.203397342 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.139407319 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070036157 seconds)
    (41/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.148811531 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070702644 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.158416087 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086160607 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068576524 seconds)
    (46/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086542483 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109697421 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.094269 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120021987 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217425458 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071060427 seconds)
    (52/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.154597352 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.204417002 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071397814 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.193443219 seconds)
    (56/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068652083 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069985395 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.109889584 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07411465 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095413607 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.178381473 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13811385 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155600483 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06633063 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093743888 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069787617 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09077858 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050690819 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067988871 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.103359612 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05064765 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.095574235 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.051907472 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.184209486 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067298366 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086549064 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.085998282 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051517911 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205009842 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051060196 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062216127 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082490169 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064329779 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.339913288 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.066411678 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 0.138737641 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074175205 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074651001 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072100473 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089529043 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050867724 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074692969 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149749307 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071643782 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072792796 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106609823 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.094418369 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174817535 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.133692927 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052254883 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 0.125879197 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176538122 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12979318 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.150987056 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093415023 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076272427 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051764745 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186347135 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052598428 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051249671 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.089973386 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.307765883 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074316491 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.064874275 seconds)
    (115/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061266019 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.064910356 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.107671819 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134926772 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07210148 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148139628 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076989371 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064659557 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.051833614 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169098358 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108662274 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150223841 seconds)
    (127/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074529273 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086167671 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107949984 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05201502 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092514063 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088870101 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067174266 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088815588 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065538084 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.136861675 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 0.140691391 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072492266 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07086557 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05107005 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182917251 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070861884 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071619252 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.06171738 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071377175 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070527431 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084349734 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070585779 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051810405 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098196789 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.087916907 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071168179 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07154534 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.095707278 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.063904715 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064313815 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051118113 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136140509 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063834705 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071426355 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063548815 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050657955 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.0512267 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064125572 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072338115 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064032213 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.097866154 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075549068 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050845664 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067061563 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071697313 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.17341969 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066954715 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088620003 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064423459 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.051377933 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090295139 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064821249 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050362738 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050321212 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051333498 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063902423 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.074493981 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.064209886 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06955685 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070529777 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.077960347 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.116015925 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073831197 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10073224 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.063557477 seconds)
    (192/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071280911 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071960638 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063886084 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.332970101 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.114805607 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066775182 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166509026 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06420787 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052025576 seconds)
    (201/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052140186 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.148040397 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13953287 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087486499 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131183586 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16335476 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06647422 seconds)
    (208/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.06778662 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067078502 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072967181 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072193288 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078731662 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070657854 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071609932 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066528422 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052940467 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150862249 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053605524 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.172760865 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182178718 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064588744 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060252607 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06454389 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050594267 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074263387 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069574694 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071424002 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051574478 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079300351 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061210886 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075335523 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063577599 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065282108 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077153622 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174769176 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071324038 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131448482 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065068906 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065665733 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074006543 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131184996 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066795286 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071095919 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077874556 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091319489 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110320815 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106420873 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050935693 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050648844 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087632817 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070889932 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.06482206 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.072415054 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052021357 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063802495 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050826083 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065456039 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050331762 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085014082 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070661536 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065970022 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051806105 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050712071 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099101445 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071207404 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072215258 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097684505 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053032733 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184426812 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051149126 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064415771 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051814971 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088088503 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066151038 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061248059 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052934793 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051715494 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064566713 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050806865 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071383722 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.050761063 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065239002 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063018278 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051070299 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063036935 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09050769 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.131063203 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051810122 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065020574 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071355792 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071283688 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087487925 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050652872 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063167177 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061817637 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052031468 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051740848 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069810085 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050568041 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060023903 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.065682209 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06718764 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064521162 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050863379 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07019974 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085216227 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.130592246 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068501558 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050457275 seconds)
  done (took 30.164720903 seconds)
done (took 31.593213457 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082459506 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090815364 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.0735144 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09110142 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079159158 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075476837 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071067641 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07642485 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078368792 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.07987678 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076971699 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054088705 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072729855 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072578122 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072852949 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089074622 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076703953 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071343387 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07148557 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063359637 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07136886 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064396082 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065952833 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053827436 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076063106 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070380262 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071004773 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072589629 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064430976 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064845307 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067503608 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071801641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064437245 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076495658 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070695538 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071854081 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073222061 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075104171 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06638075 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064570983 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072707239 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065194585 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071246303 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072218 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.0701945 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069971987 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071990982 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076444068 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089951083 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067196029 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072720756 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074167456 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075054423 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071029259 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068164313 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071788257 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069265097 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089435774 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072084675 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066739898 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072695634 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072340983 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069549689 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071716185 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071900041 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073884822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074057845 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069932368 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073395198 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069487802 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064554959 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071628248 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067831323 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064223707 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074300607 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075083847 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063383874 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07228775 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071057388 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070395959 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063806654 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066630347 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065941027 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070438563 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066095057 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053687042 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067609764 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070674493 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063423752 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071720549 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070326742 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070491376 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065616699 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073854713 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063680132 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069457762 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064822851 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064174733 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06548861 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067743429 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063939714 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066322286 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0726588 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065394334 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070243082 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077370033 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064199241 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07010716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063019298 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063368393 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077631895 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.072922949 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064195422 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066553384 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06357231 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.070771156 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06348087 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063970512 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063839387 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064181371 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069424047 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06414835 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066169582 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070483192 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075407286 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062959227 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.066205154 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064972402 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063260166 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06800719 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063286121 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063179055 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.202432848 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061754643 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066680787 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065260643 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071442783 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067386941 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07215174 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06582255 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073128638 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069475143 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069974294 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069795186 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063854437 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.057788592 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067724893 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067794997 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066301136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.0651125 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066194375 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065403856 seconds)
done (took 12.272146476 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065726955 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140602926 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097151493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093774117 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08432711 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065596197 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074738665 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100152657 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066646057 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100304417 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085569912 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083359544 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.11079682 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063436176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06513447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068459109 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066123584 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.079822106 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099461532 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084927468 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107340832 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064099223 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093991131 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088180766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085512978 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090698973 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065637064 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068361461 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068227048 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098888957 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.084816147 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068912856 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065508441 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098181911 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090539328 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081478841 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065141539 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080912529 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065399778 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064538636 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079456076 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.095769199 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078434811 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078998664 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068529537 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.06775064 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065870814 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082188133 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087212108 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077630714 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.084981504 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101278858 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067511921 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064484436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063756794 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083935385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064085872 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067789837 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065362568 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066752112 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064956886 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068235523 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079694889 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085030326 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068528162 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079079741 seconds)
  done (took 6.732105695 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082856842 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088692147 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082313785 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081614057 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064919254 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065287889 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065224591 seconds)
  done (took 2.045882646 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065920557 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087079662 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087705587 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087740871 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08288595 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085402796 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074516641 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065902261 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.07921201 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066586529 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085542849 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09958372 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066161756 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071586862 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089357898 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065144393 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088415261 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065569502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068619261 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088145832 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06756443 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.080647144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068675796 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065516585 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079113281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065786 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110470734 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069503618 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0668188 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068151744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063240473 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104467066 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078981335 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074072429 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065005262 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079612825 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079413599 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063487661 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081459653 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070260395 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079268708 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065825996 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06636416 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063279601 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069401825 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075471255 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066068957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06592361 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067936589 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08453756 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066100583 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078304321 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.06991255 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068150422 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067016378 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068943657 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074714275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066088471 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084601547 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066805906 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082171336 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081819254 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.078962878 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081634034 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068160511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079000951 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079203975 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068135882 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067538201 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069530119 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081321095 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064047022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067295817 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.075641791 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067341092 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087962943 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087739186 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066738271 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074319541 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066025142 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065816534 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065450799 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087596339 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06767896 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06543996 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069789783 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068442523 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.063908835 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06503779 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068731496 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063634216 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066938383 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067838032 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068580212 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067818403 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081619356 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067731573 seconds)
  done (took 8.660543357 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067754515 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067254196 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068359339 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066788208 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06699341 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066593778 seconds)
  done (took 1.943480222 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091872984 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068051056 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079526658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071201685 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103105544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085557373 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08558809 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077553244 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082588961 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077802351 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085084182 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08664833 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091133923 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071531279 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085355016 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070698251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085557092 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074523665 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.076979687 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071999907 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085022756 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07190177 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072516593 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080106422 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074711118 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071119661 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066033831 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078112738 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077067578 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077464336 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072148673 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074803098 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069232003 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077195635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085144666 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069359553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070431501 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075984405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071486305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074543214 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086836538 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072167108 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073734107 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076242268 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077271094 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069230113 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07602092 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074872435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084734936 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07599663 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075660382 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070190732 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073950914 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075791602 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069538792 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076630708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075974798 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084712094 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070792607 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069263171 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06803852 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074216493 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076379318 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073805777 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077646037 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076138509 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069052984 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071256292 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071586215 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07061009 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075544578 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067802269 seconds)
  done (took 7.016359877 seconds)
done (took 27.902186816 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539382986 seconds)
  done (took 2.047219421 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607396539 seconds)
  done (took 2.140285564 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.655608849 seconds)
  done (took 8.184195783 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397220246 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476231003 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.70976726 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129610598 seconds)
  done (took 3.284611459 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.670804781 seconds)
  done (took 2.20676715 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207771696 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195150344 seconds)
  done (took 1.951256526 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374855388 seconds)
  done (took 1.902004733 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.098696766 seconds)
  done (took 2.627295113 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259913358 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16451912 seconds)
  done (took 1.958372019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456850829 seconds)
  done (took 1.987348758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.828341368 seconds)
  done (took 6.360762151 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205458644 seconds)
  done (took 1.775999962 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239901445 seconds)
  done (took 1.76401019 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.720220594 seconds)
  done (took 3.249930555 seconds)
done (took 42.977754971 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078302033 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080160835 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079773766 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07662628 seconds)
  done (took 1.832808532 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076205842 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071593406 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076025131 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071056184 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075266727 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071352993 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072878084 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075483929 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070919519 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071507377 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071417138 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071529008 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074175767 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073267689 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069981477 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073556826 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074725452 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070906049 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074330386 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071207549 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069818627 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073357693 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073720943 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.0708579 seconds)
  done (took 3.279367764 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076803266 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071884883 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073600543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071725008 seconds)
  done (took 1.833701837 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076275295 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091078254 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087560671 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075929986 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091294064 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084938049 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067712986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067823011 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072103897 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075603563 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066833602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094759656 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086178719 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075419671 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077841943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064889765 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067229658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085559619 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075967776 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076797928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068984807 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075671766 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066824149 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086686622 seconds)
  done (took 3.395007383 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.075794173 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102175367 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076896358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087128519 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088570759 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064276273 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074078236 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088110336 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120748874 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064108686 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069399004 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064472795 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071340345 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064176423 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075196419 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103268347 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.10658322 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067481033 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094046663 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064351381 seconds)
  done (took 3.166451805 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071587999 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068780156 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065220774 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067789375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077093534 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071656661 seconds)
  done (took 1.966205586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066999935 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066632129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065743042 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065954885 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070816801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06621487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064833131 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066059517 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066191338 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065907534 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065640901 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064827935 seconds)
  done (took 2.335727513 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.408762959 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067997944 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067739812 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064915971 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069654174 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06566058 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078779534 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06733656 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089206732 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066120322 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065590524 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067301314 seconds)
  done (took 2.721013919 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203782273 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07500234 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23616901 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134954827 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109657467 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113850365 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102377175 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111039778 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140899684 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099734928 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165200022 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162692694 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105145437 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134654438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087607657 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096264761 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153113588 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159431491 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10189312 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16256037 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141468663 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122272812 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143989215 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099294458 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104210693 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119103744 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069959256 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078248045 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166712638 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128513372 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1431609 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108950927 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091587144 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172620548 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168057195 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139599907 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131809467 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082274003 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10008678 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130746353 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194030228 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086434895 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158404738 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24665472 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07940417 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132356862 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118636506 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118566124 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105736519 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089001026 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144210136 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179308732 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136613704 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085337664 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11092133 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113531799 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113740671 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101245963 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177819067 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158862209 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125366778 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069746858 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097065499 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150992118 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130476473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106973123 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124849429 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092344368 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130902932 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152236856 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11633999 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140698098 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125876179 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086762644 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117077178 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137294797 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125861813 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166745516 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122325475 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071554413 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122604109 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102371763 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079983925 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.13986261 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073977857 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172378249 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096430888 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.104134512 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110417534 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106973514 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106370278 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157230759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140032188 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.244903779 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065918574 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102754593 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118679936 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146943465 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085877936 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10725162 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115028882 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075951672 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137099457 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073858173 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121322162 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074018451 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123687782 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13099093 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074384842 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119498546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099688241 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098210338 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130970171 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156521603 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087369423 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081190262 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164003448 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120131768 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10180317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142026044 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153685045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097803406 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10074313 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147391301 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17627501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087945627 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160204218 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105340082 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082440767 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086218011 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122014561 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110313445 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120072235 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080765816 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116533815 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165027588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074156895 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093548765 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131101162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077818038 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080028971 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101454922 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098151179 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093336136 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09824968 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101833366 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134801071 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120474404 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102854173 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271323025 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097457199 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168837081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087624592 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099195608 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102498148 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.06878952 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135717691 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154236303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078422797 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162620541 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.120494445 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103177864 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11750338 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081703672 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137658869 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077864046 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069133604 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142776977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110235245 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108156692 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149133476 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102831717 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124559392 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117063618 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133147207 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130600407 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127492485 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103805275 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08716826 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110071711 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123870812 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072324901 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08966793 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078906601 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102228948 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093721116 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081977338 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139471421 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122275764 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098346856 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109762347 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094790704 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145404726 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07542319 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127129598 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117195978 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09287798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149159375 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149135239 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128663351 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097167729 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141336638 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068613769 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07220775 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087131337 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268401077 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08316983 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082552485 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116833512 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14501735 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127291482 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136686842 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109150164 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119080168 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152339728 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068623902 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113151732 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144539931 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118913849 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102854726 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089448327 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098027116 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139431647 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106903674 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179755279 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112122155 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123950072 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150620107 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102040951 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078755388 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101840562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132993212 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103848232 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14226238 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098598615 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08655999 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108051494 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072863159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098282257 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125074695 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117749557 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133241627 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113453539 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130404967 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075637691 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115003826 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118495147 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120312013 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063437796 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11808898 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157860264 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091924121 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116676669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149518642 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077758289 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.121659622 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.322033506 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14406989 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083580862 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107811376 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117744009 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126099341 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118398961 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137631405 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107353746 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133430765 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107925166 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084523644 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086127599 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095769145 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103909378 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093547436 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106910203 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113065658 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093320321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129731036 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102055689 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107505904 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115742078 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094905892 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088559327 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095142047 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171382101 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118071072 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168868657 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097562798 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142998411 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160924858 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073150555 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077580966 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07643266 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138309108 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082363856 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128606937 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09632571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104029322 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121631123 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139642647 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093485578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06740105 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106616325 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131958543 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110689749 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096833818 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103101959 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160320815 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098616916 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078199627 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111406672 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102718321 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100434173 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167173627 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.206223786 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096698877 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075726412 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080274493 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126590602 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151357537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079581198 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102501269 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117845021 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108759791 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125769853 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099898775 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098016213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112341356 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147153078 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126918058 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088716836 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111124451 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127070353 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154552281 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103706764 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093660078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169779563 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165447543 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157472395 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087351563 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113208727 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112144637 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106122876 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137445337 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082061629 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160413912 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080741113 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133740829 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102129645 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088831365 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128142425 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097618666 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087030478 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145728573 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115839298 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081284787 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076475241 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115451991 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118384738 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104682319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07411991 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13647428 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071318619 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129328549 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16471138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079628781 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101801888 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241830601 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079755653 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107178375 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101377698 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088196481 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097173933 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170710297 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087194032 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147232726 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139505864 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112286037 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138773657 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098669184 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634459822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076912233 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148793347 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114438024 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169795576 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095964538 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116285154 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107920736 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123234145 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142403672 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103492122 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.17421297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129724086 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114573471 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078646018 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101054007 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101039102 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087652758 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1031279 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11144444 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11370712 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091672363 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113603748 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121107872 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080734168 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093645 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153520124 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114655581 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141656816 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13776982 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083378341 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115750505 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136047771 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078258432 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119010627 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1483452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103735455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095393155 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078157341 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.247283127 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168554696 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072223977 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161144854 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117384446 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108832237 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112392422 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11232534 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129629232 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106562475 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120088769 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092087913 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107841413 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110375401 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080154166 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076117765 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102508247 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110885265 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095619918 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097835339 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097055899 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148677972 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070406252 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095088869 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101618423 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142863998 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172464534 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086597427 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081444164 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116887891 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111025506 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111611406 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118388053 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078092908 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081244407 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080140159 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076412802 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106831612 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11030152 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102963971 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109271834 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160909705 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081369329 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223936462 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093386361 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103268308 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068764055 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077281235 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094427982 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095488266 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106801737 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09889736 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167482197 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092323824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.0876222 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089965616 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071558811 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081150871 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124229135 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256739997 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118599062 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09689649 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062157021 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107681176 seconds)
  done (took 58.011055276 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103450921 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081422301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095251729 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148080307 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120728091 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210182559 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155773207 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19744712 seconds)
  done (took 2.758300087 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067017912 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092939271 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098949095 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081596015 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065687231 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067302107 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221323733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.07887877 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065477552 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086853613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077747279 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067381268 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416316807 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065016612 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066303891 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.060695852 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066002475 seconds)
  done (took 3.382740044 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.372120305 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.359826666 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368390289 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072343697 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.865982852 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087832975 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.073835668 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.094707658 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069187002 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.265469759 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702302931 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091146732 seconds)
  done (took 14.068139302 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074205238 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068080613 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.082230927 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081870813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071472918 seconds)
  done (took 2.020388133 seconds)
done (took 102.345487992 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078893927 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388033703 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052943747 seconds)
  done (took 2.11129748 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081907311 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082774282 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083022411 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081357455 seconds)
  done (took 1.981027885 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073124084 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074803291 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083823513 seconds)
  done (took 1.877737376 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219786848 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136983512 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085512836 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081190846 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076689332 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077738137 seconds)
  done (took 1.885754786 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071520459 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073706457 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071773987 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075566321 seconds)
  done (took 1.938270992 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075730057 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051798511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054524114 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055242231 seconds)
  done (took 1.884065211 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085456145 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07789272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078105517 seconds)
  done (took 1.888771224 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105446483 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.083487438 seconds)
  done (took 1.835851189 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080276159 seconds)
  done (took 1.729730934 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09697408 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112157489 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126645785 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107784416 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134042694 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107176499 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086751005 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085497281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075634512 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085879195 seconds)
  done (took 2.666160211 seconds)
done (took 21.961622094 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077829525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.453341677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35916695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090116082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666232186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35520929 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981053037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090449215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111565217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066997265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082719529 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648051709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971703264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.40800479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960888599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.417530881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.647556348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067250182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066634903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066750634 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967256381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066715089 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066934175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067346569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64898021 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369493201 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06725995 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.418136621 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066771728 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068782146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353825242 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066732193 seconds)
  done (took 16.451808783 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069978721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11727489 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072586601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083255226 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070139972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068775043 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070730256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068235347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119020002 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066789629 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083441947 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066683617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070908804 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067522496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.0862913 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067122974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067692262 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067680171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067327417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067647198 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084968747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066640842 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06698311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067339281 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066763567 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078388488 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066880081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066904633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067226553 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069062944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069824463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067845745 seconds)
  done (took 4.021859415 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114437604 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124153877 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073179487 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101551933 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111576462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069432945 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142188625 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091780405 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126217511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06747949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083466476 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0673708 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099537391 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067882356 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086596751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06751838 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068913115 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06807934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067611416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067771125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08592008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067286736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067509451 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067893638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06747713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080222046 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067988579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067744377 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067270004 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069110774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070970882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068023952 seconds)
  done (took 4.278726664 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071495071 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074542464 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081620827 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083449526 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068891162 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071137101 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071887144 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068731802 seconds)
  done (took 2.258555205 seconds)
done (took 28.665524933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077522967 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069426222 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071952141 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079682135 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072348291 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077785982 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066299846 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073283907 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071034886 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071894377 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073509289 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066539128 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069947903 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066278131 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072824733 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067020709 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078181319 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070659859 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078103713 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078488837 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069196581 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071967849 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073355639 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078348939 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077819268 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07797077 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076107275 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071887673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068456372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069560132 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07576268 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083455034 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067642237 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07795073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066850565 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066929444 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070335155 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067199653 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078348422 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075281139 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068768451 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075159806 seconds)
  done (took 4.707828742 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086453851 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089933265 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083328838 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0608489 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066091211 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064440757 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087282842 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059254889 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059142135 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08633221 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055522067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058564594 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061356276 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053150878 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058566501 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055844222 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060666704 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055059207 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058426312 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058467221 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057075886 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053654823 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059100339 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063981348 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05564889 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061214936 seconds)
  done (took 3.348539206 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073284605 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083628706 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08741317 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124777251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101859978 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075732738 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076979525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090867494 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084221762 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066379859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070170807 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092476694 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086744377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07270568 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066653361 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083184266 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081010757 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068215067 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072476334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089364432 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082963341 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082622396 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091068757 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079532083 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066310567 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068369605 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070101785 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091418598 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07138817 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075647135 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070558023 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069772318 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068315542 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077934416 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070599981 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068361578 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088924361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075797864 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076904914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066904649 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069946062 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067770987 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088657114 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121217429 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065802575 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072854552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074036249 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07568708 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066689986 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084902365 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077327222 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066061626 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069285169 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065727744 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066279139 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079042441 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068561889 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068736374 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075515484 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06962786 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084429047 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070942375 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081333579 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066362131 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073896758 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065979933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067304785 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065640476 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091165071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068296898 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106386996 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067571538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067382252 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075218522 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073774839 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072515541 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066557659 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081086565 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076383225 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069700523 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075030718 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070082199 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06949109 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086218464 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068726215 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067723609 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067315157 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072648342 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069282955 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068115551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079925501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066588681 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069901219 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082740927 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06623304 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067912023 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072503232 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071108488 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066222006 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077660247 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071233067 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067069114 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075412401 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066621962 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069496845 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076530158 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072627759 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065815777 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071156538 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072496363 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067427134 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068260982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069647676 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068229431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074881743 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072530363 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071088612 seconds)
  done (took 10.467129419 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158364597 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153957283 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069003649 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143164916 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074907505 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078157308 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145386595 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093049185 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066920665 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067362857 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068214823 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108284121 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104362644 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.113988273 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077407651 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06668377 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082148568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112206741 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147053143 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141207761 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082062484 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075764886 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068749724 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068052162 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06982526 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077271074 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084117214 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075686395 seconds)
  done (took 4.387438082 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079605087 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.099758608 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073164873 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088482784 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089723898 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066882183 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068848841 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06868001 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079267663 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077698009 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066692227 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072523991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073724721 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070352961 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067994737 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073519062 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073956751 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068503704 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069981612 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071713519 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0768228 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079334417 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070838293 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066028991 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073346517 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066130574 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063361927 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083402391 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067063331 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088879111 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065215157 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07394232 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080335289 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067373683 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067066173 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066881821 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066495004 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066288194 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068668944 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065426828 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06529766 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057637805 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065902145 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078311117 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072892759 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055950906 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071951916 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071892504 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071654381 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064547806 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069632237 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069678894 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070026336 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073933495 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071524568 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072047747 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067951682 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065006278 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074657702 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06638424 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064090417 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06536195 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071377807 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065010884 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07445665 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071062802 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065453272 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066310292 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068197117 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072477538 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066630955 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06956627 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064309241 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069097922 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071057256 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068217315 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067735294 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065008422 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066394736 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066876822 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055032604 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066700359 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052925761 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070208322 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064718764 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064780565 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066471441 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071774955 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078860048 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067858531 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072238669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067594178 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065569574 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069302197 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059484167 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068969271 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081349669 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081398059 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066230993 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064517758 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080476752 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071015806 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065596118 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055610698 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073620815 seconds)
  done (took 9.064908059 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093610256 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087161538 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069326541 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081910689 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090193396 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085300769 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073915778 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076100392 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06851407 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.080952605 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072775879 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075206052 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067429968 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076471276 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092046395 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075929216 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068814553 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075623648 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071204306 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.098960605 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082385648 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080537661 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073784625 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067189409 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074826034 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079248102 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088747387 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078839666 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077081122 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07443513 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078749263 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087978985 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073407216 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071208568 seconds)
  done (took 4.383260357 seconds)
done (took 38.023434419 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.745360693 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.006427462 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.74795832 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.154969523 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.829461579 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.927732756 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.743547146 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.728299642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.924175802 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.771656239 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.988492074 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.770723355 seconds)
done (took 65.023218146 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.743064926 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.880600113 seconds)
    (2/2) benchmarking "String"...
    done (took 2.004009947 seconds)
  done (took 5.555145026 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.018933177 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.258475991 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.975440503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.728088335 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.734754657 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.036220971 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.54220499 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.256507575 seconds)
  done (took 30.202449876 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.966159561 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.932175866 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.412383352 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.449986291 seconds)
  done (took 15.485934544 seconds)
done (took 62.763702633 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.757161556 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.769191273 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.753657085 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.712297587 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.787825273 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.73868568 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.79693975 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.936252706 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.728067158 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.711896196 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.727994631 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.158640231 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.732855661 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.851460663 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.735112242 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.731767047 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.741751649 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.139876812 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.879556779 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.736248228 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.727126726 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.779077599 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.727223243 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.732797701 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.737535976 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.723784641 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.155166682 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.726072463 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.539294627 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.724468684 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.772292247 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.095543486 seconds)
  done (took 203.236675463 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.720987317 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.584704373 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.698073495 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.76905578 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.136250927 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.919957954 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.856833396 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.185613983 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.722936988 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.743287651 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.883540623 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.719854312 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.906424753 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.672332945 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.728399539 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.723505662 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.882707435 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.940609294 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.721995466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.985846676 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.729945506 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.809375223 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.720043559 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.893165745 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.73870847 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.825229891 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.725770247 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.733271743 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.913157902 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.864802793 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.733483282 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726851017 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928039534 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.590849484 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.735755682 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727304551 seconds)
  done (took 167.562025441 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.118105269 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.718963252 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.718560351 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.718575223 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.718657611 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.726461182 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.718141574 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850710582 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.849023311 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.176334535 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.117282518 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.770325916 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.546312059 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.717527232 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785996681 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.729514626 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.718686423 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.733050628 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.745341976 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.718342607 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718793416 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847643675 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.730842124 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.885917551 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.725377639 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.719512658 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724271075 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.087444737 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719403587 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723532082 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.961132913 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.7202282 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.718265327 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61949899 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.380430448 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810647412 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719939096 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723489613 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.718574532 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.937983602 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.7185151 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.719641988 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.720391822 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902025631 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.719080525 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.84863902 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.71829375 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.217199459 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.718881433 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.720027059 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.421554424 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.388911311 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.72036747 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.718564661 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.720590932 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.719994877 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.718760524 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.724404841 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.353694173 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.791765166 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.720352348 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.723272436 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.724621415 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.719264104 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.938614696 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722064776 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.34258838 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.780915724 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.838210864 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843926204 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.722629977 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.789425718 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.814342398 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.720504431 seconds)
    (74/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.718683235 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.720337019 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.719183694 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.721826221 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.801850757 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.721201479 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.842297222 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.72866035 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.721526793 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770375089 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789643321 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.720739753 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.720018443 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.613257197 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.723189746 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.719644283 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039473797 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.787681369 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.720730225 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.720435486 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.720923345 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.843930372 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845360732 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.514068517 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.72369674 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.401082845 seconds)
    (100/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.723391791 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.720478286 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.855396426 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.72141401 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.890624628 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.723620992 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.802895279 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726576064 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.723781499 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.721344975 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753515527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.916791524 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.784368112 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.726215479 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.102653517 seconds)
  done (took 396.287938744 seconds)
done (took 770.936407401 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.390117111 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.344624805 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.481734504 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.37736665 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.347435631 seconds)
  done (took 13.609205741 seconds)
done (took 15.279802279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.821927782 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.819790715 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.753571921 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.816040596 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.748785555 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.816665938 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.799828622 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.75450239 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.783358566 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.75310877 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.784699885 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.752841607 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.739272563 seconds)
  done (took 24.812050995 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.968246995 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.968506709 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.800291106 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979012722 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.775863676 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.970067985 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.891680218 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.882624386 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.896536117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.742860176 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.741849783 seconds)
  done (took 22.287094901 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.970458668 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970138005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.803283686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.973218798 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777428421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.968255339 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.894300297 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.883593215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.883172005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744186115 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.740707561 seconds)
  done (took 22.277388846 seconds)
done (took 71.046855166 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.73649041 seconds)
  done (took 3.406170035 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.760318282 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.894011083 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.742395324 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.740744117 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.736346242 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.73876931 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.740737119 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.7371208 seconds)
  done (took 15.762264664 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.735180957 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.733159238 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.734513359 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.733757932 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.735780038 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.733317612 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.736423366 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.733365719 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.735281463 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.735671421 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.732673504 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.733037812 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.736068692 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.735379014 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.73700418 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.735932399 seconds)
  done (took 29.427024333 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.734826996 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.733339027 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.733797048 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.734312616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.733805088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.734082747 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.734378994 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.733451489 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.733986341 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.734017331 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.734864433 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.73499276 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.734119682 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.734128014 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.73408778 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.734965327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.734131027 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.733748831 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.738841906 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.735497257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.73597863 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.733875169 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.734916478 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.734899995 seconds)
  done (took 43.302530129 seconds)
done (took 93.571638724 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.477516201 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.284551037 seconds)
  done (took 8.4347197 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.739272743 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.73860919 seconds)
  done (took 5.191945571 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.736980347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.738141622 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.737884734 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.73839892 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.737556244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.737731589 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.738410009 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.737603214 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.73792952 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.73765165 seconds)
  done (took 19.050284248 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.737711747 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.73826724 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.735463834 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.738828523 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.738066924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.736088579 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.738966043 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.73787922 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.738012902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.736506541 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.73815605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.735830422 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.738960571 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.735939949 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.738302003 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.73673914 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.736525912 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.736229219 seconds)
  done (took 32.945464297 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.738509371 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.738486907 seconds)
  done (took 5.15076336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.735989175 seconds)
    (2/7) benchmarking "second"...
    done (took 1.737673886 seconds)
    (3/7) benchmarking "month"...
    done (took 1.736608944 seconds)
    (4/7) benchmarking "year"...
    done (took 1.736125746 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.737529862 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.73754225 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.73658952 seconds)
  done (took 13.83314775 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.739919692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.905192069 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.979902652 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.422692458 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.739933885 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.743200973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687952395 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.744057277 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.74510806 seconds)
  done (took 19.38155911 seconds)
done (took 105.662914985 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.568930397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.736228237 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.10427142 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.794781024 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.792724797 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.033814937 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.755027483 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.959178567 seconds)
done (took 42.42259617 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.803172246 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.216052074 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.222108498 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.509180651 seconds)
  done (took 11.62271418 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.729346595 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.256711142 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.779483476 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.326090201 seconds)
  done (took 19.779319513 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.106803436 seconds)
    (2/2) benchmarking "read"...
    done (took 2.104905921 seconds)
  done (took 5.890713284 seconds)
done (took 45.775153248 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.741610612 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.739044336 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.742141193 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.738964976 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.740854997 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.738293577 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.739828766 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.741986194 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.741554124 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.741739753 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.741943625 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.741346676 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.739560368 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.738963052 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.74340354 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.741700777 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.73960073 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73983096 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.742355507 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.73896726 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.742895601 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.739404605 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.73973603 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.740092139 seconds)
  done (took 43.451329298 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.742068977 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.741976323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.742172236 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.742534047 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.740184794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.742418205 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.74345476 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.740802847 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.742029915 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.742356686 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.739835882 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.740289374 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.744906048 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.740838426 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743228713 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.740836174 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.743057611 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.740811048 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.744545331 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.740818087 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.742920768 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.741276608 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.74120061 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.743949822 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.741210102 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.741001258 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.744227189 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.742373519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.744258343 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.742664456 seconds)
  done (took 53.941763551 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.748012934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.750810472 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.743465069 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.744328277 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.744722316 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.744936612 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.744111163 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.745279818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.744407098 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.74431495 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.744431075 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.745003791 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.743712997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.745186806 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.744242346 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.744758738 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.745847577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.74488462 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.744792396 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.744629463 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.745055583 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.745679352 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.744368951 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.744566877 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.744767669 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.745345172 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.744164756 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.746084995 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.744798648 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.745564011 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.745769725 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.745272022 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.745609289 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.745952666 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.74599913 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.745130604 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.749835493 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.752454987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.74575646 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.745999535 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.746052421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.745441327 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.746271099 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.745894818 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.746961118 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.745939102 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.745885039 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.746770547 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.746597418 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.745358093 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.746892337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.745917545 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.745953733 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.746301417 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.746261054 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.74656946 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.747672656 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.746362667 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.74720955 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.74698257 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.747824242 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.747322176 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.748471846 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.747226845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.748298172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.747302754 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.747597662 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.747966721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.748487276 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.747210575 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.748029091 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.747754308 seconds)
  done (took 127.401600232 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.74869622 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.745998197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.745496914 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.745861411 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744588812 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.747835119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.745877865 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747833869 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744645721 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.747183389 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.747819619 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.745939581 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745298411 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.748001952 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.748316465 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.745702655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.748438618 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.74625779 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.748112092 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.748418876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.748394376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745456138 seconds)
  done (took 40.112478595 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749768256 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.749036231 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.74657413 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.748487097 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.746683512 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.749017775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.749684679 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.748568603 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749042607 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.746551253 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.746247842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750261379 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.746611635 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.746191347 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.746953193 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.747844789 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.749043673 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.747856107 seconds)
  done (took 33.147858245 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.74738758 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.746751175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.749267565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.746900359 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.748458541 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.750701374 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7475114 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751117144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.750177597 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.748334788 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.749902896 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.751006658 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.750024459 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747339339 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750641787 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.749390869 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.750832802 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747481543 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750539278 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747992242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.748038106 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.752541906 seconds)
  done (took 40.166202867 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.751471751 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.749981967 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.748743925 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.748841911 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.749953467 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.751372012 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.750934811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.748222639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.750469962 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.751749693 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747908412 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.750194791 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.748695553 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.749487697 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.74807207 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.749879257 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.750764524 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.749611774 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750519853 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748688946 seconds)
  done (took 36.681399732 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.75265062 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752707434 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.752369074 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752670021 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.752206454 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.753279553 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.752568628 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.752913943 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.752028249 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.753170865 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753031958 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.753824584 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.752948657 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.752691582 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.752649378 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.753740656 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.75339628 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753014168 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.753859454 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753776463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754479917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.753396713 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.753367521 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.754923181 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.753310538 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753404927 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.754704958 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.753447033 seconds)
  done (took 50.777171224 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.752457028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.752664487 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.750857294 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.750531686 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.750257004 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.751698915 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.751293576 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.750798552 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.752986852 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.750527997 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.754104758 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.753956554 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754371089 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.753381932 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.753452011 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.753856665 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.753325435 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.751300803 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.752613635 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.751544525 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.753933407 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.75440463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.754767534 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.751113907 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.751538298 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.75416028 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.752353551 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.751816875 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75450922 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.751841669 seconds)
  done (took 54.265758658 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.772069197 seconds)
    (2/2) benchmarking "in"...
    done (took 1.773745348 seconds)
  done (took 5.23382401 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.752649254 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.754890815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.754959234 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.752249411 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.752753338 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.754914786 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.754755462 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.752383069 seconds)
  done (took 15.718873064 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.755323043 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.755550469 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.75553551 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.755435163 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.755692869 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.758184394 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.764630595 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.755367114 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.759753285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.75673423 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.762745762 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.76559546 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.76113181 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.757276495 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.757448976 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.758703337 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.7557435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.755996314 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.756791874 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.757356576 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.756651056 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.759410056 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.759091877 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.753701943 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.758608961 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.769877607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.763649909 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.755728443 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.757725314 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.764068281 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.757606522 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.754885513 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.757421719 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.756760201 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.757445927 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.75723232 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.768337554 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758697948 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.764694083 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.757037541 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.757964365 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.754338574 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.760043641 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.761173063 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.758948974 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.758180172 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.757854465 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.754981883 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.758833067 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.761295803 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.76164177 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.75750786 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.755035503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.769699205 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.761304362 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.765603235 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.758718247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.761766691 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.766939787 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.770999949 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.774387805 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.766590643 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.761121403 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.758721097 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.769856638 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.782088914 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767727353 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.755845628 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.755742108 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.759125952 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.767793698 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.774541141 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.768149108 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.759299026 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759098217 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.759333208 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.761540785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759335831 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.768486143 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.762875746 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.759562116 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.759049807 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.769888504 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.781361166 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.75985332 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.758801701 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.760183912 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.760020346 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.76114992 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.771440453 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.760404696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.760163862 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.760348517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.76203785 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.763424315 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.761117817 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.759849222 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.762580982 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.757066311 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.760805138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.760689405 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.763653194 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.770233615 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.762043313 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.760612051 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.769586403 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.760772406 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761070357 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.773017883 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.760516385 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762249225 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.762496508 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.770782134 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.758075666 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765455012 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.770490494 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.762359386 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.763481995 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.761313793 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.761289132 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.772500003 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.787630038 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.760759654 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.762228154 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.768706465 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.77239897 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762122106 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.766962958 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.762352148 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.759362531 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.759696621 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.765253798 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.762207584 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.765197364 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.762434652 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765645148 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.759881962 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.761888355 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.762601438 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.764966714 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.766711047 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.764144136 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.765852322 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.766941179 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.763486577 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.765754236 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.771168797 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.764746064 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.764933783 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.76490514 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.760807417 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763242325 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.765848626 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.763817627 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.765022014 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.763313707 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.763825419 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.763359035 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.763589051 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.764260191 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.763833424 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.766107571 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.767902114 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.764304045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.770048698 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.764183096 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.761721269 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.764687307 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.764097719 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.765794347 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.764201628 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.764183684 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.767679584 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.772199474 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.764210277 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.764810787 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.770046623 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.765675766 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.76549895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765170649 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.768375864 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.774338732 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.765037786 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.774753161 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.765882635 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765510196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.765311995 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.766500623 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.76601224 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.765818812 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.768860028 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.771751701 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.7821312 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.775012691 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.767717994 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.76939549 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.767076335 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.768907876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.772744081 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.766216049 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.765695969 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.76589632 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.766157446 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765514172 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.769612889 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.765863246 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.76654464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.765785312 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.765697275 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.766302559 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.766054267 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.768156295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.770168663 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.76353291 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.766300614 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767289855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.766161323 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.763813139 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.766800484 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.76732342 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.766505604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.767119491 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.77724739 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.764481047 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.769667147 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769238012 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.768916761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.766795444 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.767545619 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.770930459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.768439963 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.77646349 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.769152587 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.769768118 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.77539467 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.768469912 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.767938046 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.772122258 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.76850785 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.764397774 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.772006176 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.774925585 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.767679542 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.768781622 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.768616495 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.768785561 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.768238446 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.777429649 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.766164645 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.768333179 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.76737309 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.772733467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.765582857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.77114287 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.770680451 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.770345016 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.772327 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.769646941 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.76808802 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.772351154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.771415775 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.770395742 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.770733121 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.773099091 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.776270301 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.77656954 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.77106233 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.773856199 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.772472314 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.77239343 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.770808978 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.770667308 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.769726403 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784754371 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.777776441 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778276956 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.774442528 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.769660406 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777308741 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.771431919 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.777012259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.770601498 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.771709043 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.771005124 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.76967484 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.767829532 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.772318438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.770209364 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.773415426 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.772284254 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.773666147 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.771647296 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.771794902 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.771790169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.771251773 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.770093445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.771972558 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.770996543 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.776737825 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.775430086 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.772412173 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.772024477 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779913742 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773684404 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.77450103 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.772107386 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.772482406 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.77187613 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.774737286 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.77265864 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.775357736 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.779149513 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.775095848 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.783277627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.77430236 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78308268 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.772086021 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.775547731 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.779400306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.768729503 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.772665157 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.77392803 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.772393751 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781367464 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.773362951 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.774467064 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.776274856 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772699674 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.773105342 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.771776476 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.773226035 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772539472 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.77289779 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783533941 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.774768125 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.77727753 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.77665798 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.770630867 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.773720402 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.772567304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.773050573 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.780717344 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.77495218 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.775720624 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.773609363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.775453919 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.773451815 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.775648631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.773761755 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.770358237 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.773840469 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.782486197 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.775584342 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778131243 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.773513979 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.785717876 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.773736348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782782308 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.774608337 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.776455531 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.774777717 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.773401361 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.777843465 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.774789132 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.777795313 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.774839832 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.775897905 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.777451543 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.774481695 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.779602911 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.776296769 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.775222425 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.775668636 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78535561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.796375852 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.777088456 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.778334253 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.771548842 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.777394644 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.778424649 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.775174941 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.776151762 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.778646592 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785770652 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.782739343 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.776593844 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.775713978 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.777705441 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.77574135 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.774601458 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.775764417 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.777214678 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.776096586 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.778916203 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.775877734 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.784447802 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.776044199 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.778000689 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779470013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.777645182 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.788159578 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.77595831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.77850766 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.777100679 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.776310155 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.778623307 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.77778145 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.77706628 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779680081 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.777804693 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.779376379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784280412 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.784655494 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.781089634 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.776899531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.778372272 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.779263132 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.779405989 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778768472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.776947926 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.778453364 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.779808997 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.778372013 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.781078255 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.777627088 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.776596097 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.779215003 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.776779813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780981113 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.784877415 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.779468282 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.77452043 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.778611759 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.778490172 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.778063529 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.779990653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.790539381 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.782066974 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.7881303 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.786751759 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.782198742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.780212803 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.781720249 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.787556972 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.778277295 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.78123582 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.778595925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.782211643 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.780841019 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.783813283 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779523823 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.789089767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.780079121 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.780120854 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.789516949 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.780826947 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.779459713 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.781616015 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.785414995 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.780756455 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.778053001 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.779375831 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.779975543 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789255427 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.782597802 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.782296944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782894395 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.779856916 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.781860261 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.784300863 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.779635514 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.782759294 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.777652142 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.781959494 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.780730655 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780402674 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.777103892 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.781333559 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.782026987 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.783681936 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.78769623 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.777666136 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.784562027 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.782402654 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.782394133 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781572472 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780705141 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.777637894 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.778080711 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.781992426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.781668361 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.783058613 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.785777306 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.783622392 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.784077519 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.783043233 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.782219423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.785435008 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.791360753 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.788771891 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.778631895 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.781936369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.782615568 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.785928647 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.781786965 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.782583492 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.784034457 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.785375023 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.781587514 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.782514437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.781960262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.785917133 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800762119 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.782326963 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.783666576 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.78522974 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.790115461 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.781498849 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.77876895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.782053438 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.787041063 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.786790756 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.790052973 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.78278239 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.792593469 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783766846 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.784995427 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.786301064 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.786911439 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.792605078 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.788194619 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783506771 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.78353317 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.789693042 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.800727349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.782807581 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793961555 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.812829855 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.786002394 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.787451609 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.783767607 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.783689506 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.783958877 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.787494499 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.784595994 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.783052608 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.784191182 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.784504624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.785614866 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792485621 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.786217176 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.783942467 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.783890741 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.785820187 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.7885554 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.781788565 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.785362725 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.784139967 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.784561016 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.784841703 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.78571354 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.78769839 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80038174 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.796827314 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.784307291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.785272024 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.781985933 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.791316077 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.788592645 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.796251999 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.792568585 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.785442886 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.787401592 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.787939999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.785381259 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.782909082 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.787704878 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.787045796 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786575962 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.782910805 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.801554117 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794387545 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.792583875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.788346806 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787328464 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.786034041 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.789876181 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786224986 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.787701066 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.790715704 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.787664702 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.790470083 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.785775648 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.785586915 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.790533305 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.793384299 seconds)
  done (took 1058.759627554 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.784440342 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783937451 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.783700927 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.78397839 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783872558 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.783302782 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783991649 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.78435615 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.784629004 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.783994754 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.783738741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783746281 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.783633174 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.78399428 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785013154 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.784402044 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.784166079 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.784695392 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78505551 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784772921 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784497246 seconds)
  done (took 39.187393659 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.786650102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.784087568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.784222257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787686202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.784824136 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786853837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.784317767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.786988098 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.787569247 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785582272 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.787923277 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788798614 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.785808052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.785841367 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78603256 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787984968 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.788311939 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785147932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.788432549 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.784982137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788836826 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.78555102 seconds)
  done (took 41.023397175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.788747075 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.788599875 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.789250931 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.786296677 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.787837493 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.785700568 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.788894701 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.788507162 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.789506055 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.791292725 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.78899424 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.790414699 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.79663268 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.793382017 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.794525186 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.789576023 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.933516947 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.7898878 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.790049345 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.790407353 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.786845813 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.796894034 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.787294836 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.78662015 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.789523794 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.790424129 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.789786803 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.790340253 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.789905546 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.791729419 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.794609047 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.789717474 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.790838554 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.79376031 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.790808935 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.792002522 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.794921518 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.791046183 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.786998438 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.790413246 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.801381558 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.809905456 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.791861727 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.798881006 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.790322387 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.791279842 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.79544873 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.798404716 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.789189813 seconds)
  done (took 89.646454094 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.791258934 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.791926535 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.787929113 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.791065848 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.792161725 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.791998078 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.791815199 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.791389666 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.789736718 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.788997195 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.791828733 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.790597276 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.788575732 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.791156071 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.79255252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788950731 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.789061212 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.789308875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.789678074 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.788755283 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.789203212 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.79233393 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.792117785 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.789173309 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.791915752 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.790707482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.789733452 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.792342258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.789644849 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.790708663 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.792406554 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.793323515 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.791715041 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.78940608 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790234598 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.792764228 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.79331774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.78953543 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.79280869 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.790051096 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.792900907 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.792299707 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.794191432 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.793032913 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.790650878 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.790813357 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.790205292 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.790912311 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.791721044 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.793074866 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.793528705 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.791031074 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793692694 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79256609 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.793549159 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.794826951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.791421327 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.792223083 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.7943811 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.793252934 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.791611939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794410395 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.792186664 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.794522322 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.795415559 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.792055319 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.791883189 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.794375361 seconds)
  done (took 123.555789193 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.795587276 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.7960996 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.794724474 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795606329 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.795862706 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.795791974 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.795859848 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.795417213 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.795180957 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.79630264 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79591287 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.79479751 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.796578718 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.795265659 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796055187 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.796004064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.795549407 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.795876773 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.796483427 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.795795766 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.795698241 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.795912582 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.796808424 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.796588067 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.796893097 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.796452267 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797188299 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.79677072 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796936353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.797983015 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.797257546 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.795995491 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.796692581 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.796704093 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.797545181 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.79701421 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.797753862 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798403944 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.796807706 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797484353 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797170658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.79776558 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79743318 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.797530589 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.797074436 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.798284232 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.798068413 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.798577153 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.797134639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79834479 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.798025996 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798357046 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798078226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798629285 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.798657999 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.797487166 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799164099 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.798072867 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798234503 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.798181485 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797511484 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.797646261 seconds)
  done (took 113.139206645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798636118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.79878585 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.795227606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.794958763 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.798053335 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796487532 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.797661784 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.798571334 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798487065 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.798272025 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79833318 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79548503 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79584267 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79844797 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.795304242 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795427726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796225452 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79595351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798791863 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.796378735 seconds)
  done (took 37.672642208 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.796258497 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.798720797 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.796644138 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.797769006 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.8002537 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.796823206 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.800299037 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799343502 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797315737 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800067267 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799914142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.800764542 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797977893 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797461076 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.799976341 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.796927689 seconds)
  done (took 30.508616146 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.798091099 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.800828366 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.799400006 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.801287179 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.798611163 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.796953301 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.801159076 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.797231239 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.797553862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.801293711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.799812374 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.801302929 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.800570348 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.800305935 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.797830399 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.801325922 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.79805054 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.798057077 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.800026731 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.801398332 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.799313725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.798614465 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.801283449 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.800931854 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.798539784 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.799140417 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.798401115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.797771159 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.799736454 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.801381155 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.798921762 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.799163234 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.79862563 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.798883879 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.803230296 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.798507704 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.802398014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.801065001 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.802265392 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.80280994 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.801062657 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.799730259 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.802210443 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.802843714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.79948268 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.803160392 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.800128963 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.800406403 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.800180338 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.801038919 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.802758587 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.803498192 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.802527899 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.803467127 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.802694579 seconds)
  done (took 100.752022615 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804125099 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.802982704 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.799674766 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.802896148 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.802769243 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802190029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.80327649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.800550779 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800890984 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.802768223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.801017054 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.803042576 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800879013 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803469461 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.802067811 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.804052239 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.801272896 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.801160079 seconds)
  done (took 34.175346798 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800710565 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.801083842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.804078876 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.801457546 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.800898054 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.803299214 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800707903 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.804002068 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803662616 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.801819749 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801777143 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.804585229 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804063018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.803898529 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.801494091 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802383855 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.803865681 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804608079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.801723377 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.801791978 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805450163 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804211962 seconds)
  done (took 41.398704265 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.805089026 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.804919031 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.823059587 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.849777463 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.836325084 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.805608947 seconds)
  done (took 12.662561925 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803600114 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805066397 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802522083 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80589891 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806392031 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803901325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802622637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803581405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805970082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803984121 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804249961 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805601806 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806421267 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803463903 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806516351 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806705861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804374506 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804018166 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80372822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805799109 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803654814 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806295238 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803638265 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804235879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803630924 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803381114 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806604674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804775459 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804022128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806950497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806381607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803880795 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806753677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804295326 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807087184 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806577568 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804496711 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807642275 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807840745 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804292521 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.806921294 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807134394 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807091634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804512464 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807736137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80470197 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804818029 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804429437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804678478 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808130364 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808644451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806371402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807940358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808718122 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807361944 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808012498 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805678569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806028049 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807686319 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80650277 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80614734 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8080929 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806834496 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80744004 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808342018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805688421 seconds)
  done (took 120.917562439 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80690507 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.805950223 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80653303 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806460555 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806315578 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80688771 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807231395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806402668 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807248584 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806128311 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809869114 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807485103 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806271729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806437886 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806972906 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806083458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806489863 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807208646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806029514 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809227722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806800915 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807044987 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806790294 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807058929 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806723783 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809013217 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806460007 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806829123 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808465753 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806799726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807237201 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807153527 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807279811 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.807710731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807255263 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807865198 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807486534 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808120229 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807951362 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810295213 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807172501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811538441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808817738 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808230235 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809619539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808115923 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808433179 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808141125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808219464 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807803234 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808911311 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808464037 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.808826436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809109536 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808270513 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808763504 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80893972 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808624781 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808511879 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811436516 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80844782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809956495 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811798603 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808417082 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808519233 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80872544 seconds)
  done (took 121.065190697 seconds)
done (took 2467.041455646 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.801212574 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.834038369 seconds)
  done (took 15.379372945 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.971361161 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.921821692 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.80761104 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.840013793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.808680792 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.821216927 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.821538165 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.808767441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.807896626 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.808397541 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.808143279 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.995148505 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.828302775 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.808064946 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.808314097 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.903565483 seconds)
  done (took 51.31555408 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.812092816 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.814023613 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823929789 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.81445923 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.812298465 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.823747755 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.845425821 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.815411309 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.845810981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.833497098 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.880253886 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.821563484 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.814269581 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.860068503 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.82438739 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.827035844 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910628747 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.885363013 seconds)
  done (took 34.806657841 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.888996287 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.81123806 seconds)
  done (took 10.4496617 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830912449 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.824538261 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.820498359 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.839064691 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.813687382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.803983916 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.816621881 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.828870655 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.831274178 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.838533226 seconds)
  done (took 69.993564324 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.817744909 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814587344 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81400384 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.812066286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.805399503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.809698493 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.8124335 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.808828823 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.49316456 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.848314014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.818357307 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.820172669 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.812765559 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.815076992 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.8107956 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.836144756 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.930514485 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.810490351 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.809227948 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.819026509 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.813853189 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.904761578 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.828845473 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.812845765 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.842703277 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.493657209 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.821144333 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.821703361 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.950163174 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.811398429 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.813476375 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.815113075 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.816489193 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.212668271 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.136030025 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.812972757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.823536947 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.822021616 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.811288452 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.985337566 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.817227431 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.821246987 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.808668545 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.122372689 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.897333759 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.855761649 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.143645462 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.819423544 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.81662925 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.845795325 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.816951401 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.815967166 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82824235 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.338209858 seconds)
  done (took 129.764535276 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80923946 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.385692979 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.974179686 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.810354336 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091309519 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051888475 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.810191195 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859856271 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.810646091 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.059656649 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988270389 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930603936 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.811489971 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.812960821 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.813542168 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.809631138 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.964042392 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.882017336 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.813560345 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.810631663 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846044051 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075635592 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.93825909 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.815380543 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.833671659 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039540576 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.938942145 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927576767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.289232588 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.809844106 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.878703435 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.81296327 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.811186527 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811423237 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976602532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.921700157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909698922 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.812901958 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.810920141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.811316931 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.474853534 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034294155 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922612443 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.949790633 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.060764467 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040824745 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.459563967 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.810984469 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.44991869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008280094 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021143706 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066207463 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941334834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.814501028 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.052733421 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.811919517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810604738 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.0748735 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039717162 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927054552 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.814588586 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.813720037 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.812375315 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.129350625 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.814569076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.923534905 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.816234188 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.81441645 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924997548 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930366765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.048266642 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.05697348 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.843524606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.67437248 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.325266862 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.097075934 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.883971263 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076513378 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.814581212 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.813169449 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908014574 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.56965556 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986292746 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.130164274 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079096712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856094503 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.41706474 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.812806216 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.06122453 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.063672646 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.04496033 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060510491 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981231904 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.135606399 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.813057533 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.814146963 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.010441323 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.947147027 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.816381499 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.179390328 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063758556 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.543225067 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.845168093 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11950546 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953030974 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.817826283 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.440079672 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.815652692 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.01701436 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85794762 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.814806604 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816036425 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.061798642 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.686114594 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.816329982 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.594996694 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.883180501 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.819395702 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080899049 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818244351 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057259549 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.818271606 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126666181 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.332425746 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8600517 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008436198 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.060242749 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.608579421 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084154267 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.1306005 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.942010842 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07571951 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.638187514 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81813248 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100922504 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818536786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815975972 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.986079487 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816978467 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.971860356 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.820251985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077351915 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843072474 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.987799452 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820700856 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.091535524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862643592 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.870739269 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.820534492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.935596101 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.818844417 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.871862289 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.002673485 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817805632 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.817057994 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.393121816 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.816343616 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966627615 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.11765156 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.843093852 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.890358179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.347327908 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.818704743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913311042 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846477152 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.414721876 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.817877906 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.989414245 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.822926484 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.81634864 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818004737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.126987488 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.041563858 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81943009 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.818302342 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.615237447 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.524424395 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8184063 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.995599473 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.052337684 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.471274777 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040939254 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.824837103 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952571302 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.824197589 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.896778485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171945677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.819117615 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.820227599 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.819231927 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.818982519 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.818676652 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.047126764 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.849796011 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.515893638 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.958014996 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065242961 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.132826497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.082420486 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869537476 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.821736628 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.088340747 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822527177 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.888185062 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.821652658 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.84620809 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068564588 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.822454639 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.050200181 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.10827582 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.869770427 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.871480412 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.823130652 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82150818 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.820664684 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966777859 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922380937 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823687423 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.822172136 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939822893 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948635694 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010296781 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.412394672 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.996670417 seconds)
  done (took 892.044139528 seconds)
done (took 1205.501384952 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.821033916 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822683894 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.808011626 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.823750287 seconds)
  done (took 29.034253778 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.829902359 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.82675545 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.828446609 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.827439763 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.828916081 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.82731503 seconds)
  done (took 12.727879659 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.86850773 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.823980729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.824520399 seconds)
  done (took 21.276300485 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.895701258 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.230840202 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.938999832 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.272731205 seconds)
  done (took 10.097474295 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.829643516 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.829054676 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.828565623 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.830717446 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.83059209 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.832877286 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.830219117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.830725711 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.831449484 seconds)
  done (took 18.234075761 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.060305542 seconds)
done (took 97.19296444 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.173585836 seconds)
    (2/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.230860551 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.197518798 seconds)
    (4/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.96338509 seconds)
    (5/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.703450501 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.257783916 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.966196966 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.842907536 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.862712422 seconds)
    (10/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.841112977 seconds)
    (11/309) benchmarking ("sort", Float64, false)...
    done (took 5.648758859 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.208016763 seconds)
    (13/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.074080624 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.854281047 seconds)
    (15/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.848112019 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.720744026 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.853545752 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.920223927 seconds)
    (19/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.847344214 seconds)
    (20/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.93206726 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.74950366 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.826847981 seconds)
    (23/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.226654864 seconds)
    (24/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.156577031 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.507305504 seconds)
    (26/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.345370846 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.012209715 seconds)
    (28/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.062582492 seconds)
    (29/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.190000637 seconds)
    (30/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.826573077 seconds)
    (31/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.901781226 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.828965379 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.895492944 seconds)
    (34/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.928916872 seconds)
    (35/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.017293868 seconds)
    (36/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.997492689 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.06442965 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.41505662 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.932648798 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.92586616 seconds)
    (41/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.125085217 seconds)
    (42/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.8528945 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.040752901 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.836035941 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.408278107 seconds)
    (46/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.90931449 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.82565576 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.133522694 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.278330006 seconds)
    (50/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277065745 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.939248287 seconds)
    (52/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.327354376 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.42080989 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.083427852 seconds)
    (55/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.724248701 seconds)
    (56/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.909737142 seconds)
    (57/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041996045 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.171982873 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.039124619 seconds)
    (60/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.955341682 seconds)
    (61/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.027277637 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.83036536 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079734569 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.885737764 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.153072384 seconds)
    (66/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.999140558 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.876161596 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974050407 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.897216895 seconds)
    (70/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.994412684 seconds)
    (71/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.923207344 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.484416226 seconds)
    (73/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.81327354 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.804592169 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.902198759 seconds)
    (76/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.804171836 seconds)
    (77/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.923026325 seconds)
    (78/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.417738932 seconds)
    (79/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.813777302 seconds)
    (80/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.001187574 seconds)
    (81/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229940932 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.63577676 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.208498225 seconds)
    (84/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.865522679 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.6099508 seconds)
    (86/309) benchmarking ("sort", Int8, false)...
    done (took 4.830090155 seconds)
    (87/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.915558457 seconds)
    (88/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.938037445 seconds)
    (89/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.853745307 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.613402543 seconds)
    (91/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.019783684 seconds)
    (92/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.843560732 seconds)
    (93/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.155860351 seconds)
    (94/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.920522182 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.838137378 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816254595 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.856439349 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.289477206 seconds)
    (99/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.814955366 seconds)
    (100/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.924093761 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 5.594641208 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.817679341 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.857200866 seconds)
    (104/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.03051706 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.124893699 seconds)
    (106/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.833361458 seconds)
    (107/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.160677507 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.997342785 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.81692297 seconds)
    (110/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.192402302 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.030184761 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.99460888 seconds)
    (113/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933577181 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.748376988 seconds)
    (115/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.203088634 seconds)
    (116/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.833786772 seconds)
    (117/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.049658918 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.835460906 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.702600961 seconds)
    (120/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.111184438 seconds)
    (121/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.503408787 seconds)
    (122/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.09318648 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.910932103 seconds)
    (124/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.90800842 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.81837604 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.942580098 seconds)
    (127/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.605886321 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.840899466 seconds)
    (129/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.345710265 seconds)
    (130/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.816875123 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.851806967 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.864612447 seconds)
    (133/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.896196327 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.080519544 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.963753946 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.832976472 seconds)
    (137/309) benchmarking ("sort", Bool, false)...
    done (took 2.28568268 seconds)
    (138/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.85704857 seconds)
    (139/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.234865861 seconds)
    (140/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.14671042 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.304607456 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.183928921 seconds)
    (143/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.8585011 seconds)
    (144/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.96045305 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.051348956 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.850814319 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.744763075 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.108839811 seconds)
    (149/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.701590193 seconds)
    (150/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003156563 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.213874538 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.936419161 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.859236194 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.834625121 seconds)
    (155/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.836920469 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.428784644 seconds)
    (157/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.964032726 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.943167332 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054467843 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.86260469 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.914534676 seconds)
    (162/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.903200183 seconds)
    (163/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.184094669 seconds)
    (164/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.97862492 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.859628629 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.128003059 seconds)
    (167/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.980195936 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.836837049 seconds)
    (169/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.080435904 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.900854839 seconds)
    (171/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.754719202 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.223605145 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.823703155 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.762443695 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.142272925 seconds)
    (176/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.971867358 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.490735777 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.889290734 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.536227921 seconds)
    (180/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.942395056 seconds)
    (181/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.173875211 seconds)
    (182/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.179815928 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.166530882 seconds)
    (184/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.840677982 seconds)
    (185/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.951039329 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.864600346 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.670785837 seconds)
    (188/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.841144482 seconds)
    (189/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84574616 seconds)
    (190/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.05229583 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.495320511 seconds)
    (192/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.845987422 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.876580266 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.216724324 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.839525887 seconds)
    (196/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.905720951 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.840890394 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.799849638 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.896358452 seconds)
    (200/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.018191779 seconds)
    (201/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.823624908 seconds)
    (202/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.275267134 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.8638367 seconds)
    (204/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.837145134 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.962818549 seconds)
    (206/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.836660688 seconds)
    (207/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.963076616 seconds)
    (208/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.918020004 seconds)
    (209/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.008858549 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.37351127 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.044563542 seconds)
    (212/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.9640252 seconds)
    (213/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.862137706 seconds)
    (214/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.105056613 seconds)
    (215/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.838741741 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.826805079 seconds)
    (217/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.446009445 seconds)
    (218/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.936962997 seconds)
    (219/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.916657967 seconds)
    (220/309) benchmarking ("sort", BigInt, false)...
    done (took 6.839367543 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.172479705 seconds)
    (222/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.34338167 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.082371015 seconds)
    (224/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.124009897 seconds)
    (225/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.945294951 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.858879927 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.862539917 seconds)
    (228/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.971662491 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409151278 seconds)
    (230/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.15174211 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.838989355 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.888455152 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.074843443 seconds)
    (234/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51765063 seconds)
    (235/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.845101955 seconds)
    (236/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.929043874 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.824514167 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.182424122 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.840450502 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.493113623 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.839277706 seconds)
    (242/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.989396458 seconds)
    (243/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960112597 seconds)
    (244/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.350829944 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.893501094 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.940084927 seconds)
    (247/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.115265216 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.206557936 seconds)
    (249/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.916383813 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.825395379 seconds)
    (251/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.938087233 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.109553677 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.868539748 seconds)
    (254/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.264243477 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.940287646 seconds)
    (256/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.010989942 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.839973009 seconds)
    (258/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 3.572401873 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.855287376 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.863737026 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.896484177 seconds)
    (262/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.204037746 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.220205051 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.912646249 seconds)
    (265/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.863961098 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.227373343 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.911169856 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.137581642 seconds)
    (269/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.828705942 seconds)
    (270/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.876195196 seconds)
    (271/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.130420498 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.105956245 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.638074394 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.908030086 seconds)
    (275/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.125692232 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.825540445 seconds)
    (277/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.843044819 seconds)
    (278/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.843230077 seconds)
    (279/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.151167131 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.926870756 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.147546267 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.846420614 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969739889 seconds)
    (284/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.982113375 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.959401745 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.889134397 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.840060767 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.828647168 seconds)
    (289/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.731366845 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.088217354 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.866967743 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.483567704 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.14657128 seconds)
    (294/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.924318895 seconds)
    (295/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.378723598 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.357427312 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.358401765 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.889869192 seconds)
    (299/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.462612198 seconds)
    (300/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.01117903 seconds)
    (301/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.935343334 seconds)
    (302/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.693682229 seconds)
    (303/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.1281462 seconds)
    (304/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.730930815 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.867575841 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.769712031 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.853513564 seconds)
    (308/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.950737604 seconds)
    (309/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.902497291 seconds)
  done (took 1009.49857533 seconds)
done (took 1011.27931047 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.881128933 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.870795501 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.85547731 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.876630703 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.96631825 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.884088891 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.866856958 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.856969191 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.902650021 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.904104252 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.854035637 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.882645994 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.856586053 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.856131567 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.854708307 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869704758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.160317547 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.879591748 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.873315515 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.865630959 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.873303797 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.85443135 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.906222082 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.883001648 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.860742564 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.858772636 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.859722813 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.875940405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.968795346 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.861446296 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.859529804 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.868033815 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.159470055 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.877081004 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.851526516 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.876917598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.869121034 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.866642693 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.861812399 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.890074326 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.294405519 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.863074877 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.859190417 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.858779267 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.858829062 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.862598243 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.860144152 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.864654505 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870429084 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871421778 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.291395638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.877948485 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.861355722 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.859492622 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.870170688 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.859099843 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.861595356 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.873950128 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.878154268 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.874041617 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.151058607 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.885969823 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.859840877 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.874680298 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.86580595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.328769168 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.859667485 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.863104313 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.293064455 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.869437799 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.329203391 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.872567031 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.860656494 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.873875433 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.891234795 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.161490314 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.876657194 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.858098958 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.867102024 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.858090093 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.869220683 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.871752698 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.863479812 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.860496644 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.873396475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.888452636 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.870415546 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.861867242 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.869035323 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.87979173 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.868550927 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.871320484 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.862620297 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.855619131 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.870187227 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.864695065 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.863334813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.864886834 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.866376111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.871734017 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.293433452 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882172958 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.857409582 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.857251249 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.85945829 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.875102071 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.293471542 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.866748716 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.882713265 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.908842239 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.862194342 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.152635253 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.887032118 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.878496748 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.87043118 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.864177955 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.855521178 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.153515721 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.316979728 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.881502852 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.863515401 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.860207302 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.877792563 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.86297082 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.859011439 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164512657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.885366674 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.876091606 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.983321198 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.872903112 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.893690148 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.861206242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.865712106 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.890957317 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87890623 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.894390222 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.865616117 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.87912332 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.878647873 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.85981012 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.87364239 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.873721642 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.864261036 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.868313273 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.858096086 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.895330203 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.875729515 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875942017 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.884229222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.986137986 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.861659878 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.156234975 seconds)
done (took 292.280550925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.930655456 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.861412083 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.96426604 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.861286707 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.945782271 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.947650524 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.857412148 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.857485762 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.85786504 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.239590201 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.857896649 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.857374985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.8545728 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.858038023 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.945472486 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.859546632 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.857008742 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.202907157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.861665144 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.933369646 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.859614592 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.858137293 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.860969509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.242843773 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854626402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.85524125 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.9330157 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.860680188 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.208284193 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.855681361 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.856238161 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19964851 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.945214696 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.871608686 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.865912206 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.85675856 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.935821085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.852904793 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.93347664 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.934795013 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.952014826 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.88725943 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.84500189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.840147624 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.847843036 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.847032539 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.839605059 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.871400261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.83730749 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.838934959 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184146115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.850679926 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.848633573 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.839260656 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.834975871 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.86003261 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.835495457 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.839542835 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.932341242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.837041437 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.89954753 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.217451559 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216390279 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.834624178 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830574474 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829097295 seconds)
  done (took 183.140942446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.896571622 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.902901297 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.89759079 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.831813107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.880718326 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.897894458 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.83000332 seconds)
  done (took 14.899819683 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.833323418 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.825931205 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.879194564 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875663632 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.823763685 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.97558834 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823602605 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.837088679 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.818878083 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.876170687 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.8230466 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821452795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.829244782 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.818811653 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869637626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.833096239 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933561426 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819647982 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819058409 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.975767979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814857021 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.823256496 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.870877772 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.82824252 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.816178387 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.822346471 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.40213612 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.813318805 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809784984 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.812083371 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.810554693 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.856156285 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.810951606 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.807276127 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.809024713 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.926030286 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.809446497 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.805829538 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.808468482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.80769114 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.806431509 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.806490223 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.807420822 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.80110149 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.80340909 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.829096784 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.804119151 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.803628941 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.805228742 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.801490983 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.853711807 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.802121932 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.798672043 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.80126466 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.855805246 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.8070121 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.800605883 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.797002158 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.799643435 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.798864577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.955130774 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.846915498 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.797305477 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.846622926 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801872873 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.7954114 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.79555819 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.795500558 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851794941 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.795513227 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.84675241 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.791398995 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.955340703 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.818746218 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.794737316 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.800951556 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.796787546 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.793537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.79236458 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.800119385 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.790400802 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.795496477 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.799940727 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.790470352 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.790584129 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.900813794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.904412971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.79122826 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.807592422 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.802455546 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.790882698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.84753628 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.794033146 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.790125067 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846722033 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.341979733 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.850706644 seconds)
  done (took 200.029329959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.799106467 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.802072155 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.795973641 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.810422259 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.794851614 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.794029036 seconds)
  done (took 12.522206029 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.79734658 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.794384688 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.79314822 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.7937648 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.793889978 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.793730348 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.795025137 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.795189302 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.79727028 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.792033338 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.793631617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.796474816 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.792731172 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.790717244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.791783843 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.790352354 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.791457359 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.787655742 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.790300374 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.791514049 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.935720928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.791292763 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.79075437 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.793092618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.795230235 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.792422215 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.799695897 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.790795009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.790768107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.800201663 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.795075855 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.791870766 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.793778262 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.798733749 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.796323638 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.793931191 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.794905883 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.793180095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.789602819 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.792872495 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.793586504 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.792552662 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.792190074 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.794004993 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.79456338 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.79899789 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.797124694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.80158084 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.793777765 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.793820319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.794280168 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.79179324 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.792629549 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.794371288 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.798280153 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.798417812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.797309065 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.793504201 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.79366126 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.795669228 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.793948428 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.793738808 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.795362469 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.797107702 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.80064782 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.794447577 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.795004761 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.797390894 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.793398489 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.793672838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.793560335 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.790614138 seconds)
  done (took 132.053056559 seconds)
done (took 544.452869194 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.052216441 seconds)
  done (took 8.778326782 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.911319414 seconds)
  done (took 8.815416358 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.370698995 seconds)
  done (took 10.171352344 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.907236313 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.890021682 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.876659711 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.870227804 seconds)
  done (took 29.354886877 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.886994493 seconds)
  done (took 8.687659256 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.879653082 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.864691424 seconds)
  done (took 15.583195064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.920413663 seconds)
  done (took 8.722488718 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.900874574 seconds)
  done (took 8.704594902 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.882563101 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.870295904 seconds)
  done (took 15.568684996 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.851279978 seconds)
  done (took 8.652961051 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.557875714 seconds)
  done (took 11.367547385 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.866465908 seconds)
  done (took 8.681073592 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.941819381 seconds)
  done (took 8.743398342 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.987069796 seconds)
  done (took 9.789045723 seconds)
done (took 163.349443697 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.869164655 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.867026193 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.866384781 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.864974519 seconds)
  done (took 29.269790079 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.906050868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.905878797 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.906529837 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.915934046 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.909257105 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.906104657 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.897547777 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.897845063 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.916914119 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.909312278 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.90767744 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.908255636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.906488158 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.898224843 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.908525941 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.908142064 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.91710471 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.908071951 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.899473847 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.909610694 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.873565786 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.917615367 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.910273114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.874756079 seconds)
  done (took 47.52248246 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.070751166 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.946894496 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.028546221 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.926180035 seconds)
  done (took 9.775902041 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.92587596 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.926622764 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.938269818 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.97721175 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.009608536 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.936243334 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.901659166 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.895222193 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.88225177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.927313097 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.002225694 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.943338214 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.009468136 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.874159822 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.060870921 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.874213134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.874500225 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.926614108 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.978112896 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.990845023 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.874278413 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.926579926 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.929832719 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.94421284 seconds)
  done (took 48.334180859 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.874404963 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.882108135 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.879745653 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.873041386 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.873807139 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.874116433 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.879697205 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.875746981 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.894853241 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.875008457 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.873918154 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.873869761 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.873690958 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.874843104 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.874546712 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.886698578 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.887721591 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.875146815 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.878572086 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.881441261 seconds)
  done (took 39.367892061 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.870506738 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.817506553 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.221650483 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.126117619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.869489659 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.869260405 seconds)
  done (took 32.580692563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.888534166 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.93838215 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.883041559 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.932000394 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.011619804 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.882362649 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.877149797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.943380599 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.985210925 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.946006327 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.893167322 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.902456382 seconds)
  done (took 24.888722554 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.871097167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.872431444 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.875241066 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.889538638 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.887812453 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.883705551 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.884489728 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.869765161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.891415164 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.894497314 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.883696826 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.888747529 seconds)
  done (took 44.401493894 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959718754 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.915293706 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.896552806 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.566051198 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.247584963 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.085472024 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.472297841 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204272614 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.876835644 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140749988 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.982016833 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981495681 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127081188 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.302297346 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.90050721 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.336752638 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172193957 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083625628 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.899874822 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.578409009 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939820548 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.989374956 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.645594301 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933451038 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.08377879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.005613594 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.13439127 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87350756 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010202851 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91508135 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884041254 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873356033 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147895996 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262076756 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979283884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883940225 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.51332235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.590150925 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.862173005 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.685484902 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634990042 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007332893 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885025879 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874181889 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.808479803 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960585389 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249579988 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.879995059 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.585883265 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.87559871 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885277295 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968945761 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.877914435 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.690710205 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.78711324 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.876696776 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.874083665 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882846816 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443237126 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.016112953 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.002241482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.844894725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.965869643 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585471635 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262938198 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.027553407 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.879066613 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.879438102 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809806034 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.664246543 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932347401 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204770414 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.896756749 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.526191065 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184568474 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.049444908 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818891999 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14628299 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.350042108 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.845637027 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104029374 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.876511056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811941981 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.819078352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.810400384 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141600966 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919733009 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.636725322 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921649605 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209751632 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888548224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894029585 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901137113 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101493041 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.760657838 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877035936 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.778603004 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.028876743 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899210828 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204595473 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811909402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.880840759 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133768821 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.088652478 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.886500322 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366985846 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040541643 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370507852 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.926478754 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.969452333 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.922244363 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.146436365 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94073455 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.024721969 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935841885 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.878512995 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174179293 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408747908 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.010699151 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.038411527 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.005254355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.19668312 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909917689 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960155204 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.881008396 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.8784991 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.68517082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435321981 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.878645227 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.881126378 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.887379606 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.922440858 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.880599182 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825807226 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.500695724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027342767 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.893730699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104380111 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.381099223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189056607 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81478563 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208847024 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.972192858 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.103279191 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.52833023 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.966003934 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140068155 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887410182 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.920747577 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924458893 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899356279 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978113318 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907136688 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.970144782 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.170085659 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.885586551 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.885195631 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681356356 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.921493197 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.888084627 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.886228531 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.634845355 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153993206 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910038893 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888834367 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.771516099 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.895255235 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946507977 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887795366 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.891627595 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.413306851 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.613334802 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.890264939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.466451932 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107436546 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892696924 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.588930772 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002893802 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.965180957 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.154928966 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947009667 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.815324571 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.593059204 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.576184332 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881278833 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816432235 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880420874 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888353362 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890207983 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.075467785 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154676536 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922347663 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.578904129 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.92637058 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892573432 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.8868509 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882842436 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.390950028 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026532083 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.002831631 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924728734 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026101061 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.89634753 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816282461 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.886741481 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.887863446 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.883143156 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.882882016 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915260863 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.594276669 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258720487 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143544663 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.493563825 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896483852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.627573037 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.94224243 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.886148959 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638659401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.139281458 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.965453366 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894975552 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.895034281 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.669181871 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.592333025 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456641233 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207555995 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18856883 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320314368 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.025477138 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909393694 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219547254 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818385074 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441071953 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942999347 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229494988 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828895034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968487698 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.531903618 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237639541 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90162289 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111361955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.264187146 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.70221212 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034571137 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096006855 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919924031 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.968760234 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843724676 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.409008521 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026036255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603175454 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.099089792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221660909 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642322962 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.01652915 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.888492247 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558806262 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972328514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.599828644 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.05563043 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.006148666 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891133421 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364218134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.892572718 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110206725 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22983077 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.994201516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.00211192 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821370905 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.895627869 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.896470689 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.886649106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.881604055 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.769307797 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.139619011 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896363127 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819249938 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939874342 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168241611 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.787183879 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.890488664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889603161 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181076717 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.365514116 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051104511 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.932326244 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.401060292 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891449347 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.821855334 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816633081 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.577048277 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890795983 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861466441 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08933086 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.989604506 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.832733497 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902091512 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959684679 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139754344 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897949183 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.149913029 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157108096 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582849341 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911051844 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.982682783 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.599220607 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.006371195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.888749424 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.123698545 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645930186 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115555335 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.922821845 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.843827285 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.888080554 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100860064 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887578237 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.841132631 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127592397 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.612782305 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.983232189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.204391387 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964656107 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.880747228 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.940543685 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.981233606 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900669346 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968290474 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900043434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.900801052 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.90061148 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935965777 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88590859 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.019001187 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.903944402 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983250779 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.024758669 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.412722002 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.895824921 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162410765 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258165355 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209941015 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949444639 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.891651627 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891282328 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824390067 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03953801 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116969511 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165058539 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.022683816 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.008339774 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915497272 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.637838937 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.047146987 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129002045 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165853923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.785971902 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342812003 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926987969 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.889871409 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900191501 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.103731286 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.101841686 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196201875 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036643453 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914421422 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24854151 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163788794 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.889847323 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.891188871 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.478653692 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.997891232 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567458037 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.939687622 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88145233 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173141329 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904082229 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.272365399 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915680781 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.04974987 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.665898466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.629931776 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.182962056 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.881567931 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955846106 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164482075 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.272003404 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206652251 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96035962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906779902 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.003978804 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039589449 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.773405291 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.893586285 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.893365066 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.942124054 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.601604737 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902163319 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164319622 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.204700421 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.889873702 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.774387396 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916332839 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.90329397 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.116836533 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156805475 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150413379 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903342504 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.900729275 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.709107691 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163360032 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951747145 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827897674 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.897134819 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994586781 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.14232905 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914247495 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.346755864 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.605226952 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164619686 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.898641036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916899364 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.990324604 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.249691288 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213803744 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.426926961 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103556386 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486332538 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.411486005 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192710879 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.899697078 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.989046884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194735544 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.89875132 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.920472016 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931028161 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.162717021 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.207250319 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.001771939 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606552863 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.86479447 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.237702231 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457179685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833113537 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904999681 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.955342923 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.895331499 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.02426478 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90675695 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.778304799 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.988982211 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.669226598 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173257287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.900363065 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.885797867 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.711034383 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.130115785 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928635733 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038157056 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905533121 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.570865769 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.248020446 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.152421125 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915975001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.902945399 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.901032796 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896837239 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883138886 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.092389667 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.094381781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172751135 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.95221822 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.930956796 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900957356 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.112880734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.108575294 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.896601829 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041731169 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917950345 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936167259 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.808559003 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39816708 seconds)
  done (took 1681.398370862 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.924468844 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.91176516 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.939990259 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.911500122 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92328094 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02192668 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.939261423 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.901518093 seconds)
  done (took 57.307596747 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.898938642 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.120275186 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.909593573 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.900224377 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.908736526 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.900426538 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.06902853 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.909175327 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.909362898 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.910821352 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.901694153 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.899907414 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.212808119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.923072069 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917723781 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.886558088 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.90958881 seconds)
  done (took 74.924644058 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.901573567 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.102950426 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.928695279 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.915861308 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.902082468 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.919113189 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.698812863 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.921724963 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.902953981 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.011904086 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.535012418 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.922984012 seconds)
  done (took 87.500245428 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.909358226 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.907269556 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.908101185 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.908191764 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.90905342 seconds)
  done (took 11.379962637 seconds)
done (took 2190.48244656 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.153413968 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.112941706 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.130990619 seconds)
  done (took 6.079326877 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.051434079 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.098816687 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.219769361 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.225399368 seconds)
  done (took 10.43597818 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.189704878 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.287475222 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.114570282 seconds)
  done (took 8.428034305 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.300979508 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.904939251 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.011977628 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.901111135 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.90327662 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.904787681 seconds)
  done (took 22.547705948 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.905669745 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.908704192 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.905375591 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.908809844 seconds)
  done (took 9.466106483 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.887718094 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.639427925 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.888651883 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.904462428 seconds)
  done (took 21.158132236 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.655980637 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.66553649 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.650496143 seconds)
  done (took 9.81020997 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.550582843 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.838461432 seconds)
  done (took 9.226954173 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.160300521 seconds)
  done (took 3.998266945 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.038815757 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.169661493 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371499145 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.419155796 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.466009798 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.765770446 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.209231843 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.145201848 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.302570174 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.343456218 seconds)
  done (took 25.06990444 seconds)
done (took 141.432668227 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.280944547 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.269002681 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.100679151 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.280618461 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.127043039 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.098483493 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.123271245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.267028694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.748357607 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.748197378 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.281337358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.126735481 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.073944128 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.26722228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.071365514 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.266377438 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.122992865 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.29321607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.936762759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.133548148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.121378326 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.869924489 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.117100886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.882006441 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.118519786 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.045264664 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.443205417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.259271959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.078439079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.448920624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040473339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.270068255 seconds)
  done (took 170.15189519 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.809857009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889658772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.889205431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.889985958 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.551707527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.889258881 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.891986268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.891574854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.149235503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.118979937 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.890939399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.488183833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.891061494 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.891305948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.891639933 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.891120508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.236314577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.850530649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.891638619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890938227 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893262376 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.427007199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.890650286 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.392024572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.201608221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.890552479 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.891603759 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.891406327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.892261296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.896192781 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.901907949 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.891128054 seconds)
  done (took 209.671134214 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.891561721 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.892864404 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.892788124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.892222003 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.900346377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.890785063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.893898711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.891843904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.411459414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408273974 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.89245702 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.921099739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.893374572 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.892455174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.905420435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.893426252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.90265029 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.898031955 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.900697103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.904301956 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.907400235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.688696797 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893743314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.66866959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.894669244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.895377172 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.893481424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.366823134 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903808079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.904731472 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.903101416 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.889005752 seconds)
  done (took 221.617303581 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.090924325 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.889461689 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.890340439 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.844286503 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.891011166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.891126267 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.88396533 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.085560283 seconds)
  done (took 19.30795703 seconds)
done (took 622.604062315 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.41879209 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.201195488 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.072289918 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.913852799 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.145393593 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.957407042 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.910541799 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.978070413 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.64202003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.986015871 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.556083731 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.931850218 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.641520964 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.937141045 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.039525295 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.966331984 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.44792429 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.536824822 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.091318811 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.976130635 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.087004934 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.88360563 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.988476463 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.670596703 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.664085222 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.897139982 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.109311145 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452928527 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.923495329 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.077281966 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.644979433 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.324160998 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.924830024 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.909511642 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.961813312 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944901639 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.289481593 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.923521722 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.035920407 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.653881641 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.95949145 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.521320403 seconds)
  done (took 104.017765407 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.880747563 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.879340131 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.878704713 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.880345094 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.880658227 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.879876809 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.879098295 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.879678595 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.880170638 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.879997261 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.878822359 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.88178946 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.88008546 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.882061696 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.879950708 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.879845763 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.880985005 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.882407849 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.880579798 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.880300052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.880970846 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.879973546 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.881837762 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.880568084 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.881206263 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.881102584 seconds)
  done (took 50.722469219 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.894463306 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.037352643 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.119756419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.913651433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.894064618 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.897017682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.912977429 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.899464958 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.896896297 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.897161098 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988031259 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.899726676 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912853564 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.117970823 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.910642507 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.893494307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.894215978 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.894648971 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.042437053 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.912113198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.915469486 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.900022399 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.913785878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.909067005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.896578537 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.895675764 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.898481433 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.371329642 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.905309268 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.98925103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.973152232 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.918229649 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.328264624 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.129045329 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.963242602 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.902600159 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.895470365 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.994623051 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.901902166 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.898328086 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.914527148 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.901044671 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.11993887 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.397728946 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.910709739 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.896149347 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.37133092 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.001010902 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.937948596 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.911989751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.125032049 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.913343181 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.897110776 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.89747731 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.933092668 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912328758 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.897127794 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.2542776 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.908407835 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.914360752 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.901770721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.89885142 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050939001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.906367429 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.040896551 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.907459969 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.905367313 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.898290563 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.121826007 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914017799 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.399260283 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.910123307 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.894770374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.989110563 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.045481198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.398889563 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.909404159 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.054155697 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.34531564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.919986437 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.904558951 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.354777124 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925220238 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.905354913 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.89789505 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.897609253 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.897107839 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.941029222 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.913699055 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.332242474 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.403369597 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.268191501 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.92627387 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.913498761 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.898355198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.255455275 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.905552869 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.896372657 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.113097911 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.415483086 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.911086706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.904367309 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.381271263 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.912017394 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.917300155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.906125817 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.12423394 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.912230213 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.939259972 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.896915764 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.904100028 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.899734966 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.916579566 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.904839843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.896629116 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.371626563 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.007750642 seconds)
  done (took 235.254306628 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.894305912 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.893565019 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.893449415 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.893448805 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.89221653 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89781193 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.891976751 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.893209195 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.898612836 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.892444999 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.893554891 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.894066481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.893365194 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.898261232 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.932415682 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.899472277 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.503184284 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.892697088 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.893959822 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.893966734 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.5386095 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.903357251 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.892799221 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.898586786 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.893220132 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.893911083 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.901617067 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.925395729 seconds)
  done (took 168.213663119 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.89944089 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.016775795 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.919818574 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.926849654 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.910259207 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.896138363 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.922942064 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.915113742 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.904132681 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.896495108 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.896405714 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.960509331 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.914744043 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.998391475 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.931097546 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.930118122 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.00716531 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.907353676 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.897641886 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.897029022 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.92841426 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.894202625 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.960244872 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.030189083 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.920360143 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.015968563 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.905137505 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.900232716 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.900801154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018825802 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.918759709 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.960401418 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.934152674 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.919470785 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.020874802 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.020532843 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.006503763 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.929431116 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.908469548 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.898774003 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.899364785 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.889023229 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.017105187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.922217663 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.901296869 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008945666 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.92415384 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.90264344 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.909899388 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.898827554 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.916186703 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919160984 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.968565659 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.039382337 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.937058141 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.926339885 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.925857316 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.188777168 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.909083862 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.001965229 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.894927436 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.017664897 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.92450605 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.889501856 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.901005441 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906122845 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.928760573 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.932237942 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.010110442 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.908313378 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.003286205 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.936054138 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.906869728 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.90087191 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902603943 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.020922621 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.024512119 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.93625309 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.939469868 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.934096128 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898158954 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.903695398 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.890495051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.920314328 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.905551993 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.017362455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.024689057 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910310673 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903430406 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.904063081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.903785374 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.929106574 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.027240095 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.944385311 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.000742527 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.971799249 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.982267232 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.920463563 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.915361388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.905670486 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.966998085 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.920535178 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.913946438 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.235839242 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.973110727 seconds)
  done (took 205.987114194 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.99704321 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.388237161 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.95751283 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.958526356 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.177654712 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.331494408 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.711365154 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.952784182 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.952578516 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.978511436 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.113192333 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.01451924 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.966791522 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.940439243 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.346357448 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.942327838 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.951678465 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.973869134 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.955180241 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.509500669 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.258923639 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.076567827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.953186682 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.101100565 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.93375116 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.255146773 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.270970525 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.33300817 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.986603025 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.299848143 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.279517296 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.625551934 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.163339838 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.197292767 seconds)
  done (took 75.694872353 seconds)
done (took 841.712373425 seconds)
SAVING RESULT...
DONE!
